syntax = "proto3";

package gatewayapis.router.v1;

option go_package = "./gatewayapis/router/v1";

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

//路由管理服务
service RouterService {
  //获取可管理的所有HTTP路由
  rpc GetHTTPRouterList(google.protobuf.Empty)
      returns (GetHTTPRouterListResponse) {}
  //查询路由
  rpc GetHTTPRouter(HTTPRouterKeyRequest) returns (HTTPRouter) {}
  //创建或者更新路由
  rpc PostOrPutHTTPRouter(HTTPRouter) returns (google.protobuf.Empty) {}
  //删除路由
  rpc DeleteHTTPRouter(HTTPRouterKeyRequest) returns (google.protobuf.Empty) {}
}

message HTTPRouter {
  //服务名称
  string service = 1;
  //方法
  string method = 2;
  //远端path，即服务内地址
  string remotePath = 3;
  //挂载地址
  string servePath = 4;
  //是否需要鉴权后才能访问
  bool needAuthorized = 5;
  //是否开启只读缓存
  bool readOnlyCache = 6;
  //公共缓存
  bool publicCache = 7;
  //缓存过期时间
  uint32 cacheExpire = 8;
  //客户端到服务请求可传递的请求头
  string directThroughRequestHeaders = 9;
  //服务到客户端返回可传递的响应头
  string directThroughResponseHeaders = 10;
  //是否启用
  bool enable = 11;
}

message GetHTTPRouterListResponse { repeated HTTPRouter routers = 1; }

//三个参数需要都不为空
message HTTPRouterKeyRequest {
  //服务名称
  string service = 1;
  //方法
  string method = 2;
  //挂载地址
  string servePath = 3;
}