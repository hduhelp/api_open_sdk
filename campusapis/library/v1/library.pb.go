// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: campusapis/library/v1/library.proto

package libraryv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LendStatus int32

const (
	// 未知
	LendStatus_LEND_STATUS_UNSPECIFIED LendStatus = 0
	// 借阅中
	LendStatus_LEND_STATUS_LENDING LendStatus = 1
	// 已归还
	LendStatus_LEND_STATUS_RETURNED LendStatus = 2
)

// Enum value maps for LendStatus.
var (
	LendStatus_name = map[int32]string{
		0: "LEND_STATUS_UNSPECIFIED",
		1: "LEND_STATUS_LENDING",
		2: "LEND_STATUS_RETURNED",
	}
	LendStatus_value = map[string]int32{
		"LEND_STATUS_UNSPECIFIED": 0,
		"LEND_STATUS_LENDING":     1,
		"LEND_STATUS_RETURNED":    2,
	}
)

func (x LendStatus) Enum() *LendStatus {
	p := new(LendStatus)
	*p = x
	return p
}

func (x LendStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LendStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_campusapis_library_v1_library_proto_enumTypes[0].Descriptor()
}

func (LendStatus) Type() protoreflect.EnumType {
	return &file_campusapis_library_v1_library_proto_enumTypes[0]
}

func (x LendStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LendStatus.Descriptor instead.
func (LendStatus) EnumDescriptor() ([]byte, []int) {
	return file_campusapis_library_v1_library_proto_rawDescGZIP(), []int{0}
}

// 书本信息查询关键字
type GetBookInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 书本编号
	PropNo string `protobuf:"bytes,1,opt,name=propNo,proto3" json:"propNo,omitempty"`
}

func (x *GetBookInfoRequest) Reset() {
	*x = GetBookInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_library_v1_library_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBookInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookInfoRequest) ProtoMessage() {}

func (x *GetBookInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_library_v1_library_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookInfoRequest.ProtoReflect.Descriptor instead.
func (*GetBookInfoRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_library_v1_library_proto_rawDescGZIP(), []int{0}
}

func (x *GetBookInfoRequest) GetPropNo() string {
	if x != nil {
		return x.PropNo
	}
	return ""
}

type GetBookInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error int32     `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Msg   string    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data  *BookInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetBookInfoResponse) Reset() {
	*x = GetBookInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_library_v1_library_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBookInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookInfoResponse) ProtoMessage() {}

func (x *GetBookInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_library_v1_library_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookInfoResponse.ProtoReflect.Descriptor instead.
func (*GetBookInfoResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_library_v1_library_proto_rawDescGZIP(), []int{1}
}

func (x *GetBookInfoResponse) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *GetBookInfoResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetBookInfoResponse) GetData() *BookInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// 书本信息
type BookInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 书本编号
	PropNo string `protobuf:"bytes,1,opt,name=propNo,proto3" json:"propNo,omitempty"`
	// 书籍编号
	MarcRecNo string `protobuf:"bytes,2,opt,name=marcRecNo,proto3" json:"marcRecNo,omitempty"`
	// 书本条码
	BarCode string `protobuf:"bytes,3,opt,name=barCode,proto3" json:"barCode,omitempty"`
	// 书籍状态
	BookStatCode string `protobuf:"bytes,4,opt,name=bookStatCode,proto3" json:"bookStatCode,omitempty"`
	// 是否可借
	BookLendFlag string `protobuf:"bytes,5,opt,name=bookLendFlag,proto3" json:"bookLendFlag,omitempty"`
	// 年份
	Year string `protobuf:"bytes,6,opt,name=year,proto3" json:"year,omitempty"`
	// 价格
	Price float32 `protobuf:"fixed32,7,opt,name=price,proto3" json:"price,omitempty"`
	// 收录时间
	InDate string `protobuf:"bytes,8,opt,name=inDate,proto3" json:"inDate,omitempty"`
	// 年累计借阅次数
	YearCircTimes int32 `protobuf:"varint,9,opt,name=yearCircTimes,proto3" json:"yearCircTimes,omitempty"`
	// 总累计借阅次数
	TotalCircTimes int32 `protobuf:"varint,10,opt,name=totalCircTimes,proto3" json:"totalCircTimes,omitempty"`
	// 首次借阅时间
	FirstUseDate int64 `protobuf:"varint,11,opt,name=firstUseDate,proto3" json:"firstUseDate,omitempty"`
	// 最后借阅时间
	LastUseDate int64 `protobuf:"varint,12,opt,name=lastUseDate,proto3" json:"lastUseDate,omitempty"`
	// 记录标志更新时间
	RecFlagUptDate int64 `protobuf:"varint,13,opt,name=recFlagUptDate,proto3" json:"recFlagUptDate,omitempty"`
	// 登记日期
	RegDay int64 `protobuf:"varint,14,opt,name=regDay,proto3" json:"regDay,omitempty"`
	// 馆藏地
	Location string `protobuf:"bytes,15,opt,name=location,proto3" json:"location,omitempty"`
	// 中图法分类号
	CallNo string `protobuf:"bytes,16,opt,name=callNo,proto3" json:"callNo,omitempty"`
	// 书籍信息
	Marc *BookMARC `protobuf:"bytes,17,opt,name=marc,proto3" json:"marc,omitempty"`
}

func (x *BookInfo) Reset() {
	*x = BookInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_library_v1_library_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookInfo) ProtoMessage() {}

func (x *BookInfo) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_library_v1_library_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookInfo.ProtoReflect.Descriptor instead.
func (*BookInfo) Descriptor() ([]byte, []int) {
	return file_campusapis_library_v1_library_proto_rawDescGZIP(), []int{2}
}

func (x *BookInfo) GetPropNo() string {
	if x != nil {
		return x.PropNo
	}
	return ""
}

func (x *BookInfo) GetMarcRecNo() string {
	if x != nil {
		return x.MarcRecNo
	}
	return ""
}

func (x *BookInfo) GetBarCode() string {
	if x != nil {
		return x.BarCode
	}
	return ""
}

func (x *BookInfo) GetBookStatCode() string {
	if x != nil {
		return x.BookStatCode
	}
	return ""
}

func (x *BookInfo) GetBookLendFlag() string {
	if x != nil {
		return x.BookLendFlag
	}
	return ""
}

func (x *BookInfo) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *BookInfo) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *BookInfo) GetInDate() string {
	if x != nil {
		return x.InDate
	}
	return ""
}

func (x *BookInfo) GetYearCircTimes() int32 {
	if x != nil {
		return x.YearCircTimes
	}
	return 0
}

func (x *BookInfo) GetTotalCircTimes() int32 {
	if x != nil {
		return x.TotalCircTimes
	}
	return 0
}

func (x *BookInfo) GetFirstUseDate() int64 {
	if x != nil {
		return x.FirstUseDate
	}
	return 0
}

func (x *BookInfo) GetLastUseDate() int64 {
	if x != nil {
		return x.LastUseDate
	}
	return 0
}

func (x *BookInfo) GetRecFlagUptDate() int64 {
	if x != nil {
		return x.RecFlagUptDate
	}
	return 0
}

func (x *BookInfo) GetRegDay() int64 {
	if x != nil {
		return x.RegDay
	}
	return 0
}

func (x *BookInfo) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *BookInfo) GetCallNo() string {
	if x != nil {
		return x.CallNo
	}
	return ""
}

func (x *BookInfo) GetMarc() *BookMARC {
	if x != nil {
		return x.Marc
	}
	return nil
}

type GetBookInfoListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 书籍编号
	MarcRecNo string `protobuf:"bytes,1,opt,name=marcRecNo,proto3" json:"marcRecNo,omitempty"`
}

func (x *GetBookInfoListRequest) Reset() {
	*x = GetBookInfoListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_library_v1_library_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBookInfoListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookInfoListRequest) ProtoMessage() {}

func (x *GetBookInfoListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_library_v1_library_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookInfoListRequest.ProtoReflect.Descriptor instead.
func (*GetBookInfoListRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_library_v1_library_proto_rawDescGZIP(), []int{3}
}

func (x *GetBookInfoListRequest) GetMarcRecNo() string {
	if x != nil {
		return x.MarcRecNo
	}
	return ""
}

type GetBookInfoListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error int32       `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Msg   string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data  []*BookInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetBookInfoListResponse) Reset() {
	*x = GetBookInfoListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_library_v1_library_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBookInfoListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookInfoListResponse) ProtoMessage() {}

func (x *GetBookInfoListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_library_v1_library_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookInfoListResponse.ProtoReflect.Descriptor instead.
func (*GetBookInfoListResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_library_v1_library_proto_rawDescGZIP(), []int{4}
}

func (x *GetBookInfoListResponse) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *GetBookInfoListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetBookInfoListResponse) GetData() []*BookInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// 书籍信息查询关键字
type GetBookMARCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropNo    string `protobuf:"bytes,1,opt,name=propNo,proto3" json:"propNo,omitempty"`
	MarcRecNo string `protobuf:"bytes,2,opt,name=marcRecNo,proto3" json:"marcRecNo,omitempty"`
}

func (x *GetBookMARCRequest) Reset() {
	*x = GetBookMARCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_library_v1_library_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBookMARCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookMARCRequest) ProtoMessage() {}

func (x *GetBookMARCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_library_v1_library_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookMARCRequest.ProtoReflect.Descriptor instead.
func (*GetBookMARCRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_library_v1_library_proto_rawDescGZIP(), []int{5}
}

func (x *GetBookMARCRequest) GetPropNo() string {
	if x != nil {
		return x.PropNo
	}
	return ""
}

func (x *GetBookMARCRequest) GetMarcRecNo() string {
	if x != nil {
		return x.MarcRecNo
	}
	return ""
}

type GetBookMARCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error int32     `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Msg   string    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data  *BookMARC `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetBookMARCResponse) Reset() {
	*x = GetBookMARCResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_library_v1_library_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBookMARCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookMARCResponse) ProtoMessage() {}

func (x *GetBookMARCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_library_v1_library_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookMARCResponse.ProtoReflect.Descriptor instead.
func (*GetBookMARCResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_library_v1_library_proto_rawDescGZIP(), []int{6}
}

func (x *GetBookMARCResponse) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *GetBookMARCResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetBookMARCResponse) GetData() *BookMARC {
	if x != nil {
		return x.Data
	}
	return nil
}

type BookMARC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 书籍编号
	MarcRecNo string `protobuf:"bytes,1,opt,name=marcRecNo,proto3" json:"marcRecNo,omitempty"`
	// 书籍使用标志
	MarcUseFlag string `protobuf:"bytes,2,opt,name=marcUseFlag,proto3" json:"marcUseFlag,omitempty"`
	// 书籍类型
	MarcType string `protobuf:"bytes,3,opt,name=marcType,proto3" json:"marcType,omitempty"`
	// 目录操作
	CataOper string `protobuf:"bytes,4,opt,name=cataOper,proto3" json:"cataOper,omitempty"`
	// 编目日期
	CataDate string `protobuf:"bytes,5,opt,name=cataDate,proto3" json:"cataDate,omitempty"`
	// 语种
	LangCode string `protobuf:"bytes,6,opt,name=langCode,proto3" json:"langCode,omitempty"`
	// 国家代码
	CountryCode string `protobuf:"bytes,7,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	// 文献类型
	DocTypeCode string `protobuf:"bytes,8,opt,name=docTypeCode,proto3" json:"docTypeCode,omitempty"`
	// 中图法分类号
	CallNo string `protobuf:"bytes,9,opt,name=callNo,proto3" json:"callNo,omitempty"`
	// 书名
	Title string `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	// 作者
	Author string `protobuf:"bytes,11,opt,name=author,proto3" json:"author,omitempty"`
	// 出版社
	Publisher string `protobuf:"bytes,12,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// 出版年月
	MPubYear string `protobuf:"bytes,13,opt,name=mPubYear,proto3" json:"mPubYear,omitempty"`
	// ISBN编码
	ISBN string `protobuf:"bytes,14,opt,name=ISBN,proto3" json:"ISBN,omitempty"`
	// 创建人
	CreateOper string `protobuf:"bytes,15,opt,name=createOper,proto3" json:"createOper,omitempty"`
	// 创建日期
	CreateDate string `protobuf:"bytes,16,opt,name=createDate,proto3" json:"createDate,omitempty"`
	// 出版年月
	PubYear string `protobuf:"bytes,17,opt,name=pubYear,proto3" json:"pubYear,omitempty"`
	// 是否允许在图书馆显示
	OpacFlag string `protobuf:"bytes,18,opt,name=opacFlag,proto3" json:"opacFlag,omitempty"`
	// 分类级别
	CatalogLevel string `protobuf:"bytes,19,opt,name=catalogLevel,proto3" json:"catalogLevel,omitempty"`
}

func (x *BookMARC) Reset() {
	*x = BookMARC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_library_v1_library_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookMARC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookMARC) ProtoMessage() {}

func (x *BookMARC) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_library_v1_library_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookMARC.ProtoReflect.Descriptor instead.
func (*BookMARC) Descriptor() ([]byte, []int) {
	return file_campusapis_library_v1_library_proto_rawDescGZIP(), []int{7}
}

func (x *BookMARC) GetMarcRecNo() string {
	if x != nil {
		return x.MarcRecNo
	}
	return ""
}

func (x *BookMARC) GetMarcUseFlag() string {
	if x != nil {
		return x.MarcUseFlag
	}
	return ""
}

func (x *BookMARC) GetMarcType() string {
	if x != nil {
		return x.MarcType
	}
	return ""
}

func (x *BookMARC) GetCataOper() string {
	if x != nil {
		return x.CataOper
	}
	return ""
}

func (x *BookMARC) GetCataDate() string {
	if x != nil {
		return x.CataDate
	}
	return ""
}

func (x *BookMARC) GetLangCode() string {
	if x != nil {
		return x.LangCode
	}
	return ""
}

func (x *BookMARC) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *BookMARC) GetDocTypeCode() string {
	if x != nil {
		return x.DocTypeCode
	}
	return ""
}

func (x *BookMARC) GetCallNo() string {
	if x != nil {
		return x.CallNo
	}
	return ""
}

func (x *BookMARC) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BookMARC) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *BookMARC) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *BookMARC) GetMPubYear() string {
	if x != nil {
		return x.MPubYear
	}
	return ""
}

func (x *BookMARC) GetISBN() string {
	if x != nil {
		return x.ISBN
	}
	return ""
}

func (x *BookMARC) GetCreateOper() string {
	if x != nil {
		return x.CreateOper
	}
	return ""
}

func (x *BookMARC) GetCreateDate() string {
	if x != nil {
		return x.CreateDate
	}
	return ""
}

func (x *BookMARC) GetPubYear() string {
	if x != nil {
		return x.PubYear
	}
	return ""
}

func (x *BookMARC) GetOpacFlag() string {
	if x != nil {
		return x.OpacFlag
	}
	return ""
}

func (x *BookMARC) GetCatalogLevel() string {
	if x != nil {
		return x.CatalogLevel
	}
	return ""
}

type GetBookMARCListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Marc *BookMARC `protobuf:"bytes,1,opt,name=marc,proto3" json:"marc,omitempty"`
	// 模糊查询关键字，当前仅允许查询作者，书名，出版社
	SearchKeys []string `protobuf:"bytes,2,rep,name=searchKeys,proto3" json:"searchKeys,omitempty"`
	// 限制条数，允许为0-100之间
	Limit int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// 偏移
	Offset int32 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetBookMARCListRequest) Reset() {
	*x = GetBookMARCListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_library_v1_library_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBookMARCListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookMARCListRequest) ProtoMessage() {}

func (x *GetBookMARCListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_library_v1_library_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookMARCListRequest.ProtoReflect.Descriptor instead.
func (*GetBookMARCListRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_library_v1_library_proto_rawDescGZIP(), []int{8}
}

func (x *GetBookMARCListRequest) GetMarc() *BookMARC {
	if x != nil {
		return x.Marc
	}
	return nil
}

func (x *GetBookMARCListRequest) GetSearchKeys() []string {
	if x != nil {
		return x.SearchKeys
	}
	return nil
}

func (x *GetBookMARCListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetBookMARCListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetBookMARCListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error int32       `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Msg   string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data  []*BookMARC `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetBookMARCListResponse) Reset() {
	*x = GetBookMARCListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_library_v1_library_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBookMARCListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookMARCListResponse) ProtoMessage() {}

func (x *GetBookMARCListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_library_v1_library_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookMARCListResponse.ProtoReflect.Descriptor instead.
func (*GetBookMARCListResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_library_v1_library_proto_rawDescGZIP(), []int{9}
}

func (x *GetBookMARCListResponse) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *GetBookMARCListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetBookMARCListResponse) GetData() []*BookMARC {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetBookLendLastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime int64 `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
}

func (x *GetBookLendLastRequest) Reset() {
	*x = GetBookLendLastRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_library_v1_library_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBookLendLastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookLendLastRequest) ProtoMessage() {}

func (x *GetBookLendLastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_library_v1_library_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookLendLastRequest.ProtoReflect.Descriptor instead.
func (*GetBookLendLastRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_library_v1_library_proto_rawDescGZIP(), []int{10}
}

func (x *GetBookLendLastRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

type GetBookLendHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime int64 `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64 `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *GetBookLendHistoryRequest) Reset() {
	*x = GetBookLendHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_library_v1_library_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBookLendHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookLendHistoryRequest) ProtoMessage() {}

func (x *GetBookLendHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_library_v1_library_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookLendHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetBookLendHistoryRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_library_v1_library_proto_rawDescGZIP(), []int{11}
}

func (x *GetBookLendHistoryRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetBookLendHistoryRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type GetBookLendLastResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error int32                             `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Msg   string                            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data  []*GetBookLendLastResponse_Nested `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetBookLendLastResponse) Reset() {
	*x = GetBookLendLastResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_library_v1_library_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBookLendLastResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookLendLastResponse) ProtoMessage() {}

func (x *GetBookLendLastResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_library_v1_library_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookLendLastResponse.ProtoReflect.Descriptor instead.
func (*GetBookLendLastResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_library_v1_library_proto_rawDescGZIP(), []int{12}
}

func (x *GetBookLendLastResponse) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *GetBookLendLastResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetBookLendLastResponse) GetData() []*GetBookLendLastResponse_Nested {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetBookLendHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error int32                                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Msg   string                               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data  []*GetBookLendHistoryResponse_Nested `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetBookLendHistoryResponse) Reset() {
	*x = GetBookLendHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_library_v1_library_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBookLendHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookLendHistoryResponse) ProtoMessage() {}

func (x *GetBookLendHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_library_v1_library_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookLendHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetBookLendHistoryResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_library_v1_library_proto_rawDescGZIP(), []int{13}
}

func (x *GetBookLendHistoryResponse) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *GetBookLendHistoryResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetBookLendHistoryResponse) GetData() []*GetBookLendHistoryResponse_Nested {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetBookLendLastResponse_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Book             *BookInfo  `protobuf:"bytes,1,opt,name=book,proto3" json:"book,omitempty"`
	StaffID          string     `protobuf:"bytes,2,opt,name=staffID,proto3" json:"staffID,omitempty"`
	LendDate         int64      `protobuf:"varint,3,opt,name=lendDate,proto3" json:"lendDate,omitempty"`
	NormalReturnDate int64      `protobuf:"varint,4,opt,name=normalReturnDate,proto3" json:"normalReturnDate,omitempty"`
	RenewDate        int64      `protobuf:"varint,5,opt,name=renewDate,proto3" json:"renewDate,omitempty"`
	RenewTimes       int64      `protobuf:"varint,6,opt,name=renewTimes,proto3" json:"renewTimes,omitempty"`
	Location         string     `protobuf:"bytes,7,opt,name=location,proto3" json:"location,omitempty"`
	Status           LendStatus `protobuf:"varint,8,opt,name=status,proto3,enum=campusapis.library.v1.LendStatus" json:"status,omitempty"`
}

func (x *GetBookLendLastResponse_Nested) Reset() {
	*x = GetBookLendLastResponse_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_library_v1_library_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBookLendLastResponse_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookLendLastResponse_Nested) ProtoMessage() {}

func (x *GetBookLendLastResponse_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_library_v1_library_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookLendLastResponse_Nested.ProtoReflect.Descriptor instead.
func (*GetBookLendLastResponse_Nested) Descriptor() ([]byte, []int) {
	return file_campusapis_library_v1_library_proto_rawDescGZIP(), []int{12, 0}
}

func (x *GetBookLendLastResponse_Nested) GetBook() *BookInfo {
	if x != nil {
		return x.Book
	}
	return nil
}

func (x *GetBookLendLastResponse_Nested) GetStaffID() string {
	if x != nil {
		return x.StaffID
	}
	return ""
}

func (x *GetBookLendLastResponse_Nested) GetLendDate() int64 {
	if x != nil {
		return x.LendDate
	}
	return 0
}

func (x *GetBookLendLastResponse_Nested) GetNormalReturnDate() int64 {
	if x != nil {
		return x.NormalReturnDate
	}
	return 0
}

func (x *GetBookLendLastResponse_Nested) GetRenewDate() int64 {
	if x != nil {
		return x.RenewDate
	}
	return 0
}

func (x *GetBookLendLastResponse_Nested) GetRenewTimes() int64 {
	if x != nil {
		return x.RenewTimes
	}
	return 0
}

func (x *GetBookLendLastResponse_Nested) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *GetBookLendLastResponse_Nested) GetStatus() LendStatus {
	if x != nil {
		return x.Status
	}
	return LendStatus_LEND_STATUS_UNSPECIFIED
}

type GetBookLendHistoryResponse_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Book       *BookInfo  `protobuf:"bytes,1,opt,name=book,proto3" json:"book,omitempty"`
	StaffID    string     `protobuf:"bytes,2,opt,name=staffID,proto3" json:"staffID,omitempty"`
	LendDate   int64      `protobuf:"varint,3,opt,name=lendDate,proto3" json:"lendDate,omitempty"`
	ReturnDate int64      `protobuf:"varint,4,opt,name=returnDate,proto3" json:"returnDate,omitempty"`
	RenewDate  int64      `protobuf:"varint,5,opt,name=renewDate,proto3" json:"renewDate,omitempty"`
	RenewTimes int64      `protobuf:"varint,6,opt,name=renewTimes,proto3" json:"renewTimes,omitempty"`
	Location   string     `protobuf:"bytes,7,opt,name=location,proto3" json:"location,omitempty"`
	Status     LendStatus `protobuf:"varint,8,opt,name=status,proto3,enum=campusapis.library.v1.LendStatus" json:"status,omitempty"`
}

func (x *GetBookLendHistoryResponse_Nested) Reset() {
	*x = GetBookLendHistoryResponse_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_library_v1_library_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBookLendHistoryResponse_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookLendHistoryResponse_Nested) ProtoMessage() {}

func (x *GetBookLendHistoryResponse_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_library_v1_library_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookLendHistoryResponse_Nested.ProtoReflect.Descriptor instead.
func (*GetBookLendHistoryResponse_Nested) Descriptor() ([]byte, []int) {
	return file_campusapis_library_v1_library_proto_rawDescGZIP(), []int{13, 0}
}

func (x *GetBookLendHistoryResponse_Nested) GetBook() *BookInfo {
	if x != nil {
		return x.Book
	}
	return nil
}

func (x *GetBookLendHistoryResponse_Nested) GetStaffID() string {
	if x != nil {
		return x.StaffID
	}
	return ""
}

func (x *GetBookLendHistoryResponse_Nested) GetLendDate() int64 {
	if x != nil {
		return x.LendDate
	}
	return 0
}

func (x *GetBookLendHistoryResponse_Nested) GetReturnDate() int64 {
	if x != nil {
		return x.ReturnDate
	}
	return 0
}

func (x *GetBookLendHistoryResponse_Nested) GetRenewDate() int64 {
	if x != nil {
		return x.RenewDate
	}
	return 0
}

func (x *GetBookLendHistoryResponse_Nested) GetRenewTimes() int64 {
	if x != nil {
		return x.RenewTimes
	}
	return 0
}

func (x *GetBookLendHistoryResponse_Nested) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *GetBookLendHistoryResponse_Nested) GetStatus() LendStatus {
	if x != nil {
		return x.Status
	}
	return LendStatus_LEND_STATUS_UNSPECIFIED
}

var File_campusapis_library_v1_library_proto protoreflect.FileDescriptor

var file_campusapis_library_v1_library_proto_rawDesc = []byte{
	0x0a, 0x23, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2c, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x70, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x72, 0x6f, 0x70, 0x4e, 0x6f, 0x22, 0x72, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42,
	0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f,
	0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa1, 0x04, 0x0a,
	0x08, 0x42, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f,
	0x70, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x70, 0x4e,
	0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x72, 0x63, 0x52, 0x65, 0x63, 0x4e, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x72, 0x63, 0x52, 0x65, 0x63, 0x4e, 0x6f, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x61, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x6f, 0x6f,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x4c, 0x65, 0x6e, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x4c, 0x65, 0x6e, 0x64, 0x46, 0x6c, 0x61,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x79, 0x65, 0x61, 0x72, 0x43, 0x69, 0x72, 0x63, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x79, 0x65, 0x61, 0x72,
	0x43, 0x69, 0x72, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x69, 0x72, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x69, 0x72, 0x63, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x55, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x46, 0x6c,
	0x61, 0x67, 0x55, 0x70, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x72, 0x65, 0x63, 0x46, 0x6c, 0x61, 0x67, 0x55, 0x70, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x44, 0x61, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x72, 0x65, 0x67, 0x44, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x4e, 0x6f, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x4e, 0x6f, 0x12, 0x33, 0x0a, 0x04, 0x6d,
	0x61, 0x72, 0x63, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x41, 0x52, 0x43, 0x52, 0x04, 0x6d, 0x61, 0x72, 0x63,
	0x22, 0x36, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61,
	0x72, 0x63, 0x52, 0x65, 0x63, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x61, 0x72, 0x63, 0x52, 0x65, 0x63, 0x4e, 0x6f, 0x22, 0x76, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42,
	0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x33, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x4a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x41, 0x52, 0x43, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x70, 0x4e, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x70, 0x4e, 0x6f, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x61, 0x72, 0x63, 0x52, 0x65, 0x63, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x61, 0x72, 0x63, 0x52, 0x65, 0x63, 0x4e, 0x6f, 0x22, 0x72, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x41, 0x52, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x33, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x41, 0x52, 0x43, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xac, 0x04, 0x0a, 0x08, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x41, 0x52, 0x43, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x61, 0x72, 0x63, 0x52, 0x65, 0x63, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x61, 0x72, 0x63, 0x52, 0x65, 0x63, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x6d,
	0x61, 0x72, 0x63, 0x55, 0x73, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6d, 0x61, 0x72, 0x63, 0x55, 0x73, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x61, 0x72, 0x63, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x61, 0x72, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x61, 0x4f, 0x70, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x61, 0x4f, 0x70, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x61, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x61, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x4e, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x50, 0x75, 0x62, 0x59, 0x65, 0x61,
	0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x50, 0x75, 0x62, 0x59, 0x65, 0x61,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x53, 0x42, 0x4e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x49, 0x53, 0x42, 0x4e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x70, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x70, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x59, 0x65, 0x61, 0x72,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x75, 0x62, 0x59, 0x65, 0x61, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x61, 0x63, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x70, 0x61, 0x63, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22,
	0x9b, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x41, 0x52, 0x43, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x61,
	0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75,
	0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x41, 0x52, 0x43, 0x52, 0x04, 0x6d, 0x61, 0x72, 0x63, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x76, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x41, 0x52, 0x43, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x41, 0x52, 0x43, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x36, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b,
	0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x53, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x65, 0x6e, 0x64, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xc3, 0x03, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x65,
	0x6e, 0x64, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x49, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0xb4, 0x02, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x04,
	0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x61, 0x6d,
	0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x62, 0x6f, 0x6f,
	0x6b, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e,
	0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xbd, 0x03, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x65, 0x6e, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x4c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e,
	0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x65, 0x6e,
	0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xa8, 0x02,
	0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e,
	0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x5c, 0x0a, 0x0a, 0x4c, 0x65, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x17, 0x4c, 0x45, 0x4e, 0x44, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x4c, 0x45, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x4c, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14,
	0x4c, 0x45, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x54, 0x55,
	0x52, 0x4e, 0x45, 0x44, 0x10, 0x02, 0x32, 0x84, 0x07, 0x0a, 0x0e, 0x4c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x2e, 0x63, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x12,
	0x94, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f,
	0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x69, 0x6e, 0x66,
	0x6f, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x83, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x42, 0x6f,
	0x6f, 0x6b, 0x4d, 0x41, 0x52, 0x43, 0x12, 0x29, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x41, 0x52, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f,
	0x6b, 0x4d, 0x41, 0x52, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f,
	0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x6d, 0x61, 0x72, 0x63, 0x12, 0x94, 0x01, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x41, 0x52, 0x43, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x2d, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b,
	0x4d, 0x41, 0x52, 0x43, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x4d,
	0x41, 0x52, 0x43, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x6d, 0x61, 0x72, 0x63, 0x2f, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x94, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x4c,
	0x65, 0x6e, 0x64, 0x4c, 0x61, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x61, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a,
	0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b,
	0x2f, 0x6c, 0x65, 0x6e, 0x64, 0x2f, 0x6c, 0x61, 0x73, 0x74, 0x12, 0xa0, 0x01, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x65, 0x6e, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x30, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f,
	0x6b, 0x4c, 0x65, 0x6e, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x6f, 0x6f, 0x6b, 0x4c, 0x65, 0x6e, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d,
	0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b,
	0x2f, 0x6c, 0x65, 0x6e, 0x64, 0x2f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0xe0, 0x01,
	0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x4c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x64, 0x75, 0x68, 0x65, 0x6c, 0x70, 0x2f,
	0x61, 0x70, 0x69, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2f, 0x63, 0x61, 0x6d,
	0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f,
	0x76, 0x31, 0x3b, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43,
	0x4c, 0x58, 0xaa, 0x02, 0x15, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x15, 0x43, 0x61, 0x6d,
	0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x5c, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x21, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x5c,
	0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x17, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61,
	0x70, 0x69, 0x73, 0x3a, 0x3a, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_campusapis_library_v1_library_proto_rawDescOnce sync.Once
	file_campusapis_library_v1_library_proto_rawDescData = file_campusapis_library_v1_library_proto_rawDesc
)

func file_campusapis_library_v1_library_proto_rawDescGZIP() []byte {
	file_campusapis_library_v1_library_proto_rawDescOnce.Do(func() {
		file_campusapis_library_v1_library_proto_rawDescData = protoimpl.X.CompressGZIP(file_campusapis_library_v1_library_proto_rawDescData)
	})
	return file_campusapis_library_v1_library_proto_rawDescData
}

var file_campusapis_library_v1_library_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_campusapis_library_v1_library_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_campusapis_library_v1_library_proto_goTypes = []interface{}{
	(LendStatus)(0),                           // 0: campusapis.library.v1.LendStatus
	(*GetBookInfoRequest)(nil),                // 1: campusapis.library.v1.GetBookInfoRequest
	(*GetBookInfoResponse)(nil),               // 2: campusapis.library.v1.GetBookInfoResponse
	(*BookInfo)(nil),                          // 3: campusapis.library.v1.BookInfo
	(*GetBookInfoListRequest)(nil),            // 4: campusapis.library.v1.GetBookInfoListRequest
	(*GetBookInfoListResponse)(nil),           // 5: campusapis.library.v1.GetBookInfoListResponse
	(*GetBookMARCRequest)(nil),                // 6: campusapis.library.v1.GetBookMARCRequest
	(*GetBookMARCResponse)(nil),               // 7: campusapis.library.v1.GetBookMARCResponse
	(*BookMARC)(nil),                          // 8: campusapis.library.v1.BookMARC
	(*GetBookMARCListRequest)(nil),            // 9: campusapis.library.v1.GetBookMARCListRequest
	(*GetBookMARCListResponse)(nil),           // 10: campusapis.library.v1.GetBookMARCListResponse
	(*GetBookLendLastRequest)(nil),            // 11: campusapis.library.v1.GetBookLendLastRequest
	(*GetBookLendHistoryRequest)(nil),         // 12: campusapis.library.v1.GetBookLendHistoryRequest
	(*GetBookLendLastResponse)(nil),           // 13: campusapis.library.v1.GetBookLendLastResponse
	(*GetBookLendHistoryResponse)(nil),        // 14: campusapis.library.v1.GetBookLendHistoryResponse
	(*GetBookLendLastResponse_Nested)(nil),    // 15: campusapis.library.v1.GetBookLendLastResponse.Nested
	(*GetBookLendHistoryResponse_Nested)(nil), // 16: campusapis.library.v1.GetBookLendHistoryResponse.Nested
}
var file_campusapis_library_v1_library_proto_depIdxs = []int32{
	3,  // 0: campusapis.library.v1.GetBookInfoResponse.data:type_name -> campusapis.library.v1.BookInfo
	8,  // 1: campusapis.library.v1.BookInfo.marc:type_name -> campusapis.library.v1.BookMARC
	3,  // 2: campusapis.library.v1.GetBookInfoListResponse.data:type_name -> campusapis.library.v1.BookInfo
	8,  // 3: campusapis.library.v1.GetBookMARCResponse.data:type_name -> campusapis.library.v1.BookMARC
	8,  // 4: campusapis.library.v1.GetBookMARCListRequest.marc:type_name -> campusapis.library.v1.BookMARC
	8,  // 5: campusapis.library.v1.GetBookMARCListResponse.data:type_name -> campusapis.library.v1.BookMARC
	15, // 6: campusapis.library.v1.GetBookLendLastResponse.data:type_name -> campusapis.library.v1.GetBookLendLastResponse.Nested
	16, // 7: campusapis.library.v1.GetBookLendHistoryResponse.data:type_name -> campusapis.library.v1.GetBookLendHistoryResponse.Nested
	3,  // 8: campusapis.library.v1.GetBookLendLastResponse.Nested.book:type_name -> campusapis.library.v1.BookInfo
	0,  // 9: campusapis.library.v1.GetBookLendLastResponse.Nested.status:type_name -> campusapis.library.v1.LendStatus
	3,  // 10: campusapis.library.v1.GetBookLendHistoryResponse.Nested.book:type_name -> campusapis.library.v1.BookInfo
	0,  // 11: campusapis.library.v1.GetBookLendHistoryResponse.Nested.status:type_name -> campusapis.library.v1.LendStatus
	1,  // 12: campusapis.library.v1.LibraryService.GetBookInfo:input_type -> campusapis.library.v1.GetBookInfoRequest
	4,  // 13: campusapis.library.v1.LibraryService.GetBookInfoList:input_type -> campusapis.library.v1.GetBookInfoListRequest
	6,  // 14: campusapis.library.v1.LibraryService.GetBookMARC:input_type -> campusapis.library.v1.GetBookMARCRequest
	9,  // 15: campusapis.library.v1.LibraryService.GetBookMARCList:input_type -> campusapis.library.v1.GetBookMARCListRequest
	11, // 16: campusapis.library.v1.LibraryService.GetBookLendLast:input_type -> campusapis.library.v1.GetBookLendLastRequest
	12, // 17: campusapis.library.v1.LibraryService.GetBookLendHistory:input_type -> campusapis.library.v1.GetBookLendHistoryRequest
	2,  // 18: campusapis.library.v1.LibraryService.GetBookInfo:output_type -> campusapis.library.v1.GetBookInfoResponse
	5,  // 19: campusapis.library.v1.LibraryService.GetBookInfoList:output_type -> campusapis.library.v1.GetBookInfoListResponse
	7,  // 20: campusapis.library.v1.LibraryService.GetBookMARC:output_type -> campusapis.library.v1.GetBookMARCResponse
	10, // 21: campusapis.library.v1.LibraryService.GetBookMARCList:output_type -> campusapis.library.v1.GetBookMARCListResponse
	13, // 22: campusapis.library.v1.LibraryService.GetBookLendLast:output_type -> campusapis.library.v1.GetBookLendLastResponse
	14, // 23: campusapis.library.v1.LibraryService.GetBookLendHistory:output_type -> campusapis.library.v1.GetBookLendHistoryResponse
	18, // [18:24] is the sub-list for method output_type
	12, // [12:18] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_campusapis_library_v1_library_proto_init() }
func file_campusapis_library_v1_library_proto_init() {
	if File_campusapis_library_v1_library_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_campusapis_library_v1_library_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBookInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_library_v1_library_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBookInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_library_v1_library_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_library_v1_library_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBookInfoListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_library_v1_library_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBookInfoListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_library_v1_library_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBookMARCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_library_v1_library_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBookMARCResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_library_v1_library_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookMARC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_library_v1_library_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBookMARCListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_library_v1_library_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBookMARCListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_library_v1_library_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBookLendLastRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_library_v1_library_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBookLendHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_library_v1_library_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBookLendLastResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_library_v1_library_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBookLendHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_library_v1_library_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBookLendLastResponse_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_library_v1_library_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBookLendHistoryResponse_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_campusapis_library_v1_library_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_campusapis_library_v1_library_proto_goTypes,
		DependencyIndexes: file_campusapis_library_v1_library_proto_depIdxs,
		EnumInfos:         file_campusapis_library_v1_library_proto_enumTypes,
		MessageInfos:      file_campusapis_library_v1_library_proto_msgTypes,
	}.Build()
	File_campusapis_library_v1_library_proto = out.File
	file_campusapis_library_v1_library_proto_rawDesc = nil
	file_campusapis_library_v1_library_proto_goTypes = nil
	file_campusapis_library_v1_library_proto_depIdxs = nil
}
