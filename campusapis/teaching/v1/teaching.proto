syntax = "proto3";

package campusapis.teaching.v1;

import "campusapis/schoolTime/defined.proto";
import "campusapis/staff/base.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "./campusapis/teaching/v1";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Teaching API";
    version: "0.1";
    description: "Teaching API";
    contact: {
      name: "hduhelp salmon base project";
      url: "https://github.com/hduhelp/salmon_api_base";
      email: "none@example.com";
    };
    license: {
      name: "BSD 3-Clause License";
      url: "https://github.com/grpc-ecosystem/grpc-gateway/blob/master/LICENSE.txt";
    };
  };
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

service TeachingService {
  // 获取学生/教师课程表
  rpc GetSchedule(GetScheduleRequest) returns (GetScheduleResponse) {
    option (google.api.http) = {
      get: "/teaching/v1/schedule"
      additional_bindings {
        get: "/teaching/schedule"
      }
      additional_bindings {
        get: "/student/v2/schedule"
      }
    };
  }

  // 获取学生/教师当前课程表
  rpc GetScheduleNow(google.protobuf.Empty) returns (GetScheduleNowResponse) {
    option (google.api.http) = {
      get: "/teaching/v1/schedule/now"
      additional_bindings {
        get: "/student/schedule/now"
      }
    };
  }

  // 获取学生/教师当前课程表V2 返回更详细的信息
  rpc GetScheduleNowV2(google.protobuf.Empty) returns (GetScheduleNowV2Response) {
    option (google.api.http) = {
      get: "/teaching/v1/schedule/v2/now"
      additional_bindings {
        get: "/student/v2/schedule/now"
      }
    };
  }

  // 获取全局课表，用于推送课程信息，不开放HTTP接口对外使用
  rpc GetGlobalSchedule(GetGlobalScheduleRequest) returns (GetGlobalScheduleResponse) {}

  // 通过CLASS_ID获取课程信息，不开放HTTP接口对外使用
  rpc GetClassDetail(GetClassDetailRequest) returns (GetClassroomsResponse) {}

  // 获取所有教室列表
  rpc GetClassrooms(GetClassroomsRequest) returns (GetClassroomsResponse) {
    option (google.api.http) = {
      get: "/teaching/v1/classroom"
      additional_bindings {
        get: "/teaching/classroom"
      }
    };
  }

  // 获取某一教室的使用情况
  rpc GetClassroomUsages(GetClassroomUsagesRequest) returns (GetClassroomUsagesResponse) {
    option (google.api.http) = {
      get: "/teaching/v1/classroom/usage"
      additional_bindings {
        get: "/teaching/classroom/usage"
      }
    };
  }

  // 获取所有空教室列表
  rpc GetUnusedClassrooms(GetUnusedClassroomsRequest) returns (GetUnusedClassroomsResponse) {
    option (google.api.http) = {
      get: "/teaching/v1/classroom/unused"
      additional_bindings {
        get: "/teaching/classroom/unused"
      }
    };
  }
}

// GetScheduleRequest 根据参数和预设优先级拼装查询日期
// 优先级：
// 1. 若含 时间戳：		 根据时间戳查询，并标记时间戳所在周（研究生暂未支持）
// 2. 若含 学年、学期、周次：返回整个学期课表，并标记指定周（研究生暂未支持）
// 3. 若含 学年、学期：	 返回整个学期课表
// 都不命中：返回当前时间所在周的课表，并标记当前周（研究生暂未支持）
message GetScheduleRequest {
  //学期
  string semester = 1;
  //学年 支持多种格式 如：2019-2020 2019
  string schoolYear = 2;
  //时间戳
  int32 timestamp = 3;
  //周次
  int32 week = 4;
  //星期几
  int32 weekday = 5;
}

// GetScheduleResponse 课表列表返回体
message GetScheduleResponse {
  int32 error = 1;
  string msg = 2;
  repeated ScheduleResponseCourse data = 3;
}

// ScheduleResponseCourse 单课程返回体（如高等数学课）
message ScheduleResponseCourse {
  //人员信息
  message StaffInfo {
    //学工号
    string StaffID = 1;
    //姓名
    string StaffName = 2;
    //人员类型，枚举及其含义：0->未知 | 1->本科生 | 2->研究生 | 3->教职工
    int32 StaffType = 3;
  }

  // 单个排课信息（如高等数学的周一的3-5节）
  message ScheduleInfo {
    // 上课地点
    string Location = 1;
    // 教室作为数量
    int32 SeatsNum = 2;
    // 节次数组, 升序
    repeated int32 Section = 3;
    // 老师列表
    repeated StaffInfo Teachers = 4;
    // 学生列表
    repeated StaffInfo Students = 5;
    // 周次数组
    repeated int32 Week = 6;
    // 星期
    int32 WeekDay = 7;
    // 是否本周课程
    bool IsThisWeek = 8;
    // 上课时间
    int64 StartTime = 9;
    // 下课时间
    int64 EndTime = 10;
  }

  // 课程内部ID
  string ClassID = 1;
  // 选课号
  string ClassName = 2;
  // 上课时间中文，如: 星期一第6-7节{1-2周};星期一第6-7节{3-17周}
  string ClassTime = 3;
  // 课程代码
  string CourseID = 4;
  // 课程中文名
  string CourseName = 5;
  // 学分
  string Credit = 6;
  // 此课程排课列表
  repeated ScheduleInfo Schedule = 7;
  // 学年
  string SchoolYear = 8;
  // 学期
  int32 Semester = 9;
}

// 课程列表
message Courses {
  // 课程 map, ClassID -> 课程信息
  map<string, CourseItem> Items = 1;
}

// 课程信息
message CourseItem {
  // 课程内部ID
  string ClassID = 1;
  // 选课号
  string ClassName = 2;
  // 课程代码
  string CourseID = 3;
  // 课程中文名
  string CourseName = 4;
  // 上课时间中文，如: 星期一第6-7节{1-2周};星期一第6-7节{3-17周}
  string ClassTime = 5;
  // 学分
  string Credit = 6;
  // 学年
  campusapis.schoolTime.SchoolYear SchoolYear = 7;
  // 学期
  campusapis.schoolTime.Semester Semester = 8;
  // 排课详情
  Schedule Schedule = 9;
}

// 排课列表详情
message Schedule {
  // 排课 map, 排课ID -> 排课信息
  map<string, ScheduleItem> Items = 1;
}

// 排课信息
message ScheduleItem {
  // 周次列表
  repeated int32 Week = 1;
  // 星期
  int32 WeekDay = 2;
  // 节次列表，升序
  repeated int32 Section = 3;
  // 是否本周
  bool IsThisWeek = 4;

  // 上课时间
  int64 StartTime = 5;
  // 下课时间
  int64 EndTime = 6;

  // 老师列表
  campusapis.staff.InfoMapList Teachers = 7;
  // 学生列表
  campusapis.staff.InfoMapList Students = 8;

  // 上课地点
  string Location = 9;
  // 教室座位数
  int32 SeatsNum = 10;
  // 备注
  string Commit = 11;
}

// 人员信息
message StaffInfo {
  // 学工号
  string StaffID = 1;
  // 姓名
  string StaffName = 2;
  // 备注
  // todo 有空改成 Comment?
  string Commit = 3;
}

// GetScheduleNowResponse 今天，明天课表信息返回体
message GetScheduleNowResponse {
  int32 error = 1;
  string msg = 2;
  Data data = 3;

  message Data {
    // 今天课表
    repeated Course today = 1;
    // 明天课表
    repeated Course tomorrow = 2;
  }

  // 课表
  message Course {
    // 开始节次
    int32 start_section = 1;
    // 结束节次
    int32 end_section = 2;
    // 上课时间
    string start_time = 3;
    // 下课时间
    string end_time = 4;
    // 课程名
    string course_name = 5;
    // 教室
    string classroom = 6;
    // 老师
    string teacher = 7;
    // 时长
    string duration = 8;
  }
}

// GetScheduleNowV2Response 今天，明天课表信息返回体
message GetScheduleNowV2Response {
  int32 error = 1;
  string msg = 2;
  Data data = 3;

  message Data {
    // 今天的课表
    repeated ScheduleResponseCourse Today = 1;
    // 明天的课表
    repeated ScheduleResponseCourse Tomorrow = 2;
  }
}

// GetGlobalScheduleRequest 全局课表请求体
message GetGlobalScheduleRequest {
  // 学年
  string schoolYear = 1;
  // 学期
  string semester = 2;
  // 星期
  int32 weekday = 3;
  // 周次
  int32 week = 4;
  // 节次
  int32 section = 5;
}

// GetGlobalScheduleResponse 全局课表返回体
message GetGlobalScheduleResponse {
  int32 error = 1;
  string msg = 2;
  repeated ScheduleResponseCourse data = 3;
}

// GetClassDetailRequest 班级信息查询关键字
message GetClassDetailRequest {
  // 班级号
  string classID = 1;
}

// GetClassDetailResponse 班级信息查询返回体
message GetClassDetailResponse {
  // 班级号
  string classID = 1;
  // 班级名
  string className = 2;
  // 课程号
  string courseID = 3;
  // 课程名
  string courseName = 4;
  // 学生列表
  repeated string studentID = 5;
  // 教师列表
  repeated string teacherID = 6;
}

// GetClassroomsRequest 教室列表查询关键字
message GetClassroomsRequest {
  // 学年
  string schoolYear = 1;
  // 学期
  string semester = 2;
}

message GetClassroomUsagesRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: "{ \"locationID\": \"111222\" }"
    json_schema: {
      title: "GetClassroomUsagesRequest"
      description: "教室使用情况请求体"
      required: [
        "locationID"
      ]
    }
  };

  //学期
  string semester = 1;
  //学年
  string schoolYear = 2;
  //教室ID
  string locationID = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    required: [
      "locationID"
    ]
  }];
}

// 教室信息查询关键字
message GetUnusedClassroomsRequest {
  //学期
  string semester = 1;
  //学年
  string schoolYear = 2;
  //星期
  int32 weekday = 3;
  //周次
  int32 week = 4;
  //节次
  int32 section = 5;
}

message GetClassroomsResponse {
  int32 error = 1;
  string msg = 2;
  // 教室列表
  repeated Classroom data = 3;
}

message GetUnusedClassroomsResponse {
  int32 error = 1;
  string msg = 2;
  // 教室列表
  repeated Classroom data = 3;
}

// 教室信息
message Classroom {
  // 学期
  int32 semester = 1;
  // 学年
  string schoolYear = 2;
  // 教室ID
  string locationID = 3;
  // 教室名字
  string locationName = 4;
  // 教学楼ID
  string buildingID = 5;
  // 教学楼名字
  string buildingName = 6;
  // 是否被使用
  bool available = 7;
}

// GetClassroomUsagesResponse 教室使用情况返回体
message GetClassroomUsagesResponse {
  int32 error = 1;
  string msg = 2;
  // 教室使用情况列表
  repeated ClassroomUsage data = 3;
}

// 教室使用情况
message ClassroomUsage {
  // 教室信息
  Classroom classroom = 1;
  // 星期
  int32 weekday = 2;
  // 周次列表
  repeated int32 week = 3;
  // 节次列表
  repeated int32 Section = 4;
  // 课程内部ID
  string ClassID = 5;
  // 课程号
  string CourseCode = 6;
  // 课程名
  string CourseName = 7;
}
