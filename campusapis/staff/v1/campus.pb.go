// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: campusapis/staff/v1/campus.proto

package staffv1

import (
	staff "github.com/hduhelp/api_open_sdk/campusapis/staff"
	_ "github.com/hduhelp/api_open_sdk/school"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//查询人员信息返回体
type GetPersonInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//学工号
	StaffId string `protobuf:"bytes,1,opt,name=staffId,proto3" json:"staffId,omitempty"`
	//姓名
	StaffName string `protobuf:"bytes,2,opt,name=staffName,proto3" json:"staffName,omitempty"`
	//人员状态
	StaffState string `protobuf:"bytes,3,opt,name=staffState,proto3" json:"staffState,omitempty"`
	//人员类型
	StaffType string `protobuf:"bytes,4,opt,name=staffType,proto3" json:"staffType,omitempty"`
	//学院代码
	UnitCode string `protobuf:"bytes,5,opt,name=unitCode,proto3" json:"unitCode,omitempty"`
}

func (x *GetPersonInfoResponse) Reset() {
	*x = GetPersonInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonInfoResponse) ProtoMessage() {}

func (x *GetPersonInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonInfoResponse.ProtoReflect.Descriptor instead.
func (*GetPersonInfoResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{0}
}

func (x *GetPersonInfoResponse) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *GetPersonInfoResponse) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *GetPersonInfoResponse) GetStaffState() string {
	if x != nil {
		return x.StaffState
	}
	return ""
}

func (x *GetPersonInfoResponse) GetStaffType() string {
	if x != nil {
		return x.StaffType
	}
	return ""
}

func (x *GetPersonInfoResponse) GetUnitCode() string {
	if x != nil {
		return x.UnitCode
	}
	return ""
}

type GetStudentRewardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//学年，只支持一种格式，例：2021-2022学年，应传 2021
	SchoolYear string `protobuf:"bytes,1,opt,name=schoolYear,proto3" json:"schoolYear,omitempty"`
	//学期，枚举：第一学期 | 第二学期
	Semester string `protobuf:"bytes,2,opt,name=semester,proto3" json:"semester,omitempty"`
}

func (x *GetStudentRewardsRequest) Reset() {
	*x = GetStudentRewardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentRewardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentRewardsRequest) ProtoMessage() {}

func (x *GetStudentRewardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentRewardsRequest.ProtoReflect.Descriptor instead.
func (*GetStudentRewardsRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{1}
}

func (x *GetStudentRewardsRequest) GetSchoolYear() string {
	if x != nil {
		return x.SchoolYear
	}
	return ""
}

func (x *GetStudentRewardsRequest) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

type GetStudentCourseSelectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//学年，只支持一种格式，例：2021-2022学年，应传 2021
	SchoolYear string `protobuf:"bytes,1,opt,name=schoolYear,proto3" json:"schoolYear,omitempty"`
	//学期，枚举：第一学期 | 第二学期
	Semester string `protobuf:"bytes,2,opt,name=semester,proto3" json:"semester,omitempty"`
}

func (x *GetStudentCourseSelectionsRequest) Reset() {
	*x = GetStudentCourseSelectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentCourseSelectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentCourseSelectionsRequest) ProtoMessage() {}

func (x *GetStudentCourseSelectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentCourseSelectionsRequest.ProtoReflect.Descriptor instead.
func (*GetStudentCourseSelectionsRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{2}
}

func (x *GetStudentCourseSelectionsRequest) GetSchoolYear() string {
	if x != nil {
		return x.SchoolYear
	}
	return ""
}

func (x *GetStudentCourseSelectionsRequest) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

type GetStudentGradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//学年，只支持一种格式，例：2021-2022学年，应传 2021
	SchoolYear string `protobuf:"bytes,1,opt,name=schoolYear,proto3" json:"schoolYear,omitempty"`
	//学期，枚举：第一学期 | 第二学期
	Semester string `protobuf:"bytes,2,opt,name=semester,proto3" json:"semester,omitempty"`
}

func (x *GetStudentGradeRequest) Reset() {
	*x = GetStudentGradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentGradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentGradeRequest) ProtoMessage() {}

func (x *GetStudentGradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentGradeRequest.ProtoReflect.Descriptor instead.
func (*GetStudentGradeRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{3}
}

func (x *GetStudentGradeRequest) GetSchoolYear() string {
	if x != nil {
		return x.SchoolYear
	}
	return ""
}

func (x *GetStudentGradeRequest) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

type GetStudentExamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//学年，只支持一种格式，例：2021-2022学年，应传 2021
	SchoolYear string `protobuf:"bytes,1,opt,name=schoolYear,proto3" json:"schoolYear,omitempty"`
	//学期，枚举：第一学期 | 第二学期
	Semester string `protobuf:"bytes,2,opt,name=semester,proto3" json:"semester,omitempty"`
}

func (x *GetStudentExamRequest) Reset() {
	*x = GetStudentExamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentExamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentExamRequest) ProtoMessage() {}

func (x *GetStudentExamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentExamRequest.ProtoReflect.Descriptor instead.
func (*GetStudentExamRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{4}
}

func (x *GetStudentExamRequest) GetSchoolYear() string {
	if x != nil {
		return x.SchoolYear
	}
	return ""
}

func (x *GetStudentExamRequest) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

//学期查询关键字
type SemesterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//学年，只支持一种格式，例：2021-2022学年，应传 2021
	SchoolYear string `protobuf:"bytes,1,opt,name=schoolYear,proto3" json:"schoolYear,omitempty"`
	//学期，枚举：第一学期 | 第二学期
	Semester string `protobuf:"bytes,2,opt,name=semester,proto3" json:"semester,omitempty"`
}

func (x *SemesterRequest) Reset() {
	*x = SemesterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SemesterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SemesterRequest) ProtoMessage() {}

func (x *SemesterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SemesterRequest.ProtoReflect.Descriptor instead.
func (*SemesterRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{5}
}

func (x *SemesterRequest) GetSchoolYear() string {
	if x != nil {
		return x.SchoolYear
	}
	return ""
}

func (x *SemesterRequest) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

// GetStudentInfoResponse 查询学生信息返回体
type GetStudentInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//学号
	StaffId string `protobuf:"bytes,1,opt,name=staffId,proto3" json:"staffId,omitempty"`
	//学生姓名
	StaffName string `protobuf:"bytes,2,opt,name=staffName,proto3" json:"staffName,omitempty"`
	//学生班级号
	ClassId string `protobuf:"bytes,3,opt,name=classId,proto3" json:"classId,omitempty"`
	//学生学院编号
	UnitId string `protobuf:"bytes,4,opt,name=unitId,proto3" json:"unitId,omitempty"`
	//学生学院名称
	UnitName string `protobuf:"bytes,5,opt,name=unitName,proto3" json:"unitName,omitempty"`
	//学生专业编号
	MajorId string `protobuf:"bytes,6,opt,name=majorId,proto3" json:"majorId,omitempty"`
	//学生专业名称
	MajorName string `protobuf:"bytes,7,opt,name=majorName,proto3" json:"majorName,omitempty"`
	//学生辅导员工号
	TeacherId string `protobuf:"bytes,8,opt,name=teacherId,proto3" json:"teacherId,omitempty"`
	//学生辅导员姓名
	TeacherName string `protobuf:"bytes,9,opt,name=teacherName,proto3" json:"teacherName,omitempty"`
}

func (x *GetStudentInfoResponse) Reset() {
	*x = GetStudentInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentInfoResponse) ProtoMessage() {}

func (x *GetStudentInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentInfoResponse.ProtoReflect.Descriptor instead.
func (*GetStudentInfoResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{6}
}

func (x *GetStudentInfoResponse) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *GetStudentInfoResponse) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *GetStudentInfoResponse) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *GetStudentInfoResponse) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *GetStudentInfoResponse) GetUnitName() string {
	if x != nil {
		return x.UnitName
	}
	return ""
}

func (x *GetStudentInfoResponse) GetMajorId() string {
	if x != nil {
		return x.MajorId
	}
	return ""
}

func (x *GetStudentInfoResponse) GetMajorName() string {
	if x != nil {
		return x.MajorName
	}
	return ""
}

func (x *GetStudentInfoResponse) GetTeacherId() string {
	if x != nil {
		return x.TeacherId
	}
	return ""
}

func (x *GetStudentInfoResponse) GetTeacherName() string {
	if x != nil {
		return x.TeacherName
	}
	return ""
}

//查询贫困生信息返回体
type GetStudentNeedyInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//学工号
	StaffId string `protobuf:"bytes,1,opt,name=staffId,proto3" json:"staffId,omitempty"`
	//姓名
	StaffName string `protobuf:"bytes,2,opt,name=staffName,proto3" json:"staffName,omitempty"`
	//性别，枚举及含义：1->男 | 2->女
	Sex int32 `protobuf:"varint,3,opt,name=sex,proto3" json:"sex,omitempty"`
	//是否贫困生
	NeedyStudent bool `protobuf:"varint,4,opt,name=needyStudent,proto3" json:"needyStudent,omitempty"`
	//每学年贫困详情
	Items []*GetStudentNeedyInfoResponse_Nested `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetStudentNeedyInfoResponse) Reset() {
	*x = GetStudentNeedyInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentNeedyInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentNeedyInfoResponse) ProtoMessage() {}

func (x *GetStudentNeedyInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentNeedyInfoResponse.ProtoReflect.Descriptor instead.
func (*GetStudentNeedyInfoResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{7}
}

func (x *GetStudentNeedyInfoResponse) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *GetStudentNeedyInfoResponse) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *GetStudentNeedyInfoResponse) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *GetStudentNeedyInfoResponse) GetNeedyStudent() bool {
	if x != nil {
		return x.NeedyStudent
	}
	return false
}

func (x *GetStudentNeedyInfoResponse) GetItems() []*GetStudentNeedyInfoResponse_Nested {
	if x != nil {
		return x.Items
	}
	return nil
}

// GetStudentDormInfoResponse 查询学生寝室信息返回体
type GetStudentDormInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//学工号
	StaffId string `protobuf:"bytes,1,opt,name=staffId,proto3" json:"staffId,omitempty"`
	//楼号
	Building string `protobuf:"bytes,2,opt,name=building,proto3" json:"building,omitempty"`
	//寝室号
	Room string `protobuf:"bytes,3,opt,name=room,proto3" json:"room,omitempty"`
}

func (x *GetStudentDormInfoResponse) Reset() {
	*x = GetStudentDormInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentDormInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentDormInfoResponse) ProtoMessage() {}

func (x *GetStudentDormInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentDormInfoResponse.ProtoReflect.Descriptor instead.
func (*GetStudentDormInfoResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{8}
}

func (x *GetStudentDormInfoResponse) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *GetStudentDormInfoResponse) GetBuilding() string {
	if x != nil {
		return x.Building
	}
	return ""
}

func (x *GetStudentDormInfoResponse) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

// GetStudentBirthdayResponse 学生生日查询返回体
type GetStudentBirthdayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//学工号
	StaffId string `protobuf:"bytes,1,opt,name=staffId,proto3" json:"staffId,omitempty"`
	//姓名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	//生日
	Birthday string `protobuf:"bytes,3,opt,name=birthday,proto3" json:"birthday,omitempty"`
}

func (x *GetStudentBirthdayResponse) Reset() {
	*x = GetStudentBirthdayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentBirthdayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentBirthdayResponse) ProtoMessage() {}

func (x *GetStudentBirthdayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentBirthdayResponse.ProtoReflect.Descriptor instead.
func (*GetStudentBirthdayResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{9}
}

func (x *GetStudentBirthdayResponse) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *GetStudentBirthdayResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetStudentBirthdayResponse) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

// 查询某天生日所有人员-请求关键字
type GetStudentBirthdaysInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//人员类型
	Type staff.Type `protobuf:"varint,1,opt,name=type,proto3,enum=campusapis.staff.Type" json:"type,omitempty"`
	//月
	Month int32 `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	//日
	Day int32 `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *GetStudentBirthdaysInRequest) Reset() {
	*x = GetStudentBirthdaysInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentBirthdaysInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentBirthdaysInRequest) ProtoMessage() {}

func (x *GetStudentBirthdaysInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentBirthdaysInRequest.ProtoReflect.Descriptor instead.
func (*GetStudentBirthdaysInRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{10}
}

func (x *GetStudentBirthdaysInRequest) GetType() staff.Type {
	if x != nil {
		return x.Type
	}
	return staff.Type(0)
}

func (x *GetStudentBirthdaysInRequest) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *GetStudentBirthdaysInRequest) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

//  GetStudentBirthdaysInResponse 查询某天生日所有人员-返回体
type GetStudentBirthdaysInResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 生日详情列表
	Birthdays []*GetStudentBirthdayResponse `protobuf:"bytes,1,rep,name=birthdays,proto3" json:"birthdays,omitempty"`
}

func (x *GetStudentBirthdaysInResponse) Reset() {
	*x = GetStudentBirthdaysInResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentBirthdaysInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentBirthdaysInResponse) ProtoMessage() {}

func (x *GetStudentBirthdaysInResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentBirthdaysInResponse.ProtoReflect.Descriptor instead.
func (*GetStudentBirthdaysInResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{11}
}

func (x *GetStudentBirthdaysInResponse) GetBirthdays() []*GetStudentBirthdayResponse {
	if x != nil {
		return x.Birthdays
	}
	return nil
}

// GetStudentRewardsResponse 奖学金查询返回体
type GetStudentRewardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 奖学金列表
	Items []*GetStudentRewardsResponse_Nested `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetStudentRewardsResponse) Reset() {
	*x = GetStudentRewardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentRewardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentRewardsResponse) ProtoMessage() {}

func (x *GetStudentRewardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentRewardsResponse.ProtoReflect.Descriptor instead.
func (*GetStudentRewardsResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{12}
}

func (x *GetStudentRewardsResponse) GetItems() []*GetStudentRewardsResponse_Nested {
	if x != nil {
		return x.Items
	}
	return nil
}

// GetStudentSelectResponse 学生选课查询返回体
type GetStudentSelectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//详情列表
	Items []*GetStudentSelectResponse_Nested `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetStudentSelectResponse) Reset() {
	*x = GetStudentSelectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentSelectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentSelectResponse) ProtoMessage() {}

func (x *GetStudentSelectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentSelectResponse.ProtoReflect.Descriptor instead.
func (*GetStudentSelectResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{13}
}

func (x *GetStudentSelectResponse) GetItems() []*GetStudentSelectResponse_Nested {
	if x != nil {
		return x.Items
	}
	return nil
}

// GetStudentGradeResponse 查询学生成绩返回体
type GetStudentGradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 成绩详情列表
	Items []*GetStudentGradeResponse_Nested `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetStudentGradeResponse) Reset() {
	*x = GetStudentGradeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentGradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentGradeResponse) ProtoMessage() {}

func (x *GetStudentGradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentGradeResponse.ProtoReflect.Descriptor instead.
func (*GetStudentGradeResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{14}
}

func (x *GetStudentGradeResponse) GetItems() []*GetStudentGradeResponse_Nested {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询学生考试返回体
type GetStudentExamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error uint32 `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Msg   string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// 考试详情列表
	Data []*StudentExam `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetStudentExamResponse) Reset() {
	*x = GetStudentExamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentExamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentExamResponse) ProtoMessage() {}

func (x *GetStudentExamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentExamResponse.ProtoReflect.Descriptor instead.
func (*GetStudentExamResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{15}
}

func (x *GetStudentExamResponse) GetError() uint32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *GetStudentExamResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetStudentExamResponse) GetData() []*StudentExam {
	if x != nil {
		return x.Data
	}
	return nil
}

// 考试详情
type StudentExam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 教室
	Classroom string `protobuf:"bytes,1,opt,name=classroom,proto3" json:"classroom,omitempty"`
	// 课程
	Course string `protobuf:"bytes,2,opt,name=course,proto3" json:"course,omitempty"`
	// 考试时间
	ExamTime string `protobuf:"bytes,3,opt,name=examTime,proto3" json:"examTime,omitempty"`
	// 考试类型
	ExamType string `protobuf:"bytes,4,opt,name=examType,proto3" json:"examType,omitempty"`
	// 学年
	SchoolYear string `protobuf:"bytes,5,opt,name=schoolYear,proto3" json:"schoolYear,omitempty"`
	// 学期
	Semester string `protobuf:"bytes,6,opt,name=semester,proto3" json:"semester,omitempty"`
	// 座位号
	Seat string `protobuf:"bytes,7,opt,name=seat,proto3" json:"seat,omitempty"`
	// 课程号
	SelectCode string `protobuf:"bytes,8,opt,name=selectCode,proto3" json:"selectCode,omitempty"`
	// 学号
	StaffId string `protobuf:"bytes,9,opt,name=staffId,proto3" json:"staffId,omitempty"`
}

func (x *StudentExam) Reset() {
	*x = StudentExam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentExam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentExam) ProtoMessage() {}

func (x *StudentExam) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentExam.ProtoReflect.Descriptor instead.
func (*StudentExam) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{16}
}

func (x *StudentExam) GetClassroom() string {
	if x != nil {
		return x.Classroom
	}
	return ""
}

func (x *StudentExam) GetCourse() string {
	if x != nil {
		return x.Course
	}
	return ""
}

func (x *StudentExam) GetExamTime() string {
	if x != nil {
		return x.ExamTime
	}
	return ""
}

func (x *StudentExam) GetExamType() string {
	if x != nil {
		return x.ExamType
	}
	return ""
}

func (x *StudentExam) GetSchoolYear() string {
	if x != nil {
		return x.SchoolYear
	}
	return ""
}

func (x *StudentExam) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

func (x *StudentExam) GetSeat() string {
	if x != nil {
		return x.Seat
	}
	return ""
}

func (x *StudentExam) GetSelectCode() string {
	if x != nil {
		return x.SelectCode
	}
	return ""
}

func (x *StudentExam) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

// 推送学生门禁通行信息-请求关键字
type PostStudentGateAccessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 学工号（重要）
	StaffId string `protobuf:"bytes,1,opt,name=staffId,proto3" json:"staffId,omitempty"`
	// 请假类型，数字，一个数字对应一大类请假，枚举及含义：
	// 0->临时请假 | 1->当天假 | 2->单位实习（目前没用）|
	// 3->特殊（目前没用） | 4->身份码（目前没用） |
	// 5->离校 | 6->按周（目前没用） | 7->按月（目前没用）
	DayOffType string `protobuf:"bytes,2,opt,name=dayOffType,proto3" json:"dayOffType,omitempty"`
	// 请假类型，中文名
	DayOffName string `protobuf:"bytes,3,opt,name=dayOffName,proto3" json:"dayOffName,omitempty"`
	// 开始时间（重要）
	TimeStart string `protobuf:"bytes,4,opt,name=timeStart,proto3" json:"timeStart,omitempty"`
	// 结束时间（重要）
	TimeEnd string `protobuf:"bytes,5,opt,name=timeEnd,proto3" json:"timeEnd,omitempty"`
	// 假条 uid
	Uid string `protobuf:"bytes,6,opt,name=uid,proto3" json:"uid,omitempty"`
	// 闸机牌子（重要），枚举及含义：hikvision -> 海康 | uniview -> 宇视
	Target string `protobuf:"bytes,7,opt,name=Target,proto3" json:"Target,omitempty"`
}

func (x *PostStudentGateAccessRequest) Reset() {
	*x = PostStudentGateAccessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostStudentGateAccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostStudentGateAccessRequest) ProtoMessage() {}

func (x *PostStudentGateAccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostStudentGateAccessRequest.ProtoReflect.Descriptor instead.
func (*PostStudentGateAccessRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{17}
}

func (x *PostStudentGateAccessRequest) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *PostStudentGateAccessRequest) GetDayOffType() string {
	if x != nil {
		return x.DayOffType
	}
	return ""
}

func (x *PostStudentGateAccessRequest) GetDayOffName() string {
	if x != nil {
		return x.DayOffName
	}
	return ""
}

func (x *PostStudentGateAccessRequest) GetTimeStart() string {
	if x != nil {
		return x.TimeStart
	}
	return ""
}

func (x *PostStudentGateAccessRequest) GetTimeEnd() string {
	if x != nil {
		return x.TimeEnd
	}
	return ""
}

func (x *PostStudentGateAccessRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PostStudentGateAccessRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

// PostStudentGateAccessResponse  推送学生门禁通行信息
type PostStudentGateAccessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Done    bool   `protobuf:"varint,1,opt,name=done,proto3" json:"done,omitempty"`      //是否完成
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` //完成信息
}

func (x *PostStudentGateAccessResponse) Reset() {
	*x = PostStudentGateAccessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostStudentGateAccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostStudentGateAccessResponse) ProtoMessage() {}

func (x *PostStudentGateAccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostStudentGateAccessResponse.ProtoReflect.Descriptor instead.
func (*PostStudentGateAccessResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{18}
}

func (x *PostStudentGateAccessResponse) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *PostStudentGateAccessResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 留校生信息查询-返回体
type GetStudentStaySchoolInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 学工号
	StaffId string `protobuf:"bytes,1,opt,name=staffId,proto3" json:"staffId,omitempty"`
	// 姓名
	StaffName string `protobuf:"bytes,2,opt,name=staffName,proto3" json:"staffName,omitempty"`
	// 报告日期
	ReportTime string `protobuf:"bytes,3,opt,name=reportTime,proto3" json:"reportTime,omitempty"`
	// 原因
	Reason string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	// 时间段1-开始
	Time1Start string `protobuf:"bytes,5,opt,name=time1Start,proto3" json:"time1Start,omitempty"`
	// 时间段1-结束
	Time1End string `protobuf:"bytes,6,opt,name=time1End,proto3" json:"time1End,omitempty"`
	// 时间段2-开始
	Time2Start string `protobuf:"bytes,7,opt,name=time2Start,proto3" json:"time2Start,omitempty"`
	// 时间段2-结束
	Time2End string `protobuf:"bytes,8,opt,name=time2End,proto3" json:"time2End,omitempty"`
	// 辅导员审批状态，枚举及含义：0->未审批 | 1->审批通过 | 2->拒绝
	TeacherStatus string `protobuf:"bytes,9,opt,name=teacherStatus,proto3" json:"teacherStatus,omitempty"`
	// 辅导员审批备注
	TeacherRemark string `protobuf:"bytes,10,opt,name=teacherRemark,proto3" json:"teacherRemark,omitempty"`
	// 辅导员审批时间
	TeacherReviewTime string `protobuf:"bytes,11,opt,name=teacherReviewTime,proto3" json:"teacherReviewTime,omitempty"`
	// 学院审批状态，枚举及含义：0->未审批 | 1->审批通过 | 2->拒绝
	UnitStatus string `protobuf:"bytes,12,opt,name=unitStatus,proto3" json:"unitStatus,omitempty"`
	// 学院审批备注
	UnitRemark string `protobuf:"bytes,13,opt,name=unitRemark,proto3" json:"unitRemark,omitempty"`
	// 学院审批时间
	UnitReviewTime string `protobuf:"bytes,14,opt,name=unitReviewTime,proto3" json:"unitReviewTime,omitempty"`
	// 撤回状态，枚举及含义：1->未撤回 | 2->已撤回
	CancelStatus string `protobuf:"bytes,15,opt,name=cancelStatus,proto3" json:"cancelStatus,omitempty"`
}

func (x *GetStudentStaySchoolInfoResponse) Reset() {
	*x = GetStudentStaySchoolInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentStaySchoolInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentStaySchoolInfoResponse) ProtoMessage() {}

func (x *GetStudentStaySchoolInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentStaySchoolInfoResponse.ProtoReflect.Descriptor instead.
func (*GetStudentStaySchoolInfoResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{19}
}

func (x *GetStudentStaySchoolInfoResponse) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetReportTime() string {
	if x != nil {
		return x.ReportTime
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetTime1Start() string {
	if x != nil {
		return x.Time1Start
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetTime1End() string {
	if x != nil {
		return x.Time1End
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetTime2Start() string {
	if x != nil {
		return x.Time2Start
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetTime2End() string {
	if x != nil {
		return x.Time2End
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetTeacherStatus() string {
	if x != nil {
		return x.TeacherStatus
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetTeacherRemark() string {
	if x != nil {
		return x.TeacherRemark
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetTeacherReviewTime() string {
	if x != nil {
		return x.TeacherReviewTime
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetUnitStatus() string {
	if x != nil {
		return x.UnitStatus
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetUnitRemark() string {
	if x != nil {
		return x.UnitRemark
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetUnitReviewTime() string {
	if x != nil {
		return x.UnitReviewTime
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetCancelStatus() string {
	if x != nil {
		return x.CancelStatus
	}
	return ""
}

//新生三要素请求，依次判断（学号）、（录取通知书或准考证号）、（身份证号），要求其中最少两项不为空
//有鉴权时接受鉴权内学号，忽略请求参数
type FreshmanKeywordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//学号
	StaffId string `protobuf:"bytes,1,opt,name=staffId,proto3" json:"staffId,omitempty"`
	//录取通知书号或者是准考证号，不同省份并不一样
	OfferId string `protobuf:"bytes,2,opt,name=offerId,proto3" json:"offerId,omitempty"`
	//身份证号
	IdCardNo string `protobuf:"bytes,3,opt,name=idCardNo,proto3" json:"idCardNo,omitempty"`
}

func (x *FreshmanKeywordRequest) Reset() {
	*x = FreshmanKeywordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreshmanKeywordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreshmanKeywordRequest) ProtoMessage() {}

func (x *FreshmanKeywordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreshmanKeywordRequest.ProtoReflect.Descriptor instead.
func (*FreshmanKeywordRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{20}
}

func (x *FreshmanKeywordRequest) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *FreshmanKeywordRequest) GetOfferId() string {
	if x != nil {
		return x.OfferId
	}
	return ""
}

func (x *FreshmanKeywordRequest) GetIdCardNo() string {
	if x != nil {
		return x.IdCardNo
	}
	return ""
}

//新生基本信息
type GetFreshmanBaseInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//学号
	StaffId string `protobuf:"bytes,1,opt,name=staffId,proto3" json:"staffId,omitempty"`
	//姓名
	StaffName string `protobuf:"bytes,2,opt,name=staffName,proto3" json:"staffName,omitempty"`
	//录取通知书号或者是准考证号，不同省份并不一样
	OfferId string `protobuf:"bytes,3,opt,name=offerId,proto3" json:"offerId,omitempty"`
	//身份证号
	IdCardNo string `protobuf:"bytes,4,opt,name=idCardNo,proto3" json:"idCardNo,omitempty"`
	//录取时间
	OfferTime string `protobuf:"bytes,5,opt,name=offerTime,proto3" json:"offerTime,omitempty"`
	//省份
	Province string `protobuf:"bytes,6,opt,name=province,proto3" json:"province,omitempty"`
}

func (x *GetFreshmanBaseInfoResponse) Reset() {
	*x = GetFreshmanBaseInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFreshmanBaseInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFreshmanBaseInfoResponse) ProtoMessage() {}

func (x *GetFreshmanBaseInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFreshmanBaseInfoResponse.ProtoReflect.Descriptor instead.
func (*GetFreshmanBaseInfoResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{21}
}

func (x *GetFreshmanBaseInfoResponse) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *GetFreshmanBaseInfoResponse) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *GetFreshmanBaseInfoResponse) GetOfferId() string {
	if x != nil {
		return x.OfferId
	}
	return ""
}

func (x *GetFreshmanBaseInfoResponse) GetIdCardNo() string {
	if x != nil {
		return x.IdCardNo
	}
	return ""
}

func (x *GetFreshmanBaseInfoResponse) GetOfferTime() string {
	if x != nil {
		return x.OfferTime
	}
	return ""
}

func (x *GetFreshmanBaseInfoResponse) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

//新生详细信息
type GetFreshmanInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//学号
	StaffId string `protobuf:"bytes,1,opt,name=staffId,proto3" json:"staffId,omitempty"`
	//姓名
	StaffName string `protobuf:"bytes,2,opt,name=staffName,proto3" json:"staffName,omitempty"`
	//班级名称
	ClassName string `protobuf:"bytes,3,opt,name=className,proto3" json:"className,omitempty"`
	//宿舍房间名称
	RoomName string `protobuf:"bytes,4,opt,name=roomName,proto3" json:"roomName,omitempty"`
	//注册状态（是否入学）
	RegStatus string `protobuf:"bytes,5,opt,name=regStatus,proto3" json:"regStatus,omitempty"`
	//学院编号
	SchoolID string `protobuf:"bytes,6,opt,name=schoolID,proto3" json:"schoolID,omitempty"`
	//学院名称
	SchoolName string `protobuf:"bytes,7,opt,name=schoolName,proto3" json:"schoolName,omitempty"`
	//专业名称
	MajorName string `protobuf:"bytes,8,opt,name=majorName,proto3" json:"majorName,omitempty"`
	//身份证号
	CardID string `protobuf:"bytes,9,opt,name=cardID,proto3" json:"cardID,omitempty"`
	//辅导员姓名
	TeacherName  string `protobuf:"bytes,10,opt,name=teacherName,proto3" json:"teacherName,omitempty"`
	TeacherPhone string `protobuf:"bytes,11,opt,name=teacherPhone,proto3" json:"teacherPhone,omitempty"`
	//班助姓名
	AssistantName string `protobuf:"bytes,12,opt,name=assistantName,proto3" json:"assistantName,omitempty"`
	//班助电话
	AssistantPhone string `protobuf:"bytes,13,opt,name=assistantPhone,proto3" json:"assistantPhone,omitempty"`
	//是否支付学费
	HasPaid string `protobuf:"bytes,14,opt,name=hasPaid,proto3" json:"hasPaid,omitempty"`
	//绿色通道
	LSTD   string `protobuf:"bytes,15,opt,name=LSTD,proto3" json:"LSTD,omitempty"`
	LSTDXY string `protobuf:"bytes,16,opt,name=LSTDXY,proto3" json:"LSTDXY,omitempty"`
	LSTDZX string `protobuf:"bytes,17,opt,name=LSTDZX,proto3" json:"LSTDZX,omitempty"`
	// 电话
	Phone string `protobuf:"bytes,18,opt,name=phone,proto3" json:"phone,omitempty"`
	// QQ
	Qq string `protobuf:"bytes,19,opt,name=qq,proto3" json:"qq,omitempty"`
	//楼号
	RoomBuilding string `protobuf:"bytes,20,opt,name=roomBuilding,proto3" json:"roomBuilding,omitempty"`
	//寝室号
	RoomRoom string `protobuf:"bytes,21,opt,name=roomRoom,proto3" json:"roomRoom,omitempty"`
	//床号
	RoomBed string `protobuf:"bytes,22,opt,name=roomBed,proto3" json:"roomBed,omitempty"`
	//报到日期
	ComeDate string `protobuf:"bytes,23,opt,name=comeDate,proto3" json:"comeDate,omitempty"`
	// 身高（厘米）
	High string `protobuf:"bytes,24,opt,name=high,proto3" json:"high,omitempty"`
	//火车区间
	Station string `protobuf:"bytes,25,opt,name=station,proto3" json:"station,omitempty"`
}

func (x *GetFreshmanInfoResponse) Reset() {
	*x = GetFreshmanInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFreshmanInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFreshmanInfoResponse) ProtoMessage() {}

func (x *GetFreshmanInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFreshmanInfoResponse.ProtoReflect.Descriptor instead.
func (*GetFreshmanInfoResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{22}
}

func (x *GetFreshmanInfoResponse) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetRegStatus() string {
	if x != nil {
		return x.RegStatus
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetSchoolID() string {
	if x != nil {
		return x.SchoolID
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetSchoolName() string {
	if x != nil {
		return x.SchoolName
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetMajorName() string {
	if x != nil {
		return x.MajorName
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetCardID() string {
	if x != nil {
		return x.CardID
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetTeacherName() string {
	if x != nil {
		return x.TeacherName
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetTeacherPhone() string {
	if x != nil {
		return x.TeacherPhone
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetAssistantName() string {
	if x != nil {
		return x.AssistantName
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetAssistantPhone() string {
	if x != nil {
		return x.AssistantPhone
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetHasPaid() string {
	if x != nil {
		return x.HasPaid
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetLSTD() string {
	if x != nil {
		return x.LSTD
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetLSTDXY() string {
	if x != nil {
		return x.LSTDXY
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetLSTDZX() string {
	if x != nil {
		return x.LSTDZX
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetQq() string {
	if x != nil {
		return x.Qq
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetRoomBuilding() string {
	if x != nil {
		return x.RoomBuilding
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetRoomRoom() string {
	if x != nil {
		return x.RoomRoom
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetRoomBed() string {
	if x != nil {
		return x.RoomBed
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetComeDate() string {
	if x != nil {
		return x.ComeDate
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetHigh() string {
	if x != nil {
		return x.High
	}
	return ""
}

func (x *GetFreshmanInfoResponse) GetStation() string {
	if x != nil {
		return x.Station
	}
	return ""
}

//新生室友查询
type GetFreshmanRoommatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 室友列表
	Items []*GetFreshmanRoommatesResponse_Roommate `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetFreshmanRoommatesResponse) Reset() {
	*x = GetFreshmanRoommatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFreshmanRoommatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFreshmanRoommatesResponse) ProtoMessage() {}

func (x *GetFreshmanRoommatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFreshmanRoommatesResponse.ProtoReflect.Descriptor instead.
func (*GetFreshmanRoommatesResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{23}
}

func (x *GetFreshmanRoommatesResponse) GetItems() []*GetFreshmanRoommatesResponse_Roommate {
	if x != nil {
		return x.Items
	}
	return nil
}

//某年贫困详情
type GetStudentNeedyInfoResponse_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//特定学年
	SchoolYear int32 `protobuf:"varint,1,opt,name=schoolYear,proto3" json:"schoolYear,omitempty"`
	//是否是贫困生
	NeedyStudent bool `protobuf:"varint,2,opt,name=needyStudent,proto3" json:"needyStudent,omitempty"`
}

func (x *GetStudentNeedyInfoResponse_Nested) Reset() {
	*x = GetStudentNeedyInfoResponse_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentNeedyInfoResponse_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentNeedyInfoResponse_Nested) ProtoMessage() {}

func (x *GetStudentNeedyInfoResponse_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentNeedyInfoResponse_Nested.ProtoReflect.Descriptor instead.
func (*GetStudentNeedyInfoResponse_Nested) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{7, 0}
}

func (x *GetStudentNeedyInfoResponse_Nested) GetSchoolYear() int32 {
	if x != nil {
		return x.SchoolYear
	}
	return 0
}

func (x *GetStudentNeedyInfoResponse_Nested) GetNeedyStudent() bool {
	if x != nil {
		return x.NeedyStudent
	}
	return false
}

// 奖学金信息
type GetStudentRewardsResponse_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//学工号
	StaffID string `protobuf:"bytes,1,opt,name=staffID,proto3" json:"staffID,omitempty"`
	//姓名
	StaffName string `protobuf:"bytes,2,opt,name=staffName,proto3" json:"staffName,omitempty"`
	//奖项名
	RewardName string `protobuf:"bytes,3,opt,name=rewardName,proto3" json:"rewardName,omitempty"`
	//学年
	SchoolYear string `protobuf:"bytes,4,opt,name=schoolYear,proto3" json:"schoolYear,omitempty"`
	//学期
	Semester string `protobuf:"bytes,5,opt,name=semester,proto3" json:"semester,omitempty"`
	//奖项等级
	RewardLevel string `protobuf:"bytes,6,opt,name=rewardLevel,proto3" json:"rewardLevel,omitempty"`
}

func (x *GetStudentRewardsResponse_Nested) Reset() {
	*x = GetStudentRewardsResponse_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentRewardsResponse_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentRewardsResponse_Nested) ProtoMessage() {}

func (x *GetStudentRewardsResponse_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentRewardsResponse_Nested.ProtoReflect.Descriptor instead.
func (*GetStudentRewardsResponse_Nested) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{12, 0}
}

func (x *GetStudentRewardsResponse_Nested) GetStaffID() string {
	if x != nil {
		return x.StaffID
	}
	return ""
}

func (x *GetStudentRewardsResponse_Nested) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *GetStudentRewardsResponse_Nested) GetRewardName() string {
	if x != nil {
		return x.RewardName
	}
	return ""
}

func (x *GetStudentRewardsResponse_Nested) GetSchoolYear() string {
	if x != nil {
		return x.SchoolYear
	}
	return ""
}

func (x *GetStudentRewardsResponse_Nested) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

func (x *GetStudentRewardsResponse_Nested) GetRewardLevel() string {
	if x != nil {
		return x.RewardLevel
	}
	return ""
}

//选课详情
type GetStudentSelectResponse_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//学年
	SchoolYear string `protobuf:"bytes,1,opt,name=schoolYear,proto3" json:"schoolYear,omitempty"`
	//学期
	Semester string `protobuf:"bytes,2,opt,name=semester,proto3" json:"semester,omitempty"`
	//学号
	StaffID string `protobuf:"bytes,3,opt,name=staffID,proto3" json:"staffID,omitempty"`
	//姓名
	StaffName string `protobuf:"bytes,4,opt,name=staffName,proto3" json:"staffName,omitempty"`
	//选课号
	SelectCode string `protobuf:"bytes,5,opt,name=selectCode,proto3" json:"selectCode,omitempty"`
	//课程中文名
	CourseName string `protobuf:"bytes,6,opt,name=courseName,proto3" json:"courseName,omitempty"`
	//课程号
	CourseCode string `protobuf:"bytes,7,opt,name=courseCode,proto3" json:"courseCode,omitempty"`
	//教师工号
	TeacherID string `protobuf:"bytes,8,opt,name=teacherID,proto3" json:"teacherID,omitempty"`
	//教师姓名
	TeacherName string `protobuf:"bytes,9,opt,name=teacherName,proto3" json:"teacherName,omitempty"`
	//上课时间中文描述
	ClassTime string `protobuf:"bytes,10,opt,name=classTime,proto3" json:"classTime,omitempty"`
	//教室
	ClassRoom string `protobuf:"bytes,11,opt,name=classRoom,proto3" json:"classRoom,omitempty"`
}

func (x *GetStudentSelectResponse_Nested) Reset() {
	*x = GetStudentSelectResponse_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentSelectResponse_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentSelectResponse_Nested) ProtoMessage() {}

func (x *GetStudentSelectResponse_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentSelectResponse_Nested.ProtoReflect.Descriptor instead.
func (*GetStudentSelectResponse_Nested) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{13, 0}
}

func (x *GetStudentSelectResponse_Nested) GetSchoolYear() string {
	if x != nil {
		return x.SchoolYear
	}
	return ""
}

func (x *GetStudentSelectResponse_Nested) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

func (x *GetStudentSelectResponse_Nested) GetStaffID() string {
	if x != nil {
		return x.StaffID
	}
	return ""
}

func (x *GetStudentSelectResponse_Nested) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *GetStudentSelectResponse_Nested) GetSelectCode() string {
	if x != nil {
		return x.SelectCode
	}
	return ""
}

func (x *GetStudentSelectResponse_Nested) GetCourseName() string {
	if x != nil {
		return x.CourseName
	}
	return ""
}

func (x *GetStudentSelectResponse_Nested) GetCourseCode() string {
	if x != nil {
		return x.CourseCode
	}
	return ""
}

func (x *GetStudentSelectResponse_Nested) GetTeacherID() string {
	if x != nil {
		return x.TeacherID
	}
	return ""
}

func (x *GetStudentSelectResponse_Nested) GetTeacherName() string {
	if x != nil {
		return x.TeacherName
	}
	return ""
}

func (x *GetStudentSelectResponse_Nested) GetClassTime() string {
	if x != nil {
		return x.ClassTime
	}
	return ""
}

func (x *GetStudentSelectResponse_Nested) GetClassRoom() string {
	if x != nil {
		return x.ClassRoom
	}
	return ""
}

// 成绩详情
type GetStudentGradeResponse_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//学年
	SchoolYear string `protobuf:"bytes,1,opt,name=schoolYear,proto3" json:"schoolYear,omitempty"`
	//学期
	Semester string `protobuf:"bytes,2,opt,name=semester,proto3" json:"semester,omitempty"`
	//选课号
	SelectCode string `protobuf:"bytes,3,opt,name=selectCode,proto3" json:"selectCode,omitempty"`
	//最后分数
	Score string `protobuf:"bytes,4,opt,name=score,proto3" json:"score,omitempty"`
	//平时分
	ScoreDaily string `protobuf:"bytes,5,opt,name=scoreDaily,proto3" json:"scoreDaily,omitempty"`
	//期中分数
	ScoreMidTerm string `protobuf:"bytes,6,opt,name=scoreMidTerm,proto3" json:"scoreMidTerm,omitempty"`
	//期末分数
	ScoreFinal string `protobuf:"bytes,7,opt,name=scoreFinal,proto3" json:"scoreFinal,omitempty"`
	//补考分数
	ScoreSubstitute string `protobuf:"bytes,8,opt,name=scoreSubstitute,proto3" json:"scoreSubstitute,omitempty"`
	//实验分数
	ScorePractice string `protobuf:"bytes,9,opt,name=scorePractice,proto3" json:"scorePractice,omitempty"`
	//课程号
	CourseCode string `protobuf:"bytes,10,opt,name=courseCode,proto3" json:"courseCode,omitempty"`
	//课程名
	Course string `protobuf:"bytes,11,opt,name=course,proto3" json:"course,omitempty"`
	//学号
	StaffId string `protobuf:"bytes,12,opt,name=staffId,proto3" json:"staffId,omitempty"`
	//姓名
	StaffName string `protobuf:"bytes,13,opt,name=staffName,proto3" json:"staffName,omitempty"`
	//学分
	Credit string `protobuf:"bytes,14,opt,name=credit,proto3" json:"credit,omitempty"`
	//GPA
	GPA string `protobuf:"bytes,15,opt,name=GPA,proto3" json:"GPA,omitempty"`
}

func (x *GetStudentGradeResponse_Nested) Reset() {
	*x = GetStudentGradeResponse_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentGradeResponse_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentGradeResponse_Nested) ProtoMessage() {}

func (x *GetStudentGradeResponse_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentGradeResponse_Nested.ProtoReflect.Descriptor instead.
func (*GetStudentGradeResponse_Nested) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{14, 0}
}

func (x *GetStudentGradeResponse_Nested) GetSchoolYear() string {
	if x != nil {
		return x.SchoolYear
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetSelectCode() string {
	if x != nil {
		return x.SelectCode
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetScore() string {
	if x != nil {
		return x.Score
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetScoreDaily() string {
	if x != nil {
		return x.ScoreDaily
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetScoreMidTerm() string {
	if x != nil {
		return x.ScoreMidTerm
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetScoreFinal() string {
	if x != nil {
		return x.ScoreFinal
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetScoreSubstitute() string {
	if x != nil {
		return x.ScoreSubstitute
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetScorePractice() string {
	if x != nil {
		return x.ScorePractice
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetCourseCode() string {
	if x != nil {
		return x.CourseCode
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetCourse() string {
	if x != nil {
		return x.Course
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetCredit() string {
	if x != nil {
		return x.Credit
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetGPA() string {
	if x != nil {
		return x.GPA
	}
	return ""
}

type GetFreshmanRoommatesResponse_Roommate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//室友姓名
	StaffName string `protobuf:"bytes,1,opt,name=staffName,proto3" json:"staffName,omitempty"`
	Qq        string `protobuf:"bytes,2,opt,name=qq,proto3" json:"qq,omitempty"`
	Phone     string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *GetFreshmanRoommatesResponse_Roommate) Reset() {
	*x = GetFreshmanRoommatesResponse_Roommate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_campus_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFreshmanRoommatesResponse_Roommate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFreshmanRoommatesResponse_Roommate) ProtoMessage() {}

func (x *GetFreshmanRoommatesResponse_Roommate) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_campus_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFreshmanRoommatesResponse_Roommate.ProtoReflect.Descriptor instead.
func (*GetFreshmanRoommatesResponse_Roommate) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_campus_proto_rawDescGZIP(), []int{23, 0}
}

func (x *GetFreshmanRoommatesResponse_Roommate) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *GetFreshmanRoommatesResponse_Roommate) GetQq() string {
	if x != nil {
		return x.Qq
	}
	return ""
}

func (x *GetFreshmanRoommatesResponse_Roommate) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

var File_campusapis_staff_v1_campus_proto protoreflect.FileDescriptor

var file_campusapis_staff_v1_campus_proto_rawDesc = []byte{
	0x0a, 0x20, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x13, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73,
	0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x13, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2f, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa9, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x66, 0x66, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x56, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x22, 0x5f, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x22, 0x54, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59,
	0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x22,
	0x53, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x22, 0x4d, 0x0a, 0x0f, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x59, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68,
	0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x22, 0x96, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa8, 0x02, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x65, 0x64, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x79, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x65,
	0x65, 0x64, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x65, 0x64, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x4c, 0x0a, 0x06, 0x4e, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59,
	0x65, 0x61, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x79, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x79,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x22, 0x66, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x44, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x22,
	0x66, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x22, 0x72, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x73, 0x49, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x61, 0x79, 0x22, 0x6e, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x79, 0x73, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x09,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x73, 0x22, 0xa9, 0x02, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75,
	0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xbe, 0x01, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68,
	0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xc1, 0x03, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x1a, 0xd8, 0x02, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x22, 0xaf, 0x04, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x1a, 0xc8, 0x03, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x64, 0x54, 0x65, 0x72, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x64, 0x54,
	0x65, 0x72, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x75, 0x62, 0x73,
	0x74, 0x69, 0x74, 0x75, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x53, 0x75, 0x62, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x47,
	0x50, 0x41, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x47, 0x50, 0x41, 0x22, 0x76, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x85, 0x02, 0x0a, 0x0b, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x45, 0x78, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f,
	0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72,
	0x6f, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x78, 0x61, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x78, 0x61, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x61, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x61, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59,
	0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x65, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x22, 0xda, 0x01,
	0x0a, 0x1c, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x79, 0x4f,
	0x66, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61,
	0x79, 0x4f, 0x66, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x79, 0x4f,
	0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61,
	0x79, 0x4f, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x4d, 0x0a, 0x1d, 0x50, 0x6f,
	0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x90, 0x04, 0x0a, 0x20, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x79, 0x53, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x31, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x31, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x31, 0x45, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x31, 0x45, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69,
	0x6d, 0x65, 0x32, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x32, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x32, 0x45, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x32, 0x45, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x26, 0x0a, 0x0e, 0x75, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x6e, 0x69, 0x74, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x68, 0x0a, 0x16,
	0x46, 0x72, 0x65, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x22, 0xc5, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x46, 0x72,
	0x65, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x22, 0xd7,
	0x05, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x72, 0x65, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x6a, 0x6f, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x50, 0x61, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x68, 0x61, 0x73, 0x50, 0x61, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x53,
	0x54, 0x44, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4c, 0x53, 0x54, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x4c, 0x53, 0x54, 0x44, 0x58, 0x59, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x4c, 0x53, 0x54, 0x44, 0x58, 0x59, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x53, 0x54, 0x44, 0x5a, 0x58,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x53, 0x54, 0x44, 0x5a, 0x58, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x71, 0x71, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x71, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x6f, 0x6f, 0x6d, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x6f, 0x6f, 0x6d,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d,
	0x52, 0x6f, 0x6f, 0x6d, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d,
	0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x42, 0x65, 0x64, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x42, 0x65, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69,
	0x67, 0x68, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc0, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x65, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x6d, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75,
	0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x65, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x6d, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x6d, 0x61, 0x74, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x4e, 0x0a, 0x08, 0x52,
	0x6f, 0x6f, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x71, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x71, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x32, 0xf3, 0x12, 0x0a, 0x0d,
	0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x82, 0x01,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2a, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x15, 0x2f, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2f, 0x69, 0x6e,
	0x66, 0x6f, 0x5a, 0x0e, 0x12, 0x0c, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2f, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x86, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e,
	0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x29, 0x12, 0x16, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x5a, 0x0f, 0x12, 0x0d, 0x2f, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x92, 0x01, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x65, 0x64, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x30, 0x2e, 0x63, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x65, 0x64,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12, 0x17, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x6e, 0x65, 0x65, 0x64, 0x79, 0x5a, 0x10,
	0x12, 0x0e, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x6e, 0x65, 0x65, 0x64, 0x79,
	0x12, 0x8e, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x44,
	0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x2f, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x44, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x16, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x64, 0x6f, 0x72, 0x6d,
	0x5a, 0x0f, 0x12, 0x0d, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x64, 0x6f, 0x72,
	0x6d, 0x12, 0x9a, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2f, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x12, 0x1a, 0x2f,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x2f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x5a, 0x13, 0x12, 0x11, 0x2f, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0xb9,
	0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x73, 0x49, 0x6e, 0x12, 0x31, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75,
	0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x79, 0x73, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x73, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x12, 0x1b, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x79, 0x73, 0x5a, 0x14, 0x12, 0x12, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x2f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x73, 0x12, 0xac, 0x01, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x12, 0x24, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x12, 0x18,
	0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x2f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5a, 0x18, 0x12, 0x0f, 0x2f, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x2f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x62, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x62, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0xaa, 0x01, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x24,
	0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x12, 0x18, 0x2f, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x5a, 0x18, 0x12, 0x0f, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x2f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x62, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x62,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0xa6, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x24, 0x2e, 0x63, 0x61, 0x6d,
	0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39, 0x12, 0x17, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5a,
	0x17, 0x12, 0x0e, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x62, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x62, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x9a, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x45, 0x78,
	0x61, 0x6d, 0x12, 0x2a, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x45,
	0x78, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x29, 0x12, 0x16, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x5a, 0x0f, 0x12, 0x0d, 0x2f,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x12, 0x80, 0x01, 0x0a,
	0x15, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x31, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0xa8, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x79, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x35, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x79, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x37, 0x12, 0x1d, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x68, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x53, 0x74,
	0x61, 0x79, 0x5a, 0x16, 0x12, 0x14, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x68,
	0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x53, 0x74, 0x61, 0x79, 0x12, 0xa7, 0x01, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x65, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x2b, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x65, 0x73, 0x68, 0x6d, 0x61,
	0x6e, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x65, 0x73, 0x68, 0x6d, 0x61,
	0x6e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12, 0x17, 0x2f, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x72, 0x65, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x2f, 0x62, 0x61,
	0x73, 0x65, 0x5a, 0x10, 0x12, 0x0e, 0x2f, 0x66, 0x72, 0x65, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x2f,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x9f, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x65, 0x73,
	0x68, 0x6d, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75,
	0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x72, 0x65, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x65, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12, 0x17, 0x2f, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x72, 0x65, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x2f,
	0x69, 0x6e, 0x66, 0x6f, 0x5a, 0x10, 0x12, 0x0e, 0x2f, 0x66, 0x72, 0x65, 0x73, 0x68, 0x6d, 0x61,
	0x6e, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0xb8, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x72,
	0x65, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x2b, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x65, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x4b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63,
	0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x65, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x52, 0x6f,
	0x6f, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3a, 0x12, 0x1b, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2f,
	0x76, 0x31, 0x2f, 0x66, 0x72, 0x65, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x2f, 0x72, 0x6f, 0x6f, 0x6d,
	0x6d, 0x61, 0x74, 0x65, 0x5a, 0x14, 0x12, 0x12, 0x2f, 0x66, 0x72, 0x65, 0x73, 0x68, 0x6d, 0x61,
	0x6e, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x62, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x42, 0xd1, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x43,
	0x61, 0x6d, 0x70, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3b, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x64, 0x75, 0x68, 0x65, 0x6c, 0x70,
	0x2f, 0x61, 0x70, 0x69, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2f, 0x63, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2f, 0x76,
	0x31, 0x3b, 0x73, 0x74, 0x61, 0x66, 0x66, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x53, 0x58, 0xaa,
	0x02, 0x13, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x66, 0x66, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x13, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70,
	0x69, 0x73, 0x5c, 0x53, 0x74, 0x61, 0x66, 0x66, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1f, 0x43, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x5c, 0x53, 0x74, 0x61, 0x66, 0x66, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x15,
	0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x3a, 0x3a, 0x53, 0x74, 0x61, 0x66,
	0x66, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_campusapis_staff_v1_campus_proto_rawDescOnce sync.Once
	file_campusapis_staff_v1_campus_proto_rawDescData = file_campusapis_staff_v1_campus_proto_rawDesc
)

func file_campusapis_staff_v1_campus_proto_rawDescGZIP() []byte {
	file_campusapis_staff_v1_campus_proto_rawDescOnce.Do(func() {
		file_campusapis_staff_v1_campus_proto_rawDescData = protoimpl.X.CompressGZIP(file_campusapis_staff_v1_campus_proto_rawDescData)
	})
	return file_campusapis_staff_v1_campus_proto_rawDescData
}

var file_campusapis_staff_v1_campus_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_campusapis_staff_v1_campus_proto_goTypes = []interface{}{
	(*GetPersonInfoResponse)(nil),                 // 0: campusapis.staff.v1.GetPersonInfoResponse
	(*GetStudentRewardsRequest)(nil),              // 1: campusapis.staff.v1.GetStudentRewardsRequest
	(*GetStudentCourseSelectionsRequest)(nil),     // 2: campusapis.staff.v1.GetStudentCourseSelectionsRequest
	(*GetStudentGradeRequest)(nil),                // 3: campusapis.staff.v1.GetStudentGradeRequest
	(*GetStudentExamRequest)(nil),                 // 4: campusapis.staff.v1.GetStudentExamRequest
	(*SemesterRequest)(nil),                       // 5: campusapis.staff.v1.SemesterRequest
	(*GetStudentInfoResponse)(nil),                // 6: campusapis.staff.v1.GetStudentInfoResponse
	(*GetStudentNeedyInfoResponse)(nil),           // 7: campusapis.staff.v1.GetStudentNeedyInfoResponse
	(*GetStudentDormInfoResponse)(nil),            // 8: campusapis.staff.v1.GetStudentDormInfoResponse
	(*GetStudentBirthdayResponse)(nil),            // 9: campusapis.staff.v1.GetStudentBirthdayResponse
	(*GetStudentBirthdaysInRequest)(nil),          // 10: campusapis.staff.v1.GetStudentBirthdaysInRequest
	(*GetStudentBirthdaysInResponse)(nil),         // 11: campusapis.staff.v1.GetStudentBirthdaysInResponse
	(*GetStudentRewardsResponse)(nil),             // 12: campusapis.staff.v1.GetStudentRewardsResponse
	(*GetStudentSelectResponse)(nil),              // 13: campusapis.staff.v1.GetStudentSelectResponse
	(*GetStudentGradeResponse)(nil),               // 14: campusapis.staff.v1.GetStudentGradeResponse
	(*GetStudentExamResponse)(nil),                // 15: campusapis.staff.v1.GetStudentExamResponse
	(*StudentExam)(nil),                           // 16: campusapis.staff.v1.StudentExam
	(*PostStudentGateAccessRequest)(nil),          // 17: campusapis.staff.v1.PostStudentGateAccessRequest
	(*PostStudentGateAccessResponse)(nil),         // 18: campusapis.staff.v1.PostStudentGateAccessResponse
	(*GetStudentStaySchoolInfoResponse)(nil),      // 19: campusapis.staff.v1.GetStudentStaySchoolInfoResponse
	(*FreshmanKeywordRequest)(nil),                // 20: campusapis.staff.v1.FreshmanKeywordRequest
	(*GetFreshmanBaseInfoResponse)(nil),           // 21: campusapis.staff.v1.GetFreshmanBaseInfoResponse
	(*GetFreshmanInfoResponse)(nil),               // 22: campusapis.staff.v1.GetFreshmanInfoResponse
	(*GetFreshmanRoommatesResponse)(nil),          // 23: campusapis.staff.v1.GetFreshmanRoommatesResponse
	(*GetStudentNeedyInfoResponse_Nested)(nil),    // 24: campusapis.staff.v1.GetStudentNeedyInfoResponse.Nested
	(*GetStudentRewardsResponse_Nested)(nil),      // 25: campusapis.staff.v1.GetStudentRewardsResponse.Nested
	(*GetStudentSelectResponse_Nested)(nil),       // 26: campusapis.staff.v1.GetStudentSelectResponse.Nested
	(*GetStudentGradeResponse_Nested)(nil),        // 27: campusapis.staff.v1.GetStudentGradeResponse.Nested
	(*GetFreshmanRoommatesResponse_Roommate)(nil), // 28: campusapis.staff.v1.GetFreshmanRoommatesResponse.Roommate
	(staff.Type)(0),                               // 29: campusapis.staff.Type
	(*emptypb.Empty)(nil),                         // 30: google.protobuf.Empty
}
var file_campusapis_staff_v1_campus_proto_depIdxs = []int32{
	24, // 0: campusapis.staff.v1.GetStudentNeedyInfoResponse.items:type_name -> campusapis.staff.v1.GetStudentNeedyInfoResponse.Nested
	29, // 1: campusapis.staff.v1.GetStudentBirthdaysInRequest.type:type_name -> campusapis.staff.Type
	9,  // 2: campusapis.staff.v1.GetStudentBirthdaysInResponse.birthdays:type_name -> campusapis.staff.v1.GetStudentBirthdayResponse
	25, // 3: campusapis.staff.v1.GetStudentRewardsResponse.items:type_name -> campusapis.staff.v1.GetStudentRewardsResponse.Nested
	26, // 4: campusapis.staff.v1.GetStudentSelectResponse.items:type_name -> campusapis.staff.v1.GetStudentSelectResponse.Nested
	27, // 5: campusapis.staff.v1.GetStudentGradeResponse.items:type_name -> campusapis.staff.v1.GetStudentGradeResponse.Nested
	16, // 6: campusapis.staff.v1.GetStudentExamResponse.data:type_name -> campusapis.staff.v1.StudentExam
	28, // 7: campusapis.staff.v1.GetFreshmanRoommatesResponse.items:type_name -> campusapis.staff.v1.GetFreshmanRoommatesResponse.Roommate
	30, // 8: campusapis.staff.v1.CampusService.GetPersonInfo:input_type -> google.protobuf.Empty
	30, // 9: campusapis.staff.v1.CampusService.GetStudentInfo:input_type -> google.protobuf.Empty
	30, // 10: campusapis.staff.v1.CampusService.GetStudentNeedyInfo:input_type -> google.protobuf.Empty
	30, // 11: campusapis.staff.v1.CampusService.GetStudentDormInfo:input_type -> google.protobuf.Empty
	30, // 12: campusapis.staff.v1.CampusService.GetStudentBirthdayInfo:input_type -> google.protobuf.Empty
	10, // 13: campusapis.staff.v1.CampusService.GetStudentBirthdaysIn:input_type -> campusapis.staff.v1.GetStudentBirthdaysInRequest
	5,  // 14: campusapis.staff.v1.CampusService.GetStudentRewards:input_type -> campusapis.staff.v1.SemesterRequest
	5,  // 15: campusapis.staff.v1.CampusService.GetStudentSelect:input_type -> campusapis.staff.v1.SemesterRequest
	5,  // 16: campusapis.staff.v1.CampusService.GetStudentGrade:input_type -> campusapis.staff.v1.SemesterRequest
	4,  // 17: campusapis.staff.v1.CampusService.GetStudentExam:input_type -> campusapis.staff.v1.GetStudentExamRequest
	17, // 18: campusapis.staff.v1.CampusService.PostStudentGateAccess:input_type -> campusapis.staff.v1.PostStudentGateAccessRequest
	30, // 19: campusapis.staff.v1.CampusService.GetStudentStaySchoolInfo:input_type -> google.protobuf.Empty
	20, // 20: campusapis.staff.v1.CampusService.GetFreshmanBaseInfo:input_type -> campusapis.staff.v1.FreshmanKeywordRequest
	20, // 21: campusapis.staff.v1.CampusService.GetFreshmanInfo:input_type -> campusapis.staff.v1.FreshmanKeywordRequest
	20, // 22: campusapis.staff.v1.CampusService.GetFreshmanRoommates:input_type -> campusapis.staff.v1.FreshmanKeywordRequest
	0,  // 23: campusapis.staff.v1.CampusService.GetPersonInfo:output_type -> campusapis.staff.v1.GetPersonInfoResponse
	6,  // 24: campusapis.staff.v1.CampusService.GetStudentInfo:output_type -> campusapis.staff.v1.GetStudentInfoResponse
	7,  // 25: campusapis.staff.v1.CampusService.GetStudentNeedyInfo:output_type -> campusapis.staff.v1.GetStudentNeedyInfoResponse
	8,  // 26: campusapis.staff.v1.CampusService.GetStudentDormInfo:output_type -> campusapis.staff.v1.GetStudentDormInfoResponse
	9,  // 27: campusapis.staff.v1.CampusService.GetStudentBirthdayInfo:output_type -> campusapis.staff.v1.GetStudentBirthdayResponse
	11, // 28: campusapis.staff.v1.CampusService.GetStudentBirthdaysIn:output_type -> campusapis.staff.v1.GetStudentBirthdaysInResponse
	12, // 29: campusapis.staff.v1.CampusService.GetStudentRewards:output_type -> campusapis.staff.v1.GetStudentRewardsResponse
	13, // 30: campusapis.staff.v1.CampusService.GetStudentSelect:output_type -> campusapis.staff.v1.GetStudentSelectResponse
	14, // 31: campusapis.staff.v1.CampusService.GetStudentGrade:output_type -> campusapis.staff.v1.GetStudentGradeResponse
	15, // 32: campusapis.staff.v1.CampusService.GetStudentExam:output_type -> campusapis.staff.v1.GetStudentExamResponse
	18, // 33: campusapis.staff.v1.CampusService.PostStudentGateAccess:output_type -> campusapis.staff.v1.PostStudentGateAccessResponse
	19, // 34: campusapis.staff.v1.CampusService.GetStudentStaySchoolInfo:output_type -> campusapis.staff.v1.GetStudentStaySchoolInfoResponse
	21, // 35: campusapis.staff.v1.CampusService.GetFreshmanBaseInfo:output_type -> campusapis.staff.v1.GetFreshmanBaseInfoResponse
	22, // 36: campusapis.staff.v1.CampusService.GetFreshmanInfo:output_type -> campusapis.staff.v1.GetFreshmanInfoResponse
	23, // 37: campusapis.staff.v1.CampusService.GetFreshmanRoommates:output_type -> campusapis.staff.v1.GetFreshmanRoommatesResponse
	23, // [23:38] is the sub-list for method output_type
	8,  // [8:23] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_campusapis_staff_v1_campus_proto_init() }
func file_campusapis_staff_v1_campus_proto_init() {
	if File_campusapis_staff_v1_campus_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_campusapis_staff_v1_campus_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentRewardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentCourseSelectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentGradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentExamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SemesterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentNeedyInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentDormInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentBirthdayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentBirthdaysInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentBirthdaysInResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentRewardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentSelectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentGradeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentExamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentExam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostStudentGateAccessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostStudentGateAccessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentStaySchoolInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreshmanKeywordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFreshmanBaseInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFreshmanInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFreshmanRoommatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentNeedyInfoResponse_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentRewardsResponse_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentSelectResponse_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentGradeResponse_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_campus_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFreshmanRoommatesResponse_Roommate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_campusapis_staff_v1_campus_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_campusapis_staff_v1_campus_proto_goTypes,
		DependencyIndexes: file_campusapis_staff_v1_campus_proto_depIdxs,
		MessageInfos:      file_campusapis_staff_v1_campus_proto_msgTypes,
	}.Build()
	File_campusapis_staff_v1_campus_proto = out.File
	file_campusapis_staff_v1_campus_proto_rawDesc = nil
	file_campusapis_staff_v1_campus_proto_goTypes = nil
	file_campusapis_staff_v1_campus_proto_depIdxs = nil
}
