// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: campusapis/staff/v1/student.proto

package staffv1

import (
	baseStaff "github.com/hduhelp/api_open_sdk/baseStaff"
	school "github.com/hduhelp/api_open_sdk/school"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetStudentInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffId     string `protobuf:"bytes,1,opt,name=staffId,proto3" json:"staffId,omitempty"`
	StaffName   string `protobuf:"bytes,2,opt,name=staffName,proto3" json:"staffName,omitempty"`
	ClassId     string `protobuf:"bytes,3,opt,name=classId,proto3" json:"classId,omitempty"`
	UnitId      string `protobuf:"bytes,4,opt,name=unitId,proto3" json:"unitId,omitempty"`
	UnitName    string `protobuf:"bytes,5,opt,name=unitName,proto3" json:"unitName,omitempty"`
	MajorId     string `protobuf:"bytes,6,opt,name=majorId,proto3" json:"majorId,omitempty"`
	MajorName   string `protobuf:"bytes,7,opt,name=majorName,proto3" json:"majorName,omitempty"`
	TeacherId   string `protobuf:"bytes,8,opt,name=teacherId,proto3" json:"teacherId,omitempty"`
	TeacherName string `protobuf:"bytes,9,opt,name=teacherName,proto3" json:"teacherName,omitempty"`
}

func (x *GetStudentInfoResponse) Reset() {
	*x = GetStudentInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentInfoResponse) ProtoMessage() {}

func (x *GetStudentInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentInfoResponse.ProtoReflect.Descriptor instead.
func (*GetStudentInfoResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{0}
}

func (x *GetStudentInfoResponse) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *GetStudentInfoResponse) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *GetStudentInfoResponse) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *GetStudentInfoResponse) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *GetStudentInfoResponse) GetUnitName() string {
	if x != nil {
		return x.UnitName
	}
	return ""
}

func (x *GetStudentInfoResponse) GetMajorId() string {
	if x != nil {
		return x.MajorId
	}
	return ""
}

func (x *GetStudentInfoResponse) GetMajorName() string {
	if x != nil {
		return x.MajorName
	}
	return ""
}

func (x *GetStudentInfoResponse) GetTeacherId() string {
	if x != nil {
		return x.TeacherId
	}
	return ""
}

func (x *GetStudentInfoResponse) GetTeacherName() string {
	if x != nil {
		return x.TeacherName
	}
	return ""
}

type StudentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Staff   *baseStaff.Info `protobuf:"bytes,1,opt,name=staff,proto3" json:"staff,omitempty"`
	ClassId string          `protobuf:"bytes,2,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	Unit    *school.Unit    `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
	Major   *school.Major   `protobuf:"bytes,4,opt,name=major,proto3" json:"major,omitempty"`
}

func (x *StudentInfo) Reset() {
	*x = StudentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentInfo) ProtoMessage() {}

func (x *StudentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentInfo.ProtoReflect.Descriptor instead.
func (*StudentInfo) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{1}
}

func (x *StudentInfo) GetStaff() *baseStaff.Info {
	if x != nil {
		return x.Staff
	}
	return nil
}

func (x *StudentInfo) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *StudentInfo) GetUnit() *school.Unit {
	if x != nil {
		return x.Unit
	}
	return nil
}

func (x *StudentInfo) GetMajor() *school.Major {
	if x != nil {
		return x.Major
	}
	return nil
}

type DormInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Building string `protobuf:"bytes,1,opt,name=building,proto3" json:"building,omitempty"`
	Room     string `protobuf:"bytes,2,opt,name=room,proto3" json:"room,omitempty"`
	Bed      string `protobuf:"bytes,3,opt,name=bed,proto3" json:"bed,omitempty"`
}

func (x *DormInfo) Reset() {
	*x = DormInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DormInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DormInfo) ProtoMessage() {}

func (x *DormInfo) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DormInfo.ProtoReflect.Descriptor instead.
func (*DormInfo) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{2}
}

func (x *DormInfo) GetBuilding() string {
	if x != nil {
		return x.Building
	}
	return ""
}

func (x *DormInfo) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

func (x *DormInfo) GetBed() string {
	if x != nil {
		return x.Bed
	}
	return ""
}

type GetStudentNeedyInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchoolYear   string                                `protobuf:"bytes,1,opt,name=schoolYear,proto3" json:"schoolYear,omitempty"`
	Semester     string                                `protobuf:"bytes,2,opt,name=semester,proto3" json:"semester,omitempty"`
	Sex          int32                                 `protobuf:"varint,3,opt,name=sex,proto3" json:"sex,omitempty"`
	NeedyStudent bool                                  `protobuf:"varint,4,opt,name=needyStudent,proto3" json:"needyStudent,omitempty"`
	Items        []*GetStudentNeedyInfoResponse_Nested `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetStudentNeedyInfoResponse) Reset() {
	*x = GetStudentNeedyInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentNeedyInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentNeedyInfoResponse) ProtoMessage() {}

func (x *GetStudentNeedyInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentNeedyInfoResponse.ProtoReflect.Descriptor instead.
func (*GetStudentNeedyInfoResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{3}
}

func (x *GetStudentNeedyInfoResponse) GetSchoolYear() string {
	if x != nil {
		return x.SchoolYear
	}
	return ""
}

func (x *GetStudentNeedyInfoResponse) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

func (x *GetStudentNeedyInfoResponse) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *GetStudentNeedyInfoResponse) GetNeedyStudent() bool {
	if x != nil {
		return x.NeedyStudent
	}
	return false
}

func (x *GetStudentNeedyInfoResponse) GetItems() []*GetStudentNeedyInfoResponse_Nested {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetStudentDormInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffId  string `protobuf:"bytes,1,opt,name=staffId,proto3" json:"staffId,omitempty"`
	Building string `protobuf:"bytes,2,opt,name=building,proto3" json:"building,omitempty"`
	Room     string `protobuf:"bytes,3,opt,name=room,proto3" json:"room,omitempty"`
}

func (x *GetStudentDormInfoResponse) Reset() {
	*x = GetStudentDormInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentDormInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentDormInfoResponse) ProtoMessage() {}

func (x *GetStudentDormInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentDormInfoResponse.ProtoReflect.Descriptor instead.
func (*GetStudentDormInfoResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{4}
}

func (x *GetStudentDormInfoResponse) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *GetStudentDormInfoResponse) GetBuilding() string {
	if x != nil {
		return x.Building
	}
	return ""
}

func (x *GetStudentDormInfoResponse) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

type NeedyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Staff          *baseStaff.Info     `protobuf:"bytes,1,opt,name=staff,proto3" json:"staff,omitempty"`
	Sex            uint32              `protobuf:"varint,3,opt,name=sex,proto3" json:"sex,omitempty"`
	IsNeedyStudent bool                `protobuf:"varint,4,opt,name=is_needy_student,json=isNeedyStudent,proto3" json:"is_needy_student,omitempty"`
	Items          []*NeedyInfo_Nested `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *NeedyInfo) Reset() {
	*x = NeedyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NeedyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NeedyInfo) ProtoMessage() {}

func (x *NeedyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NeedyInfo.ProtoReflect.Descriptor instead.
func (*NeedyInfo) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{5}
}

func (x *NeedyInfo) GetStaff() *baseStaff.Info {
	if x != nil {
		return x.Staff
	}
	return nil
}

func (x *NeedyInfo) GetSex() uint32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *NeedyInfo) GetIsNeedyStudent() bool {
	if x != nil {
		return x.IsNeedyStudent
	}
	return false
}

func (x *NeedyInfo) GetItems() []*NeedyInfo_Nested {
	if x != nil {
		return x.Items
	}
	return nil
}

type BirthdayHandlerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Staff *baseStaff.Staff `protobuf:"bytes,1,opt,name=staff,proto3" json:"staff,omitempty"`
}

func (x *BirthdayHandlerRequest) Reset() {
	*x = BirthdayHandlerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BirthdayHandlerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BirthdayHandlerRequest) ProtoMessage() {}

func (x *BirthdayHandlerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BirthdayHandlerRequest.ProtoReflect.Descriptor instead.
func (*BirthdayHandlerRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{6}
}

func (x *BirthdayHandlerRequest) GetStaff() *baseStaff.Staff {
	if x != nil {
		return x.Staff
	}
	return nil
}

type BirthdayHandlerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffId  string `protobuf:"bytes,1,opt,name=staff_id,json=staffId,proto3" json:"staff_id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Birthday string `protobuf:"bytes,3,opt,name=birthday,proto3" json:"birthday,omitempty"`
}

func (x *BirthdayHandlerResponse) Reset() {
	*x = BirthdayHandlerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BirthdayHandlerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BirthdayHandlerResponse) ProtoMessage() {}

func (x *BirthdayHandlerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BirthdayHandlerResponse.ProtoReflect.Descriptor instead.
func (*BirthdayHandlerResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{7}
}

func (x *BirthdayHandlerResponse) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *BirthdayHandlerResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BirthdayHandlerResponse) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

type BirthdaysHandlerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  baseStaff.Type `protobuf:"varint,1,opt,name=type,proto3,enum=baseStaff.Type" json:"type,omitempty"`
	Month int32          `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	Day   int32          `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *BirthdaysHandlerRequest) Reset() {
	*x = BirthdaysHandlerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BirthdaysHandlerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BirthdaysHandlerRequest) ProtoMessage() {}

func (x *BirthdaysHandlerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BirthdaysHandlerRequest.ProtoReflect.Descriptor instead.
func (*BirthdaysHandlerRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{8}
}

func (x *BirthdaysHandlerRequest) GetType() baseStaff.Type {
	if x != nil {
		return x.Type
	}
	return baseStaff.Type(0)
}

func (x *BirthdaysHandlerRequest) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *BirthdaysHandlerRequest) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

type BirthdaysHandlerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Birthdays []*BirthdayHandlerResponse `protobuf:"bytes,1,rep,name=birthdays,proto3" json:"birthdays,omitempty"`
}

func (x *BirthdaysHandlerResponse) Reset() {
	*x = BirthdaysHandlerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BirthdaysHandlerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BirthdaysHandlerResponse) ProtoMessage() {}

func (x *BirthdaysHandlerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BirthdaysHandlerResponse.ProtoReflect.Descriptor instead.
func (*BirthdaysHandlerResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{9}
}

func (x *BirthdaysHandlerResponse) GetBirthdays() []*BirthdayHandlerResponse {
	if x != nil {
		return x.Birthdays
	}
	return nil
}

type StudentStaySchoolReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffId           string `protobuf:"bytes,1,opt,name=staff_id,json=staffId,proto3" json:"staff_id,omitempty"`
	StaffName         string `protobuf:"bytes,2,opt,name=staff_name,json=staffName,proto3" json:"staff_name,omitempty"`
	ReportTime        string `protobuf:"bytes,3,opt,name=report_time,json=reportTime,proto3" json:"report_time,omitempty"`
	Reason            string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	Time1Start        string `protobuf:"bytes,5,opt,name=time1_start,json=time1Start,proto3" json:"time1_start,omitempty"`
	Time1End          string `protobuf:"bytes,6,opt,name=time1_end,json=time1End,proto3" json:"time1_end,omitempty"`
	Time2Start        string `protobuf:"bytes,7,opt,name=time2_start,json=time2Start,proto3" json:"time2_start,omitempty"`
	Time2End          string `protobuf:"bytes,8,opt,name=time2_end,json=time2End,proto3" json:"time2_end,omitempty"`
	TeacherStatus     string `protobuf:"bytes,9,opt,name=teacher_status,json=teacherStatus,proto3" json:"teacher_status,omitempty"`
	TeacherRemark     string `protobuf:"bytes,10,opt,name=teacher_remark,json=teacherRemark,proto3" json:"teacher_remark,omitempty"`
	TeacherReviewTime string `protobuf:"bytes,11,opt,name=teacher_review_time,json=teacherReviewTime,proto3" json:"teacher_review_time,omitempty"`
	UnitStatus        string `protobuf:"bytes,12,opt,name=unit_status,json=unitStatus,proto3" json:"unit_status,omitempty"`
	UnitRemark        string `protobuf:"bytes,13,opt,name=unit_remark,json=unitRemark,proto3" json:"unit_remark,omitempty"`
	UnitReviewTime    string `protobuf:"bytes,14,opt,name=unit_review_time,json=unitReviewTime,proto3" json:"unit_review_time,omitempty"`
	CancelStatus      string `protobuf:"bytes,15,opt,name=cancel_status,json=cancelStatus,proto3" json:"cancel_status,omitempty"`
}

func (x *StudentStaySchoolReply) Reset() {
	*x = StudentStaySchoolReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentStaySchoolReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentStaySchoolReply) ProtoMessage() {}

func (x *StudentStaySchoolReply) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentStaySchoolReply.ProtoReflect.Descriptor instead.
func (*StudentStaySchoolReply) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{10}
}

func (x *StudentStaySchoolReply) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *StudentStaySchoolReply) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *StudentStaySchoolReply) GetReportTime() string {
	if x != nil {
		return x.ReportTime
	}
	return ""
}

func (x *StudentStaySchoolReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *StudentStaySchoolReply) GetTime1Start() string {
	if x != nil {
		return x.Time1Start
	}
	return ""
}

func (x *StudentStaySchoolReply) GetTime1End() string {
	if x != nil {
		return x.Time1End
	}
	return ""
}

func (x *StudentStaySchoolReply) GetTime2Start() string {
	if x != nil {
		return x.Time2Start
	}
	return ""
}

func (x *StudentStaySchoolReply) GetTime2End() string {
	if x != nil {
		return x.Time2End
	}
	return ""
}

func (x *StudentStaySchoolReply) GetTeacherStatus() string {
	if x != nil {
		return x.TeacherStatus
	}
	return ""
}

func (x *StudentStaySchoolReply) GetTeacherRemark() string {
	if x != nil {
		return x.TeacherRemark
	}
	return ""
}

func (x *StudentStaySchoolReply) GetTeacherReviewTime() string {
	if x != nil {
		return x.TeacherReviewTime
	}
	return ""
}

func (x *StudentStaySchoolReply) GetUnitStatus() string {
	if x != nil {
		return x.UnitStatus
	}
	return ""
}

func (x *StudentStaySchoolReply) GetUnitRemark() string {
	if x != nil {
		return x.UnitRemark
	}
	return ""
}

func (x *StudentStaySchoolReply) GetUnitReviewTime() string {
	if x != nil {
		return x.UnitReviewTime
	}
	return ""
}

func (x *StudentStaySchoolReply) GetCancelStatus() string {
	if x != nil {
		return x.CancelStatus
	}
	return ""
}

type GateAccessHandlerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffId    string `protobuf:"bytes,1,opt,name=staff_id,json=staffId,proto3" json:"staff_id,omitempty"`
	DayOffType string `protobuf:"bytes,2,opt,name=day_off_type,json=dayOffType,proto3" json:"day_off_type,omitempty"`
	DayOffName string `protobuf:"bytes,3,opt,name=day_off_name,json=dayOffName,proto3" json:"day_off_name,omitempty"`
	TimeStart  string `protobuf:"bytes,4,opt,name=time_start,json=timeStart,proto3" json:"time_start,omitempty"`
	TimeEnd    string `protobuf:"bytes,5,opt,name=time_end,json=timeEnd,proto3" json:"time_end,omitempty"`
	Uid        string `protobuf:"bytes,6,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GateAccessHandlerRequest) Reset() {
	*x = GateAccessHandlerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GateAccessHandlerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GateAccessHandlerRequest) ProtoMessage() {}

func (x *GateAccessHandlerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GateAccessHandlerRequest.ProtoReflect.Descriptor instead.
func (*GateAccessHandlerRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{11}
}

func (x *GateAccessHandlerRequest) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *GateAccessHandlerRequest) GetDayOffType() string {
	if x != nil {
		return x.DayOffType
	}
	return ""
}

func (x *GateAccessHandlerRequest) GetDayOffName() string {
	if x != nil {
		return x.DayOffName
	}
	return ""
}

func (x *GateAccessHandlerRequest) GetTimeStart() string {
	if x != nil {
		return x.TimeStart
	}
	return ""
}

func (x *GateAccessHandlerRequest) GetTimeEnd() string {
	if x != nil {
		return x.TimeEnd
	}
	return ""
}

func (x *GateAccessHandlerRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type GateAccessHandlerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Done    bool   `protobuf:"varint,1,opt,name=done,proto3" json:"done,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GateAccessHandlerResponse) Reset() {
	*x = GateAccessHandlerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GateAccessHandlerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GateAccessHandlerResponse) ProtoMessage() {}

func (x *GateAccessHandlerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GateAccessHandlerResponse.ProtoReflect.Descriptor instead.
func (*GateAccessHandlerResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{12}
}

func (x *GateAccessHandlerResponse) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *GateAccessHandlerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StudentStaySchoolHandlerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Staff *baseStaff.Staff `protobuf:"bytes,1,opt,name=staff,proto3" json:"staff,omitempty"`
}

func (x *StudentStaySchoolHandlerRequest) Reset() {
	*x = StudentStaySchoolHandlerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentStaySchoolHandlerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentStaySchoolHandlerRequest) ProtoMessage() {}

func (x *StudentStaySchoolHandlerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentStaySchoolHandlerRequest.ProtoReflect.Descriptor instead.
func (*StudentStaySchoolHandlerRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{13}
}

func (x *StudentStaySchoolHandlerRequest) GetStaff() *baseStaff.Staff {
	if x != nil {
		return x.Staff
	}
	return nil
}

type StudentStaySchoolHandlerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffId           string `protobuf:"bytes,1,opt,name=staff_id,json=staffId,proto3" json:"staff_id,omitempty"`
	StaffName         string `protobuf:"bytes,2,opt,name=staff_name,json=staffName,proto3" json:"staff_name,omitempty"`
	ReportTime        string `protobuf:"bytes,3,opt,name=report_time,json=reportTime,proto3" json:"report_time,omitempty"`
	Reason            string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	Time1Start        string `protobuf:"bytes,5,opt,name=time1_start,json=time1Start,proto3" json:"time1_start,omitempty"`
	Time1End          string `protobuf:"bytes,6,opt,name=time1_end,json=time1End,proto3" json:"time1_end,omitempty"`
	Time2Start        string `protobuf:"bytes,7,opt,name=time2_start,json=time2Start,proto3" json:"time2_start,omitempty"`
	Time2End          string `protobuf:"bytes,8,opt,name=time2_end,json=time2End,proto3" json:"time2_end,omitempty"`
	TeacherStatus     string `protobuf:"bytes,9,opt,name=teacher_status,json=teacherStatus,proto3" json:"teacher_status,omitempty"`
	TeacherRemark     string `protobuf:"bytes,10,opt,name=teacher_remark,json=teacherRemark,proto3" json:"teacher_remark,omitempty"`
	TeacherReviewTime string `protobuf:"bytes,11,opt,name=teacher_review_time,json=teacherReviewTime,proto3" json:"teacher_review_time,omitempty"`
	UnitStatus        string `protobuf:"bytes,12,opt,name=unit_status,json=unitStatus,proto3" json:"unit_status,omitempty"`
	UnitRemark        string `protobuf:"bytes,13,opt,name=unit_remark,json=unitRemark,proto3" json:"unit_remark,omitempty"`
	UnitReviewTime    string `protobuf:"bytes,14,opt,name=unit_review_time,json=unitReviewTime,proto3" json:"unit_review_time,omitempty"`
	CancelStatus      string `protobuf:"bytes,15,opt,name=cancel_status,json=cancelStatus,proto3" json:"cancel_status,omitempty"`
}

func (x *StudentStaySchoolHandlerResponse) Reset() {
	*x = StudentStaySchoolHandlerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentStaySchoolHandlerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentStaySchoolHandlerResponse) ProtoMessage() {}

func (x *StudentStaySchoolHandlerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentStaySchoolHandlerResponse.ProtoReflect.Descriptor instead.
func (*StudentStaySchoolHandlerResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{14}
}

func (x *StudentStaySchoolHandlerResponse) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *StudentStaySchoolHandlerResponse) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *StudentStaySchoolHandlerResponse) GetReportTime() string {
	if x != nil {
		return x.ReportTime
	}
	return ""
}

func (x *StudentStaySchoolHandlerResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *StudentStaySchoolHandlerResponse) GetTime1Start() string {
	if x != nil {
		return x.Time1Start
	}
	return ""
}

func (x *StudentStaySchoolHandlerResponse) GetTime1End() string {
	if x != nil {
		return x.Time1End
	}
	return ""
}

func (x *StudentStaySchoolHandlerResponse) GetTime2Start() string {
	if x != nil {
		return x.Time2Start
	}
	return ""
}

func (x *StudentStaySchoolHandlerResponse) GetTime2End() string {
	if x != nil {
		return x.Time2End
	}
	return ""
}

func (x *StudentStaySchoolHandlerResponse) GetTeacherStatus() string {
	if x != nil {
		return x.TeacherStatus
	}
	return ""
}

func (x *StudentStaySchoolHandlerResponse) GetTeacherRemark() string {
	if x != nil {
		return x.TeacherRemark
	}
	return ""
}

func (x *StudentStaySchoolHandlerResponse) GetTeacherReviewTime() string {
	if x != nil {
		return x.TeacherReviewTime
	}
	return ""
}

func (x *StudentStaySchoolHandlerResponse) GetUnitStatus() string {
	if x != nil {
		return x.UnitStatus
	}
	return ""
}

func (x *StudentStaySchoolHandlerResponse) GetUnitRemark() string {
	if x != nil {
		return x.UnitRemark
	}
	return ""
}

func (x *StudentStaySchoolHandlerResponse) GetUnitReviewTime() string {
	if x != nil {
		return x.UnitReviewTime
	}
	return ""
}

func (x *StudentStaySchoolHandlerResponse) GetCancelStatus() string {
	if x != nil {
		return x.CancelStatus
	}
	return ""
}

type GetStudentNeedyInfoResponse_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchoolYear   int32 `protobuf:"varint,1,opt,name=schoolYear,proto3" json:"schoolYear,omitempty"`
	NeedyStudent bool  `protobuf:"varint,2,opt,name=needyStudent,proto3" json:"needyStudent,omitempty"`
}

func (x *GetStudentNeedyInfoResponse_Nested) Reset() {
	*x = GetStudentNeedyInfoResponse_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentNeedyInfoResponse_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentNeedyInfoResponse_Nested) ProtoMessage() {}

func (x *GetStudentNeedyInfoResponse_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentNeedyInfoResponse_Nested.ProtoReflect.Descriptor instead.
func (*GetStudentNeedyInfoResponse_Nested) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetStudentNeedyInfoResponse_Nested) GetSchoolYear() int32 {
	if x != nil {
		return x.SchoolYear
	}
	return 0
}

func (x *GetStudentNeedyInfoResponse_Nested) GetNeedyStudent() bool {
	if x != nil {
		return x.NeedyStudent
	}
	return false
}

type NeedyInfo_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchoolYear     uint32 `protobuf:"varint,1,opt,name=school_year,json=schoolYear,proto3" json:"school_year,omitempty"`
	IsNeedyStudent bool   `protobuf:"varint,2,opt,name=is_needy_student,json=isNeedyStudent,proto3" json:"is_needy_student,omitempty"`
}

func (x *NeedyInfo_Nested) Reset() {
	*x = NeedyInfo_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NeedyInfo_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NeedyInfo_Nested) ProtoMessage() {}

func (x *NeedyInfo_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NeedyInfo_Nested.ProtoReflect.Descriptor instead.
func (*NeedyInfo_Nested) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{5, 0}
}

func (x *NeedyInfo_Nested) GetSchoolYear() uint32 {
	if x != nil {
		return x.SchoolYear
	}
	return 0
}

func (x *NeedyInfo_Nested) GetIsNeedyStudent() bool {
	if x != nil {
		return x.IsNeedyStudent
	}
	return false
}

var File_campusapis_staff_v1_student_proto protoreflect.FileDescriptor

var file_campusapis_staff_v1_student_proto_rawDesc = []byte{
	0x0a, 0x21, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x13, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x62, 0x61, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x66, 0x66, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2f, 0x73, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x96, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x96, 0x01, 0x0a,
	0x0b, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74,
	0x12, 0x23, 0x0a, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x52, 0x05,
	0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x22, 0x4c, 0x0a, 0x08, 0x44, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f,
	0x6d, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x62, 0x65, 0x64, 0x22, 0xac, 0x02, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x4e, 0x65, 0x65, 0x64, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59,
	0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65,
	0x78, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x79, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x65, 0x64, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x1a, 0x4c, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x22, 0x66, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x44, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x80, 0x02, 0x0a, 0x09, 0x4e,
	0x65, 0x65, 0x64, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x66, 0x66, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65,
	0x78, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x79, 0x5f, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x4e,
	0x65, 0x65, 0x64, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x61, 0x6d,
	0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x65, 0x65, 0x64, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x53, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x79, 0x65, 0x61,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59,
	0x65, 0x61, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x79, 0x5f,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69,
	0x73, 0x4e, 0x65, 0x65, 0x64, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x22, 0x40, 0x0a,
	0x16, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x66, 0x66, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x22,
	0x64, 0x0a, 0x17, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x22, 0x66, 0x0a, 0x17, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x79, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x61, 0x79, 0x22, 0x66, 0x0a,
	0x18, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x09, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63,
	0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x73, 0x22, 0x96, 0x04, 0x0a, 0x16, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x79, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x66, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x66, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x31, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x31, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x31, 0x5f, 0x65, 0x6e,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x31, 0x45, 0x6e,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x32, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x32, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x32, 0x5f, 0x65, 0x6e, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x32, 0x45, 0x6e, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x2e, 0x0a,
	0x13, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x28, 0x0a, 0x10, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x6e, 0x69, 0x74, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc5,
	0x01, 0x0a, 0x18, 0x47, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x74, 0x61, 0x66, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x64, 0x61, 0x79, 0x5f, 0x6f, 0x66,
	0x66, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61,
	0x79, 0x4f, 0x66, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x64, 0x61, 0x79, 0x5f,
	0x6f, 0x66, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x61, 0x79, 0x4f, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x45, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x19, 0x47, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x49, 0x0a, 0x1f, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x79,
	0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x2e,
	0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x22, 0xa0, 0x04, 0x0a,
	0x20, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x79, 0x53, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x66, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x31, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x31,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x31, 0x5f, 0x65,
	0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x31, 0x45,
	0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x32, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x32, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x32, 0x5f, 0x65, 0x6e, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x32, 0x45, 0x6e, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x2e,
	0x0a, 0x13, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x28, 0x0a, 0x10, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x6e, 0x69, 0x74,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32,
	0x96, 0x08, 0x0a, 0x0e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e,
	0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x29, 0x5a, 0x0f, 0x12, 0x0d, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x92, 0x01, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x65, 0x64, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x30, 0x2e, 0x63, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x65, 0x64,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x5a, 0x10, 0x12, 0x0e, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x2f, 0x6e, 0x65, 0x65, 0x64, 0x79, 0x12, 0x17, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x6e, 0x65, 0x65, 0x64, 0x79,
	0x12, 0x8e, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x44,
	0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x2f, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x44, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x5a, 0x0f, 0x12, 0x0d, 0x2f, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x2f, 0x64, 0x6f, 0x72, 0x6d, 0x12, 0x16, 0x2f, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x64, 0x6f, 0x72,
	0x6d, 0x12, 0xa5, 0x01, 0x0a, 0x0f, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x5a, 0x13, 0x12, 0x11, 0x2f, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x2f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x1a, 0x2f,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x2f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0xaa, 0x01, 0x0a, 0x10, 0x42, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x2c,
	0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x73, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63,
	0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x73, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x33, 0x5a, 0x14, 0x12, 0x12, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x73, 0x12, 0x1b, 0x2f, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x73, 0x12, 0x74, 0x0a, 0x11, 0x47, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x63, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x61, 0x6d,
	0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x89, 0x01, 0x0a,
	0x18, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x79, 0x53, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x34, 0x2e, 0x63, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x79, 0x53, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x35, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x79, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xd2, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x68, 0x64, 0x75, 0x68, 0x65, 0x6c, 0x70, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x6f, 0x70, 0x65,
	0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2f, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73,
	0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x74, 0x61, 0x66, 0x66, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x43, 0x53, 0x58, 0xaa, 0x02, 0x13, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x13,
	0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x5c, 0x53, 0x74, 0x61, 0x66, 0x66,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1f, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73,
	0x5c, 0x53, 0x74, 0x61, 0x66, 0x66, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x15, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70,
	0x69, 0x73, 0x3a, 0x3a, 0x53, 0x74, 0x61, 0x66, 0x66, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_campusapis_staff_v1_student_proto_rawDescOnce sync.Once
	file_campusapis_staff_v1_student_proto_rawDescData = file_campusapis_staff_v1_student_proto_rawDesc
)

func file_campusapis_staff_v1_student_proto_rawDescGZIP() []byte {
	file_campusapis_staff_v1_student_proto_rawDescOnce.Do(func() {
		file_campusapis_staff_v1_student_proto_rawDescData = protoimpl.X.CompressGZIP(file_campusapis_staff_v1_student_proto_rawDescData)
	})
	return file_campusapis_staff_v1_student_proto_rawDescData
}

var file_campusapis_staff_v1_student_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_campusapis_staff_v1_student_proto_goTypes = []interface{}{
	(*GetStudentInfoResponse)(nil),             // 0: campusapis.staff.v1.GetStudentInfoResponse
	(*StudentInfo)(nil),                        // 1: campusapis.staff.v1.StudentInfo
	(*DormInfo)(nil),                           // 2: campusapis.staff.v1.DormInfo
	(*GetStudentNeedyInfoResponse)(nil),        // 3: campusapis.staff.v1.GetStudentNeedyInfoResponse
	(*GetStudentDormInfoResponse)(nil),         // 4: campusapis.staff.v1.GetStudentDormInfoResponse
	(*NeedyInfo)(nil),                          // 5: campusapis.staff.v1.NeedyInfo
	(*BirthdayHandlerRequest)(nil),             // 6: campusapis.staff.v1.BirthdayHandlerRequest
	(*BirthdayHandlerResponse)(nil),            // 7: campusapis.staff.v1.BirthdayHandlerResponse
	(*BirthdaysHandlerRequest)(nil),            // 8: campusapis.staff.v1.BirthdaysHandlerRequest
	(*BirthdaysHandlerResponse)(nil),           // 9: campusapis.staff.v1.BirthdaysHandlerResponse
	(*StudentStaySchoolReply)(nil),             // 10: campusapis.staff.v1.StudentStaySchoolReply
	(*GateAccessHandlerRequest)(nil),           // 11: campusapis.staff.v1.GateAccessHandlerRequest
	(*GateAccessHandlerResponse)(nil),          // 12: campusapis.staff.v1.GateAccessHandlerResponse
	(*StudentStaySchoolHandlerRequest)(nil),    // 13: campusapis.staff.v1.StudentStaySchoolHandlerRequest
	(*StudentStaySchoolHandlerResponse)(nil),   // 14: campusapis.staff.v1.StudentStaySchoolHandlerResponse
	(*GetStudentNeedyInfoResponse_Nested)(nil), // 15: campusapis.staff.v1.GetStudentNeedyInfoResponse.Nested
	(*NeedyInfo_Nested)(nil),                   // 16: campusapis.staff.v1.NeedyInfo.Nested
	(*baseStaff.Info)(nil),                     // 17: baseStaff.Info
	(*school.Unit)(nil),                        // 18: school.Unit
	(*school.Major)(nil),                       // 19: school.Major
	(*baseStaff.Staff)(nil),                    // 20: baseStaff.Staff
	(baseStaff.Type)(0),                        // 21: baseStaff.Type
	(*emptypb.Empty)(nil),                      // 22: google.protobuf.Empty
}
var file_campusapis_staff_v1_student_proto_depIdxs = []int32{
	17, // 0: campusapis.staff.v1.StudentInfo.staff:type_name -> baseStaff.Info
	18, // 1: campusapis.staff.v1.StudentInfo.unit:type_name -> school.Unit
	19, // 2: campusapis.staff.v1.StudentInfo.major:type_name -> school.Major
	15, // 3: campusapis.staff.v1.GetStudentNeedyInfoResponse.items:type_name -> campusapis.staff.v1.GetStudentNeedyInfoResponse.Nested
	17, // 4: campusapis.staff.v1.NeedyInfo.staff:type_name -> baseStaff.Info
	16, // 5: campusapis.staff.v1.NeedyInfo.items:type_name -> campusapis.staff.v1.NeedyInfo.Nested
	20, // 6: campusapis.staff.v1.BirthdayHandlerRequest.staff:type_name -> baseStaff.Staff
	21, // 7: campusapis.staff.v1.BirthdaysHandlerRequest.type:type_name -> baseStaff.Type
	7,  // 8: campusapis.staff.v1.BirthdaysHandlerResponse.birthdays:type_name -> campusapis.staff.v1.BirthdayHandlerResponse
	20, // 9: campusapis.staff.v1.StudentStaySchoolHandlerRequest.staff:type_name -> baseStaff.Staff
	22, // 10: campusapis.staff.v1.StudentService.GetStudentInfo:input_type -> google.protobuf.Empty
	22, // 11: campusapis.staff.v1.StudentService.GetStudentNeedyInfo:input_type -> google.protobuf.Empty
	22, // 12: campusapis.staff.v1.StudentService.GetStudentDormInfo:input_type -> google.protobuf.Empty
	6,  // 13: campusapis.staff.v1.StudentService.BirthdayHandler:input_type -> campusapis.staff.v1.BirthdayHandlerRequest
	8,  // 14: campusapis.staff.v1.StudentService.BirthdaysHandler:input_type -> campusapis.staff.v1.BirthdaysHandlerRequest
	11, // 15: campusapis.staff.v1.StudentService.GateAccessHandler:input_type -> campusapis.staff.v1.GateAccessHandlerRequest
	13, // 16: campusapis.staff.v1.StudentService.StudentStaySchoolHandler:input_type -> campusapis.staff.v1.StudentStaySchoolHandlerRequest
	0,  // 17: campusapis.staff.v1.StudentService.GetStudentInfo:output_type -> campusapis.staff.v1.GetStudentInfoResponse
	3,  // 18: campusapis.staff.v1.StudentService.GetStudentNeedyInfo:output_type -> campusapis.staff.v1.GetStudentNeedyInfoResponse
	4,  // 19: campusapis.staff.v1.StudentService.GetStudentDormInfo:output_type -> campusapis.staff.v1.GetStudentDormInfoResponse
	7,  // 20: campusapis.staff.v1.StudentService.BirthdayHandler:output_type -> campusapis.staff.v1.BirthdayHandlerResponse
	9,  // 21: campusapis.staff.v1.StudentService.BirthdaysHandler:output_type -> campusapis.staff.v1.BirthdaysHandlerResponse
	12, // 22: campusapis.staff.v1.StudentService.GateAccessHandler:output_type -> campusapis.staff.v1.GateAccessHandlerResponse
	14, // 23: campusapis.staff.v1.StudentService.StudentStaySchoolHandler:output_type -> campusapis.staff.v1.StudentStaySchoolHandlerResponse
	17, // [17:24] is the sub-list for method output_type
	10, // [10:17] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_campusapis_staff_v1_student_proto_init() }
func file_campusapis_staff_v1_student_proto_init() {
	if File_campusapis_staff_v1_student_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_campusapis_staff_v1_student_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DormInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentNeedyInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentDormInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NeedyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BirthdayHandlerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BirthdayHandlerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BirthdaysHandlerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BirthdaysHandlerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentStaySchoolReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GateAccessHandlerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GateAccessHandlerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentStaySchoolHandlerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentStaySchoolHandlerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentNeedyInfoResponse_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NeedyInfo_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_campusapis_staff_v1_student_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_campusapis_staff_v1_student_proto_goTypes,
		DependencyIndexes: file_campusapis_staff_v1_student_proto_depIdxs,
		MessageInfos:      file_campusapis_staff_v1_student_proto_msgTypes,
	}.Build()
	File_campusapis_staff_v1_student_proto = out.File
	file_campusapis_staff_v1_student_proto_rawDesc = nil
	file_campusapis_staff_v1_student_proto_goTypes = nil
	file_campusapis_staff_v1_student_proto_depIdxs = nil
}
