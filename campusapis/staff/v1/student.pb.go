// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: campusapis/staff/v1/student.proto

package staffv1

import (
	baseStaff "github.com/hduhelp/api_open_sdk/baseStaff"
	_ "github.com/hduhelp/api_open_sdk/school"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SemesterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchoolYear string `protobuf:"bytes,1,opt,name=schoolYear,proto3" json:"schoolYear,omitempty"`
	Nth        string `protobuf:"bytes,2,opt,name=Nth,proto3" json:"Nth,omitempty"`
}

func (x *SemesterRequest) Reset() {
	*x = SemesterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SemesterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SemesterRequest) ProtoMessage() {}

func (x *SemesterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SemesterRequest.ProtoReflect.Descriptor instead.
func (*SemesterRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{0}
}

func (x *SemesterRequest) GetSchoolYear() string {
	if x != nil {
		return x.SchoolYear
	}
	return ""
}

func (x *SemesterRequest) GetNth() string {
	if x != nil {
		return x.Nth
	}
	return ""
}

type GetStudentInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffId     string `protobuf:"bytes,1,opt,name=staffId,proto3" json:"staffId,omitempty"`         //学号
	StaffName   string `protobuf:"bytes,2,opt,name=staffName,proto3" json:"staffName,omitempty"`     //学生姓名
	ClassId     string `protobuf:"bytes,3,opt,name=classId,proto3" json:"classId,omitempty"`         //学生班级号
	UnitId      string `protobuf:"bytes,4,opt,name=unitId,proto3" json:"unitId,omitempty"`           //学生学院编号
	UnitName    string `protobuf:"bytes,5,opt,name=unitName,proto3" json:"unitName,omitempty"`       //学生学院名称
	MajorId     string `protobuf:"bytes,6,opt,name=majorId,proto3" json:"majorId,omitempty"`         //学生专业编号
	MajorName   string `protobuf:"bytes,7,opt,name=majorName,proto3" json:"majorName,omitempty"`     //学生专业名称
	TeacherId   string `protobuf:"bytes,8,opt,name=teacherId,proto3" json:"teacherId,omitempty"`     //学生辅导员工号
	TeacherName string `protobuf:"bytes,9,opt,name=teacherName,proto3" json:"teacherName,omitempty"` //学生辅导员姓名
}

func (x *GetStudentInfoResponse) Reset() {
	*x = GetStudentInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentInfoResponse) ProtoMessage() {}

func (x *GetStudentInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentInfoResponse.ProtoReflect.Descriptor instead.
func (*GetStudentInfoResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{1}
}

func (x *GetStudentInfoResponse) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *GetStudentInfoResponse) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *GetStudentInfoResponse) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *GetStudentInfoResponse) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *GetStudentInfoResponse) GetUnitName() string {
	if x != nil {
		return x.UnitName
	}
	return ""
}

func (x *GetStudentInfoResponse) GetMajorId() string {
	if x != nil {
		return x.MajorId
	}
	return ""
}

func (x *GetStudentInfoResponse) GetMajorName() string {
	if x != nil {
		return x.MajorName
	}
	return ""
}

func (x *GetStudentInfoResponse) GetTeacherId() string {
	if x != nil {
		return x.TeacherId
	}
	return ""
}

func (x *GetStudentInfoResponse) GetTeacherName() string {
	if x != nil {
		return x.TeacherName
	}
	return ""
}

type GetStudentNeedyInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffId      string                                `protobuf:"bytes,1,opt,name=staffId,proto3" json:"staffId,omitempty"`
	StaffName    string                                `protobuf:"bytes,2,opt,name=staffName,proto3" json:"staffName,omitempty"`
	Sex          int32                                 `protobuf:"varint,3,opt,name=sex,proto3" json:"sex,omitempty"`
	NeedyStudent bool                                  `protobuf:"varint,4,opt,name=needyStudent,proto3" json:"needyStudent,omitempty"`
	Items        []*GetStudentNeedyInfoResponse_Nested `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetStudentNeedyInfoResponse) Reset() {
	*x = GetStudentNeedyInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentNeedyInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentNeedyInfoResponse) ProtoMessage() {}

func (x *GetStudentNeedyInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentNeedyInfoResponse.ProtoReflect.Descriptor instead.
func (*GetStudentNeedyInfoResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{2}
}

func (x *GetStudentNeedyInfoResponse) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *GetStudentNeedyInfoResponse) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *GetStudentNeedyInfoResponse) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *GetStudentNeedyInfoResponse) GetNeedyStudent() bool {
	if x != nil {
		return x.NeedyStudent
	}
	return false
}

func (x *GetStudentNeedyInfoResponse) GetItems() []*GetStudentNeedyInfoResponse_Nested {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetStudentDormInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffId  string `protobuf:"bytes,1,opt,name=staffId,proto3" json:"staffId,omitempty"`
	Building string `protobuf:"bytes,2,opt,name=building,proto3" json:"building,omitempty"`
	Room     string `protobuf:"bytes,3,opt,name=room,proto3" json:"room,omitempty"`
}

func (x *GetStudentDormInfoResponse) Reset() {
	*x = GetStudentDormInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentDormInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentDormInfoResponse) ProtoMessage() {}

func (x *GetStudentDormInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentDormInfoResponse.ProtoReflect.Descriptor instead.
func (*GetStudentDormInfoResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{3}
}

func (x *GetStudentDormInfoResponse) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *GetStudentDormInfoResponse) GetBuilding() string {
	if x != nil {
		return x.Building
	}
	return ""
}

func (x *GetStudentDormInfoResponse) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

type GetStudentBirthdayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffId  string `protobuf:"bytes,1,opt,name=staffId,proto3" json:"staffId,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Birthday string `protobuf:"bytes,3,opt,name=birthday,proto3" json:"birthday,omitempty"`
}

func (x *GetStudentBirthdayResponse) Reset() {
	*x = GetStudentBirthdayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentBirthdayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentBirthdayResponse) ProtoMessage() {}

func (x *GetStudentBirthdayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentBirthdayResponse.ProtoReflect.Descriptor instead.
func (*GetStudentBirthdayResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{4}
}

func (x *GetStudentBirthdayResponse) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *GetStudentBirthdayResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetStudentBirthdayResponse) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

type GetStudentBirthdaysInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  baseStaff.Type `protobuf:"varint,1,opt,name=type,proto3,enum=baseStaff.Type" json:"type,omitempty"`
	Month int32          `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	Day   int32          `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *GetStudentBirthdaysInRequest) Reset() {
	*x = GetStudentBirthdaysInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentBirthdaysInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentBirthdaysInRequest) ProtoMessage() {}

func (x *GetStudentBirthdaysInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentBirthdaysInRequest.ProtoReflect.Descriptor instead.
func (*GetStudentBirthdaysInRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{5}
}

func (x *GetStudentBirthdaysInRequest) GetType() baseStaff.Type {
	if x != nil {
		return x.Type
	}
	return baseStaff.Type(0)
}

func (x *GetStudentBirthdaysInRequest) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *GetStudentBirthdaysInRequest) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

type GetStudentBirthdaysInResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Birthdays []*GetStudentBirthdayResponse `protobuf:"bytes,1,rep,name=birthdays,proto3" json:"birthdays,omitempty"`
}

func (x *GetStudentBirthdaysInResponse) Reset() {
	*x = GetStudentBirthdaysInResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentBirthdaysInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentBirthdaysInResponse) ProtoMessage() {}

func (x *GetStudentBirthdaysInResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentBirthdaysInResponse.ProtoReflect.Descriptor instead.
func (*GetStudentBirthdaysInResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{6}
}

func (x *GetStudentBirthdaysInResponse) GetBirthdays() []*GetStudentBirthdayResponse {
	if x != nil {
		return x.Birthdays
	}
	return nil
}

type GetStudentRewardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GetStudentRewardsResponse_Nested `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetStudentRewardsResponse) Reset() {
	*x = GetStudentRewardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentRewardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentRewardsResponse) ProtoMessage() {}

func (x *GetStudentRewardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentRewardsResponse.ProtoReflect.Descriptor instead.
func (*GetStudentRewardsResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{7}
}

func (x *GetStudentRewardsResponse) GetItems() []*GetStudentRewardsResponse_Nested {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetStudentSelectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentSelects []*GetStudentSelectResponse_Nested `protobuf:"bytes,1,rep,name=StudentSelects,proto3" json:"StudentSelects,omitempty"`
}

func (x *GetStudentSelectResponse) Reset() {
	*x = GetStudentSelectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentSelectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentSelectResponse) ProtoMessage() {}

func (x *GetStudentSelectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentSelectResponse.ProtoReflect.Descriptor instead.
func (*GetStudentSelectResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{8}
}

func (x *GetStudentSelectResponse) GetStudentSelects() []*GetStudentSelectResponse_Nested {
	if x != nil {
		return x.StudentSelects
	}
	return nil
}

type GetStudentGradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GetStudentGradeResponse_Nested `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetStudentGradeResponse) Reset() {
	*x = GetStudentGradeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentGradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentGradeResponse) ProtoMessage() {}

func (x *GetStudentGradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentGradeResponse.ProtoReflect.Descriptor instead.
func (*GetStudentGradeResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{9}
}

func (x *GetStudentGradeResponse) GetItems() []*GetStudentGradeResponse_Nested {
	if x != nil {
		return x.Items
	}
	return nil
}

type PostStudentGateAccessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffId    string `protobuf:"bytes,1,opt,name=staffId,proto3" json:"staffId,omitempty"`
	DayOffType string `protobuf:"bytes,2,opt,name=dayOffType,proto3" json:"dayOffType,omitempty"`
	DayOffName string `protobuf:"bytes,3,opt,name=dayOffName,proto3" json:"dayOffName,omitempty"`
	TimeStart  string `protobuf:"bytes,4,opt,name=timeStart,proto3" json:"timeStart,omitempty"`
	TimeEnd    string `protobuf:"bytes,5,opt,name=timeEnd,proto3" json:"timeEnd,omitempty"`
	Uid        string `protobuf:"bytes,6,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *PostStudentGateAccessRequest) Reset() {
	*x = PostStudentGateAccessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostStudentGateAccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostStudentGateAccessRequest) ProtoMessage() {}

func (x *PostStudentGateAccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostStudentGateAccessRequest.ProtoReflect.Descriptor instead.
func (*PostStudentGateAccessRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{10}
}

func (x *PostStudentGateAccessRequest) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *PostStudentGateAccessRequest) GetDayOffType() string {
	if x != nil {
		return x.DayOffType
	}
	return ""
}

func (x *PostStudentGateAccessRequest) GetDayOffName() string {
	if x != nil {
		return x.DayOffName
	}
	return ""
}

func (x *PostStudentGateAccessRequest) GetTimeStart() string {
	if x != nil {
		return x.TimeStart
	}
	return ""
}

func (x *PostStudentGateAccessRequest) GetTimeEnd() string {
	if x != nil {
		return x.TimeEnd
	}
	return ""
}

func (x *PostStudentGateAccessRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type PostStudentGateAccessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Done    bool   `protobuf:"varint,1,opt,name=done,proto3" json:"done,omitempty"`      //是否完成
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` //完成信息
}

func (x *PostStudentGateAccessResponse) Reset() {
	*x = PostStudentGateAccessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostStudentGateAccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostStudentGateAccessResponse) ProtoMessage() {}

func (x *PostStudentGateAccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostStudentGateAccessResponse.ProtoReflect.Descriptor instead.
func (*PostStudentGateAccessResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{11}
}

func (x *PostStudentGateAccessResponse) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *PostStudentGateAccessResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetStudentStaySchoolInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffId           string `protobuf:"bytes,1,opt,name=staffId,proto3" json:"staffId,omitempty"`
	StaffName         string `protobuf:"bytes,2,opt,name=staffName,proto3" json:"staffName,omitempty"`
	ReportTime        string `protobuf:"bytes,3,opt,name=reportTime,proto3" json:"reportTime,omitempty"`
	Reason            string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	Time1Start        string `protobuf:"bytes,5,opt,name=time1Start,proto3" json:"time1Start,omitempty"`
	Time1End          string `protobuf:"bytes,6,opt,name=time1End,proto3" json:"time1End,omitempty"`
	Time2Start        string `protobuf:"bytes,7,opt,name=time2Start,proto3" json:"time2Start,omitempty"`
	Time2End          string `protobuf:"bytes,8,opt,name=time2End,proto3" json:"time2End,omitempty"`
	TeacherStatus     string `protobuf:"bytes,9,opt,name=teacherStatus,proto3" json:"teacherStatus,omitempty"`
	TeacherRemark     string `protobuf:"bytes,10,opt,name=teacherRemark,proto3" json:"teacherRemark,omitempty"`
	TeacherReviewTime string `protobuf:"bytes,11,opt,name=teacherReviewTime,proto3" json:"teacherReviewTime,omitempty"`
	UnitStatus        string `protobuf:"bytes,12,opt,name=unitStatus,proto3" json:"unitStatus,omitempty"`
	UnitRemark        string `protobuf:"bytes,13,opt,name=unitRemark,proto3" json:"unitRemark,omitempty"`
	UnitReviewTime    string `protobuf:"bytes,14,opt,name=unitReviewTime,proto3" json:"unitReviewTime,omitempty"`
	CancelStatus      string `protobuf:"bytes,15,opt,name=cancelStatus,proto3" json:"cancelStatus,omitempty"`
}

func (x *GetStudentStaySchoolInfoResponse) Reset() {
	*x = GetStudentStaySchoolInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentStaySchoolInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentStaySchoolInfoResponse) ProtoMessage() {}

func (x *GetStudentStaySchoolInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentStaySchoolInfoResponse.ProtoReflect.Descriptor instead.
func (*GetStudentStaySchoolInfoResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{12}
}

func (x *GetStudentStaySchoolInfoResponse) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetReportTime() string {
	if x != nil {
		return x.ReportTime
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetTime1Start() string {
	if x != nil {
		return x.Time1Start
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetTime1End() string {
	if x != nil {
		return x.Time1End
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetTime2Start() string {
	if x != nil {
		return x.Time2Start
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetTime2End() string {
	if x != nil {
		return x.Time2End
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetTeacherStatus() string {
	if x != nil {
		return x.TeacherStatus
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetTeacherRemark() string {
	if x != nil {
		return x.TeacherRemark
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetTeacherReviewTime() string {
	if x != nil {
		return x.TeacherReviewTime
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetUnitStatus() string {
	if x != nil {
		return x.UnitStatus
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetUnitRemark() string {
	if x != nil {
		return x.UnitRemark
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetUnitReviewTime() string {
	if x != nil {
		return x.UnitReviewTime
	}
	return ""
}

func (x *GetStudentStaySchoolInfoResponse) GetCancelStatus() string {
	if x != nil {
		return x.CancelStatus
	}
	return ""
}

type GetStudentNeedyInfoResponse_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchoolYear   int32 `protobuf:"varint,1,opt,name=schoolYear,proto3" json:"schoolYear,omitempty"`
	NeedyStudent bool  `protobuf:"varint,2,opt,name=needyStudent,proto3" json:"needyStudent,omitempty"`
}

func (x *GetStudentNeedyInfoResponse_Nested) Reset() {
	*x = GetStudentNeedyInfoResponse_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentNeedyInfoResponse_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentNeedyInfoResponse_Nested) ProtoMessage() {}

func (x *GetStudentNeedyInfoResponse_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentNeedyInfoResponse_Nested.ProtoReflect.Descriptor instead.
func (*GetStudentNeedyInfoResponse_Nested) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{2, 0}
}

func (x *GetStudentNeedyInfoResponse_Nested) GetSchoolYear() int32 {
	if x != nil {
		return x.SchoolYear
	}
	return 0
}

func (x *GetStudentNeedyInfoResponse_Nested) GetNeedyStudent() bool {
	if x != nil {
		return x.NeedyStudent
	}
	return false
}

type GetStudentRewardsResponse_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffID     string `protobuf:"bytes,1,opt,name=staffID,proto3" json:"staffID,omitempty"`
	StaffName   string `protobuf:"bytes,2,opt,name=staffName,proto3" json:"staffName,omitempty"`
	RewardName  string `protobuf:"bytes,3,opt,name=rewardName,proto3" json:"rewardName,omitempty"`
	SchoolYear  string `protobuf:"bytes,4,opt,name=schoolYear,proto3" json:"schoolYear,omitempty"`
	Semester    string `protobuf:"bytes,5,opt,name=semester,proto3" json:"semester,omitempty"`
	RewardLevel string `protobuf:"bytes,6,opt,name=rewardLevel,proto3" json:"rewardLevel,omitempty"`
}

func (x *GetStudentRewardsResponse_Nested) Reset() {
	*x = GetStudentRewardsResponse_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentRewardsResponse_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentRewardsResponse_Nested) ProtoMessage() {}

func (x *GetStudentRewardsResponse_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentRewardsResponse_Nested.ProtoReflect.Descriptor instead.
func (*GetStudentRewardsResponse_Nested) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{7, 0}
}

func (x *GetStudentRewardsResponse_Nested) GetStaffID() string {
	if x != nil {
		return x.StaffID
	}
	return ""
}

func (x *GetStudentRewardsResponse_Nested) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *GetStudentRewardsResponse_Nested) GetRewardName() string {
	if x != nil {
		return x.RewardName
	}
	return ""
}

func (x *GetStudentRewardsResponse_Nested) GetSchoolYear() string {
	if x != nil {
		return x.SchoolYear
	}
	return ""
}

func (x *GetStudentRewardsResponse_Nested) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

func (x *GetStudentRewardsResponse_Nested) GetRewardLevel() string {
	if x != nil {
		return x.RewardLevel
	}
	return ""
}

type GetStudentSelectResponse_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchoolYear  string `protobuf:"bytes,1,opt,name=schoolYear,proto3" json:"schoolYear,omitempty"`
	Semester    string `protobuf:"bytes,2,opt,name=semester,proto3" json:"semester,omitempty"`
	StaffID     string `protobuf:"bytes,3,opt,name=staffID,proto3" json:"staffID,omitempty"`
	StaffName   string `protobuf:"bytes,4,opt,name=staffName,proto3" json:"staffName,omitempty"`
	SelectCode  string `protobuf:"bytes,5,opt,name=selectCode,proto3" json:"selectCode,omitempty"`
	CourseName  string `protobuf:"bytes,6,opt,name=courseName,proto3" json:"courseName,omitempty"`
	CourseCode  string `protobuf:"bytes,7,opt,name=courseCode,proto3" json:"courseCode,omitempty"`
	TeacherID   string `protobuf:"bytes,8,opt,name=teacherID,proto3" json:"teacherID,omitempty"`
	TeacherName string `protobuf:"bytes,9,opt,name=teacherName,proto3" json:"teacherName,omitempty"`
	ClassTime   string `protobuf:"bytes,10,opt,name=classTime,proto3" json:"classTime,omitempty"`
	ClassRoom   string `protobuf:"bytes,11,opt,name=classRoom,proto3" json:"classRoom,omitempty"`
}

func (x *GetStudentSelectResponse_Nested) Reset() {
	*x = GetStudentSelectResponse_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentSelectResponse_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentSelectResponse_Nested) ProtoMessage() {}

func (x *GetStudentSelectResponse_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentSelectResponse_Nested.ProtoReflect.Descriptor instead.
func (*GetStudentSelectResponse_Nested) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{8, 0}
}

func (x *GetStudentSelectResponse_Nested) GetSchoolYear() string {
	if x != nil {
		return x.SchoolYear
	}
	return ""
}

func (x *GetStudentSelectResponse_Nested) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

func (x *GetStudentSelectResponse_Nested) GetStaffID() string {
	if x != nil {
		return x.StaffID
	}
	return ""
}

func (x *GetStudentSelectResponse_Nested) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *GetStudentSelectResponse_Nested) GetSelectCode() string {
	if x != nil {
		return x.SelectCode
	}
	return ""
}

func (x *GetStudentSelectResponse_Nested) GetCourseName() string {
	if x != nil {
		return x.CourseName
	}
	return ""
}

func (x *GetStudentSelectResponse_Nested) GetCourseCode() string {
	if x != nil {
		return x.CourseCode
	}
	return ""
}

func (x *GetStudentSelectResponse_Nested) GetTeacherID() string {
	if x != nil {
		return x.TeacherID
	}
	return ""
}

func (x *GetStudentSelectResponse_Nested) GetTeacherName() string {
	if x != nil {
		return x.TeacherName
	}
	return ""
}

func (x *GetStudentSelectResponse_Nested) GetClassTime() string {
	if x != nil {
		return x.ClassTime
	}
	return ""
}

func (x *GetStudentSelectResponse_Nested) GetClassRoom() string {
	if x != nil {
		return x.ClassRoom
	}
	return ""
}

type GetStudentGradeResponse_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchoolYear      string `protobuf:"bytes,1,opt,name=schoolYear,proto3" json:"schoolYear,omitempty"`
	Semester        string `protobuf:"bytes,2,opt,name=semester,proto3" json:"semester,omitempty"`
	SelectCode      string `protobuf:"bytes,3,opt,name=selectCode,proto3" json:"selectCode,omitempty"`
	Score           string `protobuf:"bytes,4,opt,name=score,proto3" json:"score,omitempty"`
	ScoreDaily      string `protobuf:"bytes,5,opt,name=scoreDaily,proto3" json:"scoreDaily,omitempty"`
	ScoreMidTerm    string `protobuf:"bytes,6,opt,name=scoreMidTerm,proto3" json:"scoreMidTerm,omitempty"`
	ScoreFinal      string `protobuf:"bytes,7,opt,name=scoreFinal,proto3" json:"scoreFinal,omitempty"`
	ScoreSubstitute string `protobuf:"bytes,8,opt,name=scoreSubstitute,proto3" json:"scoreSubstitute,omitempty"`
	ScorePractice   string `protobuf:"bytes,9,opt,name=scorePractice,proto3" json:"scorePractice,omitempty"`
	CourseCode      string `protobuf:"bytes,10,opt,name=courseCode,proto3" json:"courseCode,omitempty"`
	Course          string `protobuf:"bytes,11,opt,name=course,proto3" json:"course,omitempty"`
	StaffId         string `protobuf:"bytes,12,opt,name=staffId,proto3" json:"staffId,omitempty"`
	StaffName       string `protobuf:"bytes,13,opt,name=staffName,proto3" json:"staffName,omitempty"`
	Credit          string `protobuf:"bytes,14,opt,name=credit,proto3" json:"credit,omitempty"`
	GPA             string `protobuf:"bytes,15,opt,name=GPA,proto3" json:"GPA,omitempty"`
}

func (x *GetStudentGradeResponse_Nested) Reset() {
	*x = GetStudentGradeResponse_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_staff_v1_student_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentGradeResponse_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentGradeResponse_Nested) ProtoMessage() {}

func (x *GetStudentGradeResponse_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_staff_v1_student_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentGradeResponse_Nested.ProtoReflect.Descriptor instead.
func (*GetStudentGradeResponse_Nested) Descriptor() ([]byte, []int) {
	return file_campusapis_staff_v1_student_proto_rawDescGZIP(), []int{9, 0}
}

func (x *GetStudentGradeResponse_Nested) GetSchoolYear() string {
	if x != nil {
		return x.SchoolYear
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetSelectCode() string {
	if x != nil {
		return x.SelectCode
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetScore() string {
	if x != nil {
		return x.Score
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetScoreDaily() string {
	if x != nil {
		return x.ScoreDaily
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetScoreMidTerm() string {
	if x != nil {
		return x.ScoreMidTerm
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetScoreFinal() string {
	if x != nil {
		return x.ScoreFinal
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetScoreSubstitute() string {
	if x != nil {
		return x.ScoreSubstitute
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetScorePractice() string {
	if x != nil {
		return x.ScorePractice
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetCourseCode() string {
	if x != nil {
		return x.CourseCode
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetCourse() string {
	if x != nil {
		return x.Course
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetCredit() string {
	if x != nil {
		return x.Credit
	}
	return ""
}

func (x *GetStudentGradeResponse_Nested) GetGPA() string {
	if x != nil {
		return x.GPA
	}
	return ""
}

var File_campusapis_staff_v1_student_proto protoreflect.FileDescriptor

var file_campusapis_staff_v1_student_proto_rawDesc = []byte{
	0x0a, 0x21, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x13, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x62, 0x61, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x66, 0x66, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2f, 0x73, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x43, 0x0a, 0x0f, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x59, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x4e, 0x74, 0x68, 0x22, 0x96, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x6e, 0x69, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x6e, 0x69, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x6a,
	0x6f, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x6a, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0xa8, 0x02, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x4e, 0x65, 0x65, 0x64, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x6e,
	0x65, 0x65, 0x64, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12,
	0x4d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e,
	0x65, 0x65, 0x64, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x4c,
	0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x65, 0x64,
	0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x6e, 0x65, 0x65, 0x64, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x22, 0x66, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x44, 0x6f, 0x72, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x66, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x22, 0x6b, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64,
	0x61, 0x79, 0x73, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x61, 0x79, 0x22, 0x6e, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x73,
	0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x09, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x73, 0x22, 0xa9, 0x02, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x1a, 0xbe, 0x01, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x59, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68,
	0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xd3, 0x03, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x61, 0x6d,
	0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x52, 0x0e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x73,
	0x1a, 0xd8, 0x02, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x22, 0xaf, 0x04, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x1a, 0xc8, 0x03, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x64, 0x54, 0x65, 0x72, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x64, 0x54,
	0x65, 0x72, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x75, 0x62, 0x73,
	0x74, 0x69, 0x74, 0x75, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x53, 0x75, 0x62, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x47,
	0x50, 0x41, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x47, 0x50, 0x41, 0x22, 0xc2, 0x01,
	0x0a, 0x1c, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x79, 0x4f,
	0x66, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61,
	0x79, 0x4f, 0x66, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x79, 0x4f,
	0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61,
	0x79, 0x4f, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x22, 0x4d, 0x0a, 0x1d, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x47, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x90, 0x04, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x79, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x31, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65,
	0x31, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x31, 0x45,
	0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x31, 0x45,
	0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x32, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x32, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x32, 0x45, 0x6e, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x32, 0x45, 0x6e, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e,
	0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74,
	0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e,
	0x69, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x6e, 0x69, 0x74,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x75, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x32, 0xa1, 0x0c, 0x0a, 0x0e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x5a, 0x0f, 0x12, 0x0d, 0x2f, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x92, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e,
	0x65, 0x65, 0x64, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x30, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x4e, 0x65, 0x65, 0x64, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x5a, 0x10, 0x12, 0x0e, 0x2f, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x6e, 0x65, 0x65, 0x64, 0x79, 0x12, 0x17, 0x2f, 0x73,
	0x74, 0x61, 0x66, 0x66, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f,
	0x6e, 0x65, 0x65, 0x64, 0x79, 0x12, 0x8e, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x44, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2f, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x44, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x5a, 0x0f, 0x12,
	0x0d, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x64, 0x6f, 0x72, 0x6d, 0x12, 0x16,
	0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x2f, 0x64, 0x6f, 0x72, 0x6d, 0x12, 0x9a, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2f, 0x2e, 0x63, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64,
	0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x31, 0x5a, 0x13, 0x12, 0x11, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x1a, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x79, 0x12, 0xb9, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x73, 0x49, 0x6e, 0x12, 0x31, 0x2e,
	0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x73, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x32, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x73, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x5a, 0x14, 0x12, 0x12,
	0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x79, 0x73, 0x12, 0x1b, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x73, 0x12,
	0x9e, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x24, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2d, 0x5a, 0x11, 0x12, 0x0f, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x18, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x9c, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x24, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2d, 0x5a, 0x11, 0x12, 0x0f, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x18, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12,
	0x98, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x72,
	0x61, 0x64, 0x65, 0x12, 0x24, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x5a,
	0x10, 0x12, 0x0e, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x12, 0x17, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x2f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x15, 0x50,
	0x6f, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x31, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa8, 0x01,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x79,
	0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x35, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x79, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x37, 0x5a, 0x16, 0x12, 0x14, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x68, 0x6f,
	0x6c, 0x69, 0x64, 0x61, 0x79, 0x53, 0x74, 0x61, 0x79, 0x12, 0x1d, 0x2f, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x68, 0x6f, 0x6c,
	0x69, 0x64, 0x61, 0x79, 0x53, 0x74, 0x61, 0x79, 0x42, 0xd2, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x68, 0x64, 0x75, 0x68, 0x65, 0x6c, 0x70, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x6f, 0x70, 0x65,
	0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2f, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73,
	0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x74, 0x61, 0x66, 0x66, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x43, 0x53, 0x58, 0xaa, 0x02, 0x13, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x13,
	0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x5c, 0x53, 0x74, 0x61, 0x66, 0x66,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1f, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73,
	0x5c, 0x53, 0x74, 0x61, 0x66, 0x66, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x15, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70,
	0x69, 0x73, 0x3a, 0x3a, 0x53, 0x74, 0x61, 0x66, 0x66, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_campusapis_staff_v1_student_proto_rawDescOnce sync.Once
	file_campusapis_staff_v1_student_proto_rawDescData = file_campusapis_staff_v1_student_proto_rawDesc
)

func file_campusapis_staff_v1_student_proto_rawDescGZIP() []byte {
	file_campusapis_staff_v1_student_proto_rawDescOnce.Do(func() {
		file_campusapis_staff_v1_student_proto_rawDescData = protoimpl.X.CompressGZIP(file_campusapis_staff_v1_student_proto_rawDescData)
	})
	return file_campusapis_staff_v1_student_proto_rawDescData
}

var file_campusapis_staff_v1_student_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_campusapis_staff_v1_student_proto_goTypes = []interface{}{
	(*SemesterRequest)(nil),                    // 0: campusapis.staff.v1.SemesterRequest
	(*GetStudentInfoResponse)(nil),             // 1: campusapis.staff.v1.GetStudentInfoResponse
	(*GetStudentNeedyInfoResponse)(nil),        // 2: campusapis.staff.v1.GetStudentNeedyInfoResponse
	(*GetStudentDormInfoResponse)(nil),         // 3: campusapis.staff.v1.GetStudentDormInfoResponse
	(*GetStudentBirthdayResponse)(nil),         // 4: campusapis.staff.v1.GetStudentBirthdayResponse
	(*GetStudentBirthdaysInRequest)(nil),       // 5: campusapis.staff.v1.GetStudentBirthdaysInRequest
	(*GetStudentBirthdaysInResponse)(nil),      // 6: campusapis.staff.v1.GetStudentBirthdaysInResponse
	(*GetStudentRewardsResponse)(nil),          // 7: campusapis.staff.v1.GetStudentRewardsResponse
	(*GetStudentSelectResponse)(nil),           // 8: campusapis.staff.v1.GetStudentSelectResponse
	(*GetStudentGradeResponse)(nil),            // 9: campusapis.staff.v1.GetStudentGradeResponse
	(*PostStudentGateAccessRequest)(nil),       // 10: campusapis.staff.v1.PostStudentGateAccessRequest
	(*PostStudentGateAccessResponse)(nil),      // 11: campusapis.staff.v1.PostStudentGateAccessResponse
	(*GetStudentStaySchoolInfoResponse)(nil),   // 12: campusapis.staff.v1.GetStudentStaySchoolInfoResponse
	(*GetStudentNeedyInfoResponse_Nested)(nil), // 13: campusapis.staff.v1.GetStudentNeedyInfoResponse.Nested
	(*GetStudentRewardsResponse_Nested)(nil),   // 14: campusapis.staff.v1.GetStudentRewardsResponse.Nested
	(*GetStudentSelectResponse_Nested)(nil),    // 15: campusapis.staff.v1.GetStudentSelectResponse.Nested
	(*GetStudentGradeResponse_Nested)(nil),     // 16: campusapis.staff.v1.GetStudentGradeResponse.Nested
	(baseStaff.Type)(0),                        // 17: baseStaff.Type
	(*emptypb.Empty)(nil),                      // 18: google.protobuf.Empty
}
var file_campusapis_staff_v1_student_proto_depIdxs = []int32{
	13, // 0: campusapis.staff.v1.GetStudentNeedyInfoResponse.items:type_name -> campusapis.staff.v1.GetStudentNeedyInfoResponse.Nested
	17, // 1: campusapis.staff.v1.GetStudentBirthdaysInRequest.type:type_name -> baseStaff.Type
	4,  // 2: campusapis.staff.v1.GetStudentBirthdaysInResponse.birthdays:type_name -> campusapis.staff.v1.GetStudentBirthdayResponse
	14, // 3: campusapis.staff.v1.GetStudentRewardsResponse.items:type_name -> campusapis.staff.v1.GetStudentRewardsResponse.Nested
	15, // 4: campusapis.staff.v1.GetStudentSelectResponse.StudentSelects:type_name -> campusapis.staff.v1.GetStudentSelectResponse.Nested
	16, // 5: campusapis.staff.v1.GetStudentGradeResponse.items:type_name -> campusapis.staff.v1.GetStudentGradeResponse.Nested
	18, // 6: campusapis.staff.v1.StudentService.GetStudentInfo:input_type -> google.protobuf.Empty
	18, // 7: campusapis.staff.v1.StudentService.GetStudentNeedyInfo:input_type -> google.protobuf.Empty
	18, // 8: campusapis.staff.v1.StudentService.GetStudentDormInfo:input_type -> google.protobuf.Empty
	18, // 9: campusapis.staff.v1.StudentService.GetStudentBirthdayInfo:input_type -> google.protobuf.Empty
	5,  // 10: campusapis.staff.v1.StudentService.GetStudentBirthdaysIn:input_type -> campusapis.staff.v1.GetStudentBirthdaysInRequest
	0,  // 11: campusapis.staff.v1.StudentService.GetStudentRewards:input_type -> campusapis.staff.v1.SemesterRequest
	0,  // 12: campusapis.staff.v1.StudentService.GetStudentSelect:input_type -> campusapis.staff.v1.SemesterRequest
	0,  // 13: campusapis.staff.v1.StudentService.GetStudentGrade:input_type -> campusapis.staff.v1.SemesterRequest
	10, // 14: campusapis.staff.v1.StudentService.PostStudentGateAccess:input_type -> campusapis.staff.v1.PostStudentGateAccessRequest
	18, // 15: campusapis.staff.v1.StudentService.GetStudentStaySchoolInfo:input_type -> google.protobuf.Empty
	1,  // 16: campusapis.staff.v1.StudentService.GetStudentInfo:output_type -> campusapis.staff.v1.GetStudentInfoResponse
	2,  // 17: campusapis.staff.v1.StudentService.GetStudentNeedyInfo:output_type -> campusapis.staff.v1.GetStudentNeedyInfoResponse
	3,  // 18: campusapis.staff.v1.StudentService.GetStudentDormInfo:output_type -> campusapis.staff.v1.GetStudentDormInfoResponse
	4,  // 19: campusapis.staff.v1.StudentService.GetStudentBirthdayInfo:output_type -> campusapis.staff.v1.GetStudentBirthdayResponse
	6,  // 20: campusapis.staff.v1.StudentService.GetStudentBirthdaysIn:output_type -> campusapis.staff.v1.GetStudentBirthdaysInResponse
	7,  // 21: campusapis.staff.v1.StudentService.GetStudentRewards:output_type -> campusapis.staff.v1.GetStudentRewardsResponse
	8,  // 22: campusapis.staff.v1.StudentService.GetStudentSelect:output_type -> campusapis.staff.v1.GetStudentSelectResponse
	9,  // 23: campusapis.staff.v1.StudentService.GetStudentGrade:output_type -> campusapis.staff.v1.GetStudentGradeResponse
	11, // 24: campusapis.staff.v1.StudentService.PostStudentGateAccess:output_type -> campusapis.staff.v1.PostStudentGateAccessResponse
	12, // 25: campusapis.staff.v1.StudentService.GetStudentStaySchoolInfo:output_type -> campusapis.staff.v1.GetStudentStaySchoolInfoResponse
	16, // [16:26] is the sub-list for method output_type
	6,  // [6:16] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_campusapis_staff_v1_student_proto_init() }
func file_campusapis_staff_v1_student_proto_init() {
	if File_campusapis_staff_v1_student_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_campusapis_staff_v1_student_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SemesterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentNeedyInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentDormInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentBirthdayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentBirthdaysInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentBirthdaysInResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentRewardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentSelectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentGradeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostStudentGateAccessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostStudentGateAccessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentStaySchoolInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentNeedyInfoResponse_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentRewardsResponse_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentSelectResponse_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_staff_v1_student_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentGradeResponse_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_campusapis_staff_v1_student_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_campusapis_staff_v1_student_proto_goTypes,
		DependencyIndexes: file_campusapis_staff_v1_student_proto_depIdxs,
		MessageInfos:      file_campusapis_staff_v1_student_proto_msgTypes,
	}.Build()
	File_campusapis_staff_v1_student_proto = out.File
	file_campusapis_staff_v1_student_proto_rawDesc = nil
	file_campusapis_staff_v1_student_proto_goTypes = nil
	file_campusapis_staff_v1_student_proto_depIdxs = nil
}
