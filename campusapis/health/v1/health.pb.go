// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: campusapis/health/v1/health.proto

package healthv1

import (
	_ "github.com/hduhelp/api_open_sdk/baseStaff"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/httpbody"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCheckinRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 日期，格式：yyyy-MM-dd
	Date string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetCheckinRecordRequest) Reset() {
	*x = GetCheckinRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_health_v1_health_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCheckinRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckinRecordRequest) ProtoMessage() {}

func (x *GetCheckinRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_health_v1_health_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckinRecordRequest.ProtoReflect.Descriptor instead.
func (*GetCheckinRecordRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_health_v1_health_proto_rawDescGZIP(), []int{0}
}

func (x *GetCheckinRecordRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type GetCheckinRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CheckinRecord `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCheckinRecordResponse) Reset() {
	*x = GetCheckinRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_health_v1_health_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCheckinRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckinRecordResponse) ProtoMessage() {}

func (x *GetCheckinRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_health_v1_health_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckinRecordResponse.ProtoReflect.Descriptor instead.
func (*GetCheckinRecordResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_health_v1_health_proto_rawDescGZIP(), []int{1}
}

func (x *GetCheckinRecordResponse) GetData() *CheckinRecord {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetCheckinRecordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CheckinRecord `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetCheckinRecordsResponse) Reset() {
	*x = GetCheckinRecordsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_health_v1_health_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCheckinRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckinRecordsResponse) ProtoMessage() {}

func (x *GetCheckinRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_health_v1_health_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckinRecordsResponse.ProtoReflect.Descriptor instead.
func (*GetCheckinRecordsResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_health_v1_health_proto_rawDescGZIP(), []int{2}
}

func (x *GetCheckinRecordsResponse) GetItems() []*CheckinRecord {
	if x != nil {
		return x.Items
	}
	return nil
}

//健康打卡记录
type CheckinRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//姓名
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	//创建时间
	CreatedAt uint32 `protobuf:"varint,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//修改时间 可能为空
	Modified uint32 `protobuf:"varint,4,opt,name=modified,proto3" json:"modified,omitempty"`
	//修改者姓名
	Modifier string `protobuf:"bytes,5,opt,name=modifier,proto3" json:"modifier,omitempty"`
	//健康打卡内容JSON
	Content *structpb.Struct `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	//打卡时间
	ReportTime uint32 `protobuf:"varint,7,opt,name=reportTime,proto3" json:"reportTime,omitempty"`
	//打卡省级行政区划码
	Province string `protobuf:"bytes,8,opt,name=province,proto3" json:"province,omitempty"`
	//打卡市级行政区划码
	City string `protobuf:"bytes,9,opt,name=city,proto3" json:"city,omitempty"`
	//打卡区级行政区划码
	Country string `protobuf:"bytes,10,opt,name=country,proto3" json:"country,omitempty"`
	//学号
	StaffId string `protobuf:"bytes,11,opt,name=staffId,proto3" json:"staffId,omitempty"`
	//学生姓名
	StaffName string `protobuf:"bytes,12,opt,name=staffName,proto3" json:"staffName,omitempty"`
	//学生类型 1：研究生 2：本科生
	StaffType string `protobuf:"bytes,13,opt,name=staffType,proto3" json:"staffType,omitempty"`
	//学院名称
	Unit string `protobuf:"bytes,14,opt,name=unit,proto3" json:"unit,omitempty"`
	//记录索引ID
	SchoolId string `protobuf:"bytes,15,opt,name=schoolId,proto3" json:"schoolId,omitempty"`
}

func (x *CheckinRecord) Reset() {
	*x = CheckinRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_health_v1_health_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckinRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckinRecord) ProtoMessage() {}

func (x *CheckinRecord) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_health_v1_health_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckinRecord.ProtoReflect.Descriptor instead.
func (*CheckinRecord) Descriptor() ([]byte, []int) {
	return file_campusapis_health_v1_health_proto_rawDescGZIP(), []int{3}
}

func (x *CheckinRecord) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CheckinRecord) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *CheckinRecord) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CheckinRecord) GetModified() uint32 {
	if x != nil {
		return x.Modified
	}
	return 0
}

func (x *CheckinRecord) GetModifier() string {
	if x != nil {
		return x.Modifier
	}
	return ""
}

func (x *CheckinRecord) GetContent() *structpb.Struct {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *CheckinRecord) GetReportTime() uint32 {
	if x != nil {
		return x.ReportTime
	}
	return 0
}

func (x *CheckinRecord) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *CheckinRecord) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CheckinRecord) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *CheckinRecord) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *CheckinRecord) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *CheckinRecord) GetStaffType() string {
	if x != nil {
		return x.StaffType
	}
	return ""
}

func (x *CheckinRecord) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *CheckinRecord) GetSchoolId() string {
	if x != nil {
		return x.SchoolId
	}
	return ""
}

type PostCheckinRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//签名 放置在query中
	Sign    string                 `protobuf:"bytes,1,opt,name=sign,proto3" json:"sign,omitempty"`
	Content *PostCheckinRecordBody `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *PostCheckinRecordRequest) Reset() {
	*x = PostCheckinRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_health_v1_health_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCheckinRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCheckinRecordRequest) ProtoMessage() {}

func (x *PostCheckinRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_health_v1_health_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCheckinRecordRequest.ProtoReflect.Descriptor instead.
func (*PostCheckinRecordRequest) Descriptor() ([]byte, []int) {
	return file_campusapis_health_v1_health_proto_rawDescGZIP(), []int{4}
}

func (x *PostCheckinRecordRequest) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *PostCheckinRecordRequest) GetContent() *PostCheckinRecordBody {
	if x != nil {
		return x.Content
	}
	return nil
}

type PostCheckinRecordBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//学生姓名
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	//签名时间戳
	Timestamp uint32 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	//省级行政区划码
	Province string `protobuf:"bytes,3,opt,name=province,proto3" json:"province,omitempty"`
	//市级行政区划码
	City string `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	//县级行政区划码
	Country string `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
	//健康打卡内容JSON，处理为json字符串
	// 如 `{"ques1": "xxxx", "ques2": "xxx"}`
	AnswerJsonStr string `protobuf:"bytes,6,opt,name=answerJsonStr,proto3" json:"answerJsonStr,omitempty"`
}

func (x *PostCheckinRecordBody) Reset() {
	*x = PostCheckinRecordBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_health_v1_health_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCheckinRecordBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCheckinRecordBody) ProtoMessage() {}

func (x *PostCheckinRecordBody) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_health_v1_health_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCheckinRecordBody.ProtoReflect.Descriptor instead.
func (*PostCheckinRecordBody) Descriptor() ([]byte, []int) {
	return file_campusapis_health_v1_health_proto_rawDescGZIP(), []int{5}
}

func (x *PostCheckinRecordBody) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PostCheckinRecordBody) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PostCheckinRecordBody) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *PostCheckinRecordBody) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *PostCheckinRecordBody) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *PostCheckinRecordBody) GetAnswerJsonStr() string {
	if x != nil {
		return x.AnswerJsonStr
	}
	return ""
}

type PostCheckinRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data    string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PostCheckinRecordResponse) Reset() {
	*x = PostCheckinRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_health_v1_health_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCheckinRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCheckinRecordResponse) ProtoMessage() {}

func (x *PostCheckinRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_health_v1_health_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCheckinRecordResponse.ProtoReflect.Descriptor instead.
func (*PostCheckinRecordResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_health_v1_health_proto_rawDescGZIP(), []int{6}
}

func (x *PostCheckinRecordResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PostCheckinRecordResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *PostCheckinRecordResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetCheckinPhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone   string `protobuf:"bytes,1,opt,name=Phone,proto3" json:"Phone,omitempty"`
	StaffID string `protobuf:"bytes,2,opt,name=StaffID,proto3" json:"StaffID,omitempty"`
}

func (x *GetCheckinPhoneResponse) Reset() {
	*x = GetCheckinPhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_health_v1_health_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCheckinPhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckinPhoneResponse) ProtoMessage() {}

func (x *GetCheckinPhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_health_v1_health_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckinPhoneResponse.ProtoReflect.Descriptor instead.
func (*GetCheckinPhoneResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_health_v1_health_proto_rawDescGZIP(), []int{7}
}

func (x *GetCheckinPhoneResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetCheckinPhoneResponse) GetStaffID() string {
	if x != nil {
		return x.StaffID
	}
	return ""
}

//健康码
type HealthCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeId     string                 `protobuf:"bytes,1,opt,name=codeId,proto3" json:"codeId,omitempty"`
	ApplyTime  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=applyTime,proto3" json:"applyTime,omitempty"`
	GrantTime  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=grantTime,proto3" json:"grantTime,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Name       string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Region     string                 `protobuf:"bytes,6,opt,name=region,proto3" json:"region,omitempty"`
	Status     string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	Comment    string                 `protobuf:"bytes,8,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *HealthCode) Reset() {
	*x = HealthCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_health_v1_health_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCode) ProtoMessage() {}

func (x *HealthCode) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_health_v1_health_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCode.ProtoReflect.Descriptor instead.
func (*HealthCode) Descriptor() ([]byte, []int) {
	return file_campusapis_health_v1_health_proto_rawDescGZIP(), []int{8}
}

func (x *HealthCode) GetCodeId() string {
	if x != nil {
		return x.CodeId
	}
	return ""
}

func (x *HealthCode) GetApplyTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ApplyTime
	}
	return nil
}

func (x *HealthCode) GetGrantTime() *timestamppb.Timestamp {
	if x != nil {
		return x.GrantTime
	}
	return nil
}

func (x *HealthCode) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *HealthCode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HealthCode) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *HealthCode) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCode) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

//健康码老
type GetHealthCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffId   string `protobuf:"bytes,1,opt,name=staffId,proto3" json:"staffId,omitempty"`
	StaffName string `protobuf:"bytes,2,opt,name=staffName,proto3" json:"staffName,omitempty"`
	PhoneNum  string `protobuf:"bytes,3,opt,name=phoneNum,proto3" json:"phoneNum,omitempty"`
	//健康码
	CodeStatus string `protobuf:"bytes,4,opt,name=codeStatus,proto3" json:"codeStatus,omitempty"`
	//健康码地区
	Location string `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	//健康码红码黄码原因
	Reason string `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
	//第一次申请时间
	FirstApplyTime string `protobuf:"bytes,7,opt,name=firstApplyTime,proto3" json:"firstApplyTime,omitempty"`
	//第一次下发时间
	FirstGrantTime string `protobuf:"bytes,8,opt,name=firstGrantTime,proto3" json:"firstGrantTime,omitempty"`
	//最后一次更新时间
	LastUpdateTime string `protobuf:"bytes,9,opt,name=lastUpdateTime,proto3" json:"lastUpdateTime,omitempty"`
	//服务器更新时间（服务器获取到的时间）
	//通常是每日更新一次
	ServerUpdateTime string `protobuf:"bytes,10,opt,name=serverUpdateTime,proto3" json:"serverUpdateTime,omitempty"`
}

func (x *GetHealthCodeResponse) Reset() {
	*x = GetHealthCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campusapis_health_v1_health_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHealthCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHealthCodeResponse) ProtoMessage() {}

func (x *GetHealthCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campusapis_health_v1_health_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHealthCodeResponse.ProtoReflect.Descriptor instead.
func (*GetHealthCodeResponse) Descriptor() ([]byte, []int) {
	return file_campusapis_health_v1_health_proto_rawDescGZIP(), []int{9}
}

func (x *GetHealthCodeResponse) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *GetHealthCodeResponse) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *GetHealthCodeResponse) GetPhoneNum() string {
	if x != nil {
		return x.PhoneNum
	}
	return ""
}

func (x *GetHealthCodeResponse) GetCodeStatus() string {
	if x != nil {
		return x.CodeStatus
	}
	return ""
}

func (x *GetHealthCodeResponse) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *GetHealthCodeResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *GetHealthCodeResponse) GetFirstApplyTime() string {
	if x != nil {
		return x.FirstApplyTime
	}
	return ""
}

func (x *GetHealthCodeResponse) GetFirstGrantTime() string {
	if x != nil {
		return x.FirstGrantTime
	}
	return ""
}

func (x *GetHealthCodeResponse) GetLastUpdateTime() string {
	if x != nil {
		return x.LastUpdateTime
	}
	return ""
}

func (x *GetHealthCodeResponse) GetServerUpdateTime() string {
	if x != nil {
		return x.ServerUpdateTime
	}
	return ""
}

var File_campusapis_health_v1_health_proto protoreflect.FileDescriptor

var file_campusapis_health_v1_health_proto_rawDesc = []byte{
	0x0a, 0x21, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x14, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x62, 0x61, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x66, 0x66, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x62,
	0x6f, 0x64, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2d, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x53, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x56, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xb2, 0x03, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e,
	0x69, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0x75, 0x0a, 0x18, 0x50, 0x6f,
	0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x45, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0xb9, 0x01, 0x0a, 0x15, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x22, 0x5d, 0x0a,
	0x19, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x49, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x74, 0x61, 0x66, 0x66, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x53, 0x74, 0x61, 0x66, 0x66, 0x49, 0x44, 0x22, 0xb2, 0x02, 0x0a, 0x0a, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x38,
	0x0a, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x61,
	0x70, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xe3, 0x02, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x26,
	0x0a, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x32, 0xba, 0x06, 0x0a, 0x0d, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0xcb, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x2d, 0x2e, 0x63, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75,
	0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x52,
	0x12, 0x12, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x69, 0x6e, 0x5a, 0x17, 0x12, 0x0f, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x62, 0x04, 0x64, 0x61, 0x74, 0x61, 0x5a, 0x1d, 0x12,
	0x15, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e,
	0x2f, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x62, 0x04, 0x64, 0x61, 0x74, 0x61, 0x62, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x9b, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x2f, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x12, 0x13, 0x2f, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x73, 0x5a, 0x19,
	0x12, 0x10, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69,
	0x6e, 0x73, 0x62, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x62, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0xb7, 0x01, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x2e, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x22,
	0x13, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x73, 0x3a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5a, 0x1b, 0x22,
	0x10, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e,
	0x73, 0x3a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x83, 0x01, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2d, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x10, 0x2f,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5a,
	0x0f, 0x12, 0x0d, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2f, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x7d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x63, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x0f,
	0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x5a,
	0x0e, 0x12, 0x0c, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x42,
	0xd8, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3d, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x64, 0x75, 0x68, 0x65, 0x6c, 0x70, 0x2f,
	0x61, 0x70, 0x69, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2f, 0x63, 0x61, 0x6d,
	0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2f, 0x76,
	0x31, 0x3b, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x48, 0x58,
	0xaa, 0x02, 0x14, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x14, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x61, 0x70, 0x69, 0x73, 0x5c, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5c, 0x56, 0x31, 0xe2, 0x02,
	0x20, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x5c, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x16, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x61, 0x70, 0x69, 0x73, 0x3a, 0x3a,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_campusapis_health_v1_health_proto_rawDescOnce sync.Once
	file_campusapis_health_v1_health_proto_rawDescData = file_campusapis_health_v1_health_proto_rawDesc
)

func file_campusapis_health_v1_health_proto_rawDescGZIP() []byte {
	file_campusapis_health_v1_health_proto_rawDescOnce.Do(func() {
		file_campusapis_health_v1_health_proto_rawDescData = protoimpl.X.CompressGZIP(file_campusapis_health_v1_health_proto_rawDescData)
	})
	return file_campusapis_health_v1_health_proto_rawDescData
}

var file_campusapis_health_v1_health_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_campusapis_health_v1_health_proto_goTypes = []interface{}{
	(*GetCheckinRecordRequest)(nil),   // 0: campusapis.health.v1.GetCheckinRecordRequest
	(*GetCheckinRecordResponse)(nil),  // 1: campusapis.health.v1.GetCheckinRecordResponse
	(*GetCheckinRecordsResponse)(nil), // 2: campusapis.health.v1.GetCheckinRecordsResponse
	(*CheckinRecord)(nil),             // 3: campusapis.health.v1.CheckinRecord
	(*PostCheckinRecordRequest)(nil),  // 4: campusapis.health.v1.PostCheckinRecordRequest
	(*PostCheckinRecordBody)(nil),     // 5: campusapis.health.v1.PostCheckinRecordBody
	(*PostCheckinRecordResponse)(nil), // 6: campusapis.health.v1.PostCheckinRecordResponse
	(*GetCheckinPhoneResponse)(nil),   // 7: campusapis.health.v1.GetCheckinPhoneResponse
	(*HealthCode)(nil),                // 8: campusapis.health.v1.HealthCode
	(*GetHealthCodeResponse)(nil),     // 9: campusapis.health.v1.GetHealthCodeResponse
	(*structpb.Struct)(nil),           // 10: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil),     // 11: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),             // 12: google.protobuf.Empty
}
var file_campusapis_health_v1_health_proto_depIdxs = []int32{
	3,  // 0: campusapis.health.v1.GetCheckinRecordResponse.data:type_name -> campusapis.health.v1.CheckinRecord
	3,  // 1: campusapis.health.v1.GetCheckinRecordsResponse.items:type_name -> campusapis.health.v1.CheckinRecord
	10, // 2: campusapis.health.v1.CheckinRecord.content:type_name -> google.protobuf.Struct
	5,  // 3: campusapis.health.v1.PostCheckinRecordRequest.content:type_name -> campusapis.health.v1.PostCheckinRecordBody
	11, // 4: campusapis.health.v1.HealthCode.applyTime:type_name -> google.protobuf.Timestamp
	11, // 5: campusapis.health.v1.HealthCode.grantTime:type_name -> google.protobuf.Timestamp
	11, // 6: campusapis.health.v1.HealthCode.updateTime:type_name -> google.protobuf.Timestamp
	0,  // 7: campusapis.health.v1.HealthService.GetCheckinRecord:input_type -> campusapis.health.v1.GetCheckinRecordRequest
	12, // 8: campusapis.health.v1.HealthService.GetCheckinRecords:input_type -> google.protobuf.Empty
	4,  // 9: campusapis.health.v1.HealthService.PostCheckinRecord:input_type -> campusapis.health.v1.PostCheckinRecordRequest
	12, // 10: campusapis.health.v1.HealthService.GetCheckinPhone:input_type -> google.protobuf.Empty
	12, // 11: campusapis.health.v1.HealthService.GetHealthCode:input_type -> google.protobuf.Empty
	1,  // 12: campusapis.health.v1.HealthService.GetCheckinRecord:output_type -> campusapis.health.v1.GetCheckinRecordResponse
	2,  // 13: campusapis.health.v1.HealthService.GetCheckinRecords:output_type -> campusapis.health.v1.GetCheckinRecordsResponse
	6,  // 14: campusapis.health.v1.HealthService.PostCheckinRecord:output_type -> campusapis.health.v1.PostCheckinRecordResponse
	7,  // 15: campusapis.health.v1.HealthService.GetCheckinPhone:output_type -> campusapis.health.v1.GetCheckinPhoneResponse
	9,  // 16: campusapis.health.v1.HealthService.GetHealthCode:output_type -> campusapis.health.v1.GetHealthCodeResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_campusapis_health_v1_health_proto_init() }
func file_campusapis_health_v1_health_proto_init() {
	if File_campusapis_health_v1_health_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_campusapis_health_v1_health_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCheckinRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_health_v1_health_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCheckinRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_health_v1_health_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCheckinRecordsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_health_v1_health_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckinRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_health_v1_health_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCheckinRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_health_v1_health_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCheckinRecordBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_health_v1_health_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCheckinRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_health_v1_health_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCheckinPhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_health_v1_health_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campusapis_health_v1_health_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHealthCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_campusapis_health_v1_health_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_campusapis_health_v1_health_proto_goTypes,
		DependencyIndexes: file_campusapis_health_v1_health_proto_depIdxs,
		MessageInfos:      file_campusapis_health_v1_health_proto_msgTypes,
	}.Build()
	File_campusapis_health_v1_health_proto = out.File
	file_campusapis_health_v1_health_proto_rawDesc = nil
	file_campusapis_health_v1_health_proto_goTypes = nil
	file_campusapis_health_v1_health_proto_depIdxs = nil
}
