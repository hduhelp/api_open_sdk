// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: campusapis/health/v1/health.proto

package healthv1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	HealthService_GetCheckinRecord_FullMethodName         = "/campusapis.health.v1.HealthService/GetCheckinRecord"
	HealthService_GetCheckinRecords_FullMethodName        = "/campusapis.health.v1.HealthService/GetCheckinRecords"
	HealthService_PostCheckinRecord_FullMethodName        = "/campusapis.health.v1.HealthService/PostCheckinRecord"
	HealthService_GetCheckinPhone_FullMethodName          = "/campusapis.health.v1.HealthService/GetCheckinPhone"
	HealthService_PostCheckinPhone_FullMethodName         = "/campusapis.health.v1.HealthService/PostCheckinPhone"
	HealthService_GetHealthCode_FullMethodName            = "/campusapis.health.v1.HealthService/GetHealthCode"
	HealthService_GetVaccineRecords_FullMethodName        = "/campusapis.health.v1.HealthService/GetVaccineRecords"
	HealthService_GetNucleicAcidTests_FullMethodName      = "/campusapis.health.v1.HealthService/GetNucleicAcidTests"
	HealthService_GetNucleicAcidTestLatest_FullMethodName = "/campusapis.health.v1.HealthService/GetNucleicAcidTestLatest"
)

// HealthServiceClient is the client API for HealthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// 健康打卡相关服务
type HealthServiceClient interface {
	// 获取指定日期健康打卡记录
	GetCheckinRecord(ctx context.Context, in *GetCheckinRecordRequest, opts ...grpc.CallOption) (*GetCheckinRecordResponse, error)
	// 获取历史健康打卡记录
	GetCheckinRecords(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetCheckinRecordsResponse, error)
	// 提交今日健康打卡
	PostCheckinRecord(ctx context.Context, in *PostCheckinRecordRequest, opts ...grpc.CallOption) (*PostCheckinRecordResponse, error)
	// 获取健康打卡平台的手机号
	GetCheckinPhone(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetCheckinPhoneResponse, error)
	// 更新健康打卡平台的手机号
	PostCheckinPhone(ctx context.Context, in *PostCheckinPhoneRequest, opts ...grpc.CallOption) (*PostCheckinPhoneResponse, error)
	// 获取当前健康码
	GetHealthCode(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetHealthCodeResponse, error)
	// 获取疫苗接种记录
	GetVaccineRecords(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetVaccineRecordsResponse, error)
	// 获取历史核酸检测记录
	GetNucleicAcidTests(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetNucleicAcidTestsResponse, error)
	// 获取最新核酸检测记录
	GetNucleicAcidTestLatest(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetNucleicAcidTestLatestResponse, error)
}

type healthServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHealthServiceClient(cc grpc.ClientConnInterface) HealthServiceClient {
	return &healthServiceClient{cc}
}

func (c *healthServiceClient) GetCheckinRecord(ctx context.Context, in *GetCheckinRecordRequest, opts ...grpc.CallOption) (*GetCheckinRecordResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetCheckinRecordResponse)
	err := c.cc.Invoke(ctx, HealthService_GetCheckinRecord_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *healthServiceClient) GetCheckinRecords(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetCheckinRecordsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetCheckinRecordsResponse)
	err := c.cc.Invoke(ctx, HealthService_GetCheckinRecords_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *healthServiceClient) PostCheckinRecord(ctx context.Context, in *PostCheckinRecordRequest, opts ...grpc.CallOption) (*PostCheckinRecordResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PostCheckinRecordResponse)
	err := c.cc.Invoke(ctx, HealthService_PostCheckinRecord_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *healthServiceClient) GetCheckinPhone(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetCheckinPhoneResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetCheckinPhoneResponse)
	err := c.cc.Invoke(ctx, HealthService_GetCheckinPhone_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *healthServiceClient) PostCheckinPhone(ctx context.Context, in *PostCheckinPhoneRequest, opts ...grpc.CallOption) (*PostCheckinPhoneResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PostCheckinPhoneResponse)
	err := c.cc.Invoke(ctx, HealthService_PostCheckinPhone_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *healthServiceClient) GetHealthCode(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetHealthCodeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetHealthCodeResponse)
	err := c.cc.Invoke(ctx, HealthService_GetHealthCode_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *healthServiceClient) GetVaccineRecords(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetVaccineRecordsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetVaccineRecordsResponse)
	err := c.cc.Invoke(ctx, HealthService_GetVaccineRecords_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *healthServiceClient) GetNucleicAcidTests(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetNucleicAcidTestsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetNucleicAcidTestsResponse)
	err := c.cc.Invoke(ctx, HealthService_GetNucleicAcidTests_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *healthServiceClient) GetNucleicAcidTestLatest(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetNucleicAcidTestLatestResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetNucleicAcidTestLatestResponse)
	err := c.cc.Invoke(ctx, HealthService_GetNucleicAcidTestLatest_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HealthServiceServer is the server API for HealthService service.
// All implementations must embed UnimplementedHealthServiceServer
// for forward compatibility.
//
// 健康打卡相关服务
type HealthServiceServer interface {
	// 获取指定日期健康打卡记录
	GetCheckinRecord(context.Context, *GetCheckinRecordRequest) (*GetCheckinRecordResponse, error)
	// 获取历史健康打卡记录
	GetCheckinRecords(context.Context, *emptypb.Empty) (*GetCheckinRecordsResponse, error)
	// 提交今日健康打卡
	PostCheckinRecord(context.Context, *PostCheckinRecordRequest) (*PostCheckinRecordResponse, error)
	// 获取健康打卡平台的手机号
	GetCheckinPhone(context.Context, *emptypb.Empty) (*GetCheckinPhoneResponse, error)
	// 更新健康打卡平台的手机号
	PostCheckinPhone(context.Context, *PostCheckinPhoneRequest) (*PostCheckinPhoneResponse, error)
	// 获取当前健康码
	GetHealthCode(context.Context, *emptypb.Empty) (*GetHealthCodeResponse, error)
	// 获取疫苗接种记录
	GetVaccineRecords(context.Context, *emptypb.Empty) (*GetVaccineRecordsResponse, error)
	// 获取历史核酸检测记录
	GetNucleicAcidTests(context.Context, *emptypb.Empty) (*GetNucleicAcidTestsResponse, error)
	// 获取最新核酸检测记录
	GetNucleicAcidTestLatest(context.Context, *emptypb.Empty) (*GetNucleicAcidTestLatestResponse, error)
	mustEmbedUnimplementedHealthServiceServer()
}

// UnimplementedHealthServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedHealthServiceServer struct{}

func (UnimplementedHealthServiceServer) GetCheckinRecord(context.Context, *GetCheckinRecordRequest) (*GetCheckinRecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCheckinRecord not implemented")
}
func (UnimplementedHealthServiceServer) GetCheckinRecords(context.Context, *emptypb.Empty) (*GetCheckinRecordsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCheckinRecords not implemented")
}
func (UnimplementedHealthServiceServer) PostCheckinRecord(context.Context, *PostCheckinRecordRequest) (*PostCheckinRecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostCheckinRecord not implemented")
}
func (UnimplementedHealthServiceServer) GetCheckinPhone(context.Context, *emptypb.Empty) (*GetCheckinPhoneResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCheckinPhone not implemented")
}
func (UnimplementedHealthServiceServer) PostCheckinPhone(context.Context, *PostCheckinPhoneRequest) (*PostCheckinPhoneResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostCheckinPhone not implemented")
}
func (UnimplementedHealthServiceServer) GetHealthCode(context.Context, *emptypb.Empty) (*GetHealthCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHealthCode not implemented")
}
func (UnimplementedHealthServiceServer) GetVaccineRecords(context.Context, *emptypb.Empty) (*GetVaccineRecordsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVaccineRecords not implemented")
}
func (UnimplementedHealthServiceServer) GetNucleicAcidTests(context.Context, *emptypb.Empty) (*GetNucleicAcidTestsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNucleicAcidTests not implemented")
}
func (UnimplementedHealthServiceServer) GetNucleicAcidTestLatest(context.Context, *emptypb.Empty) (*GetNucleicAcidTestLatestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNucleicAcidTestLatest not implemented")
}
func (UnimplementedHealthServiceServer) mustEmbedUnimplementedHealthServiceServer() {}
func (UnimplementedHealthServiceServer) testEmbeddedByValue()                       {}

// UnsafeHealthServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to HealthServiceServer will
// result in compilation errors.
type UnsafeHealthServiceServer interface {
	mustEmbedUnimplementedHealthServiceServer()
}

func RegisterHealthServiceServer(s grpc.ServiceRegistrar, srv HealthServiceServer) {
	// If the following call pancis, it indicates UnimplementedHealthServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&HealthService_ServiceDesc, srv)
}

func _HealthService_GetCheckinRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCheckinRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthServiceServer).GetCheckinRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HealthService_GetCheckinRecord_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthServiceServer).GetCheckinRecord(ctx, req.(*GetCheckinRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HealthService_GetCheckinRecords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthServiceServer).GetCheckinRecords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HealthService_GetCheckinRecords_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthServiceServer).GetCheckinRecords(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _HealthService_PostCheckinRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostCheckinRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthServiceServer).PostCheckinRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HealthService_PostCheckinRecord_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthServiceServer).PostCheckinRecord(ctx, req.(*PostCheckinRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HealthService_GetCheckinPhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthServiceServer).GetCheckinPhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HealthService_GetCheckinPhone_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthServiceServer).GetCheckinPhone(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _HealthService_PostCheckinPhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostCheckinPhoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthServiceServer).PostCheckinPhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HealthService_PostCheckinPhone_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthServiceServer).PostCheckinPhone(ctx, req.(*PostCheckinPhoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HealthService_GetHealthCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthServiceServer).GetHealthCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HealthService_GetHealthCode_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthServiceServer).GetHealthCode(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _HealthService_GetVaccineRecords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthServiceServer).GetVaccineRecords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HealthService_GetVaccineRecords_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthServiceServer).GetVaccineRecords(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _HealthService_GetNucleicAcidTests_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthServiceServer).GetNucleicAcidTests(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HealthService_GetNucleicAcidTests_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthServiceServer).GetNucleicAcidTests(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _HealthService_GetNucleicAcidTestLatest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthServiceServer).GetNucleicAcidTestLatest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HealthService_GetNucleicAcidTestLatest_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthServiceServer).GetNucleicAcidTestLatest(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

// HealthService_ServiceDesc is the grpc.ServiceDesc for HealthService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var HealthService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "campusapis.health.v1.HealthService",
	HandlerType: (*HealthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCheckinRecord",
			Handler:    _HealthService_GetCheckinRecord_Handler,
		},
		{
			MethodName: "GetCheckinRecords",
			Handler:    _HealthService_GetCheckinRecords_Handler,
		},
		{
			MethodName: "PostCheckinRecord",
			Handler:    _HealthService_PostCheckinRecord_Handler,
		},
		{
			MethodName: "GetCheckinPhone",
			Handler:    _HealthService_GetCheckinPhone_Handler,
		},
		{
			MethodName: "PostCheckinPhone",
			Handler:    _HealthService_PostCheckinPhone_Handler,
		},
		{
			MethodName: "GetHealthCode",
			Handler:    _HealthService_GetHealthCode_Handler,
		},
		{
			MethodName: "GetVaccineRecords",
			Handler:    _HealthService_GetVaccineRecords_Handler,
		},
		{
			MethodName: "GetNucleicAcidTests",
			Handler:    _HealthService_GetNucleicAcidTests_Handler,
		},
		{
			MethodName: "GetNucleicAcidTestLatest",
			Handler:    _HealthService_GetNucleicAcidTestLatest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "campusapis/health/v1/health.proto",
}
