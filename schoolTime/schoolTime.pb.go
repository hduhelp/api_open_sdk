// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/hduhelp/api_open_sdk/schoolTime/schoolTime.proto

package schoolTime

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SchoolYear struct {
	Year                 int32    `protobuf:"varint,1,opt,name=Year,proto3" json:"Year,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SchoolYear) Reset()         { *m = SchoolYear{} }
func (m *SchoolYear) String() string { return proto.CompactTextString(m) }
func (*SchoolYear) ProtoMessage()    {}
func (*SchoolYear) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5556e69801f9583, []int{0}
}

func (m *SchoolYear) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SchoolYear.Unmarshal(m, b)
}
func (m *SchoolYear) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SchoolYear.Marshal(b, m, deterministic)
}
func (m *SchoolYear) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SchoolYear.Merge(m, src)
}
func (m *SchoolYear) XXX_Size() int {
	return xxx_messageInfo_SchoolYear.Size(m)
}
func (m *SchoolYear) XXX_DiscardUnknown() {
	xxx_messageInfo_SchoolYear.DiscardUnknown(m)
}

var xxx_messageInfo_SchoolYear proto.InternalMessageInfo

func (m *SchoolYear) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

type Semester struct {
	Num                  int32    `protobuf:"varint,1,opt,name=Num,proto3" json:"Num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Semester) Reset()         { *m = Semester{} }
func (m *Semester) String() string { return proto.CompactTextString(m) }
func (*Semester) ProtoMessage()    {}
func (*Semester) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5556e69801f9583, []int{1}
}

func (m *Semester) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Semester.Unmarshal(m, b)
}
func (m *Semester) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Semester.Marshal(b, m, deterministic)
}
func (m *Semester) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Semester.Merge(m, src)
}
func (m *Semester) XXX_Size() int {
	return xxx_messageInfo_Semester.Size(m)
}
func (m *Semester) XXX_DiscardUnknown() {
	xxx_messageInfo_Semester.DiscardUnknown(m)
}

var xxx_messageInfo_Semester proto.InternalMessageInfo

func (m *Semester) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func init() {
	proto.RegisterType((*SchoolYear)(nil), "schoolTime.SchoolYear")
	proto.RegisterType((*Semester)(nil), "schoolTime.Semester")
}

func init() {
	proto.RegisterFile("github.com/hduhelp/api_open_sdk/schoolTime/schoolTime.proto", fileDescriptor_f5556e69801f9583)
}

var fileDescriptor_f5556e69801f9583 = []byte{
	// 133 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xb2, 0x4e, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0xcf, 0x48, 0x29, 0xcd, 0x48, 0xcd, 0x29, 0xd0, 0x4f,
	0x2c, 0xc8, 0x8c, 0xcf, 0x2f, 0x48, 0xcd, 0x8b, 0x2f, 0x4e, 0xc9, 0xd6, 0x2f, 0x4e, 0xce, 0xc8,
	0xcf, 0xcf, 0x09, 0xc9, 0xcc, 0x4d, 0x45, 0x62, 0xea, 0x15, 0x14, 0xe5, 0x97, 0xe4, 0x0b, 0x71,
	0x21, 0x44, 0x94, 0x14, 0xb8, 0xb8, 0x82, 0xc1, 0xbc, 0xc8, 0xd4, 0xc4, 0x22, 0x21, 0x21, 0x2e,
	0x16, 0x10, 0x2d, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x1a, 0x04, 0x66, 0x2b, 0xc9, 0x70, 0x71, 0x04,
	0xa7, 0xe6, 0xa6, 0x16, 0x97, 0xa4, 0x16, 0x09, 0x09, 0x70, 0x31, 0xfb, 0x95, 0xe6, 0x42, 0xa5,
	0x41, 0xcc, 0x24, 0x36, 0xb0, 0x91, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd0, 0x76, 0x58,
	0x3d, 0x91, 0x00, 0x00, 0x00,
}
